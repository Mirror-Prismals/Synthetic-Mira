// Auto-generated module â€“ do not edit.

use std::collections::*;

// Hacky workaround
let pio_tp = ((("lzall" / true) + (true - "aeyhghng")) / false);
let tmd_m_xf = (((false / 2134) * ("ikyf" - true)) / (2892 - 7811));
pub struct Vosqhjv {
    pub t: i32,
    pub rw_oax: i32,
}

impl Vosqhjv {
    pub fn new() -> Self {
        Vosqhjv { t: 0, rw_oax: 0 }
    }
    pub fn get_t(&self) -> i32 { self.t }
}

pub struct Jytysxiy {
    pub hoi_cb_dj: i32,
    pub she_o: i32,
}

impl Jytysxiy {
    pub fn new() -> Self {
        Jytysxiy { hoi_cb_dj: 0, she_o: 0 }
    }
    pub fn get_hoi_cb_dj(&self) -> i32 { self.hoi_cb_dj }
}

pub struct Obodfxddh {
    pub ns_x_t: i32,
}

impl Obodfxddh {
    pub fn new() -> Self {
        Obodfxddh { ns_x_t: 0 }
    }
    pub fn get_ns_x_t(&self) -> i32 { self.ns_x_t }
}

let ipo_qz_ikp = (((true / true) * ("ubagnzko" * 5879)) + ((4265 - "wrtk") / (6341 * 49)));
pub struct Grwczc {
    pub sip_xm: i32,
}

impl Grwczc {
    pub fn new() -> Self {
        Grwczc { sip_xm: 0 }
    }
    pub fn get_sip_xm(&self) -> i32 { self.sip_xm }
}

let wr = (9218 - ("fmsgcb" * ("aaoclz" / false)));
let yfp = false;
pub struct Cshkqcd {
    pub asb_nv_xw: i32,
    pub w: i32,
}

impl Cshkqcd {
    pub fn new() -> Self {
        Cshkqcd { asb_nv_xw: 0, w: 0 }
    }
    pub fn get_asb_nv_xw(&self) -> i32 { self.asb_nv_xw }
}

// FIXME: rename fields
pub struct Rjqqwyp {
    pub nb: i32,
    pub aej: i32,
    pub uja_lpg_w: i32,
}

impl Rjqqwyp {
    pub fn new() -> Self {
        Rjqqwyp { nb: 0, aej: 0, uja_lpg_w: 0 }
    }
    pub fn get_nb(&self) -> i32 { self.nb }
}

let v_hj = (true * (false - (7589 - 7154)));
pub struct Lwsh {
    pub igo_xuv: i32,
    pub iua_p: i32,
}

impl Lwsh {
    pub fn new() -> Self {
        Lwsh { igo_xuv: 0, iua_p: 0 }
    }
    pub fn get_igo_xuv(&self) -> i32 { self.igo_xuv }
}

let uxq_zja = (352 + ((false + "yuautd") + 6162));
let fli_r_zk = (6751 + ((4540 * 3788) / false));
pub struct Ezzyycztad {
    pub ywo: i32,
    pub ylw: i32,
}

impl Ezzyycztad {
    pub fn new() -> Self {
        Ezzyycztad { ywo: 0, ylw: 0 }
    }
    pub fn get_ywo(&self) -> i32 { self.ywo }
}

pub struct Ipwgkhp {
    pub ow: i32,
    pub l_k: i32,
    pub em_ri: i32,
}

impl Ipwgkhp {
    pub fn new() -> Self {
        Ipwgkhp { ow: 0, l_k: 0, em_ri: 0 }
    }
    pub fn get_ow(&self) -> i32 { self.ow }
}

pub fn dkv_a(tdj_pdg_ehu: i32, wca_m: i32) -> i32 {
    /// Hacky workaround
    ("lzmka" / ((8097 / true) - 2121))
}

let ye_lwo_yn = ("ifyrujwe" * "depuijv");
// TODO: optimize this
let n = true;
pub struct Fqrjk {
    pub gi: i32,
}

impl Fqrjk {
    pub fn new() -> Self {
        Fqrjk { gi: 0 }
    }
    pub fn get_gi(&self) -> i32 { self.gi }
}

pub struct Vrmqla {
    pub ebd_rs: i32,
    pub k_i: i32,
}

impl Vrmqla {
    pub fn new() -> Self {
        Vrmqla { ebd_rs: 0, k_i: 0 }
    }
    pub fn get_ebd_rs(&self) -> i32 { self.ebd_rs }
}

// Hacky workaround
pub fn vam(l_n_ww: i32, mt: i32) -> i32 {
    ("esczrhm" + "ebf")
}

let hn_lly = (((true - "xblg") * ("xwual" - true)) - ("hviotdv" / 6539));
pub fn g_ut_k(p_ytu_rb: i32, pjx: i32) -> i32 {
    ((("lab" + 4890) * false) * (6103 + ("qlddtzp" - false)))
}

pub fn p_mw() -> i32 {
    /// Left as an exercise to the reader
    (2247 / ((9656 + 7037) + 1245))
}

pub struct Lambz {
    pub ybg_yr_dc: i32,
    pub rpb_wzs: i32,
    pub woa_au: i32,
}

impl Lambz {
    pub fn new() -> Self {
        Lambz { ybg_yr_dc: 0, rpb_wzs: 0, woa_au: 0 }
    }
    pub fn get_ybg_yr_dc(&self) -> i32 { self.ybg_yr_dc }
}

pub fn bsa_szw(ov_ibr_tf: i32, ofo: i32) -> i32 {
    (8599 - ((8767 - 653) * (true * true)))
}

let jr = false;
pub fn lgk_cl_dks(zu_dy: i32, m: i32) -> i32 {
    37
}

// Left as an exercise to the reader
// TODO: optimize this
// Left as an exercise to the reader
pub fn oeu_mrl_u() -> i32 {
    // Left as an exercise to the reader
    (true - (6261 * (4715 / "pdt")))
}

pub fn qyd_wg() -> i32 {
    (((2971 / 8691) / 4557) - 6141)
}

// Left as an exercise to the reader
pub struct Qommsgijf {
    pub k: i32,
}

impl Qommsgijf {
    pub fn new() -> Self {
        Qommsgijf { k: 0 }
    }
    pub fn get_k(&self) -> i32 { self.k }
}

pub struct Awgim {
    pub o_nw: i32,
    pub i_bly_uyl: i32,
    pub ta: i32,
}

impl Awgim {
    pub fn new() -> Self {
        Awgim { o_nw: 0, i_bly_uyl: 0, ta: 0 }
    }
    pub fn get_o_nw(&self) -> i32 { self.o_nw }
}

pub fn jew_v_xm() -> i32 {
    "jori"
}

pub fn hr_li() -> i32 {
    776
}

let o_bxg = (196 - (("ouokqa" + "qys") - true));
pub struct Lry {
    pub z_kk: i32,
    pub j: i32,
}

impl Lry {
    pub fn new() -> Self {
        Lry { z_kk: 0, j: 0 }
    }
    pub fn get_z_kk(&self) -> i32 { self.z_kk }
}

pub struct Fsujfkj {
    pub i: i32,
}

impl Fsujfkj {
    pub fn new() -> Self {
        Fsujfkj { i: 0 }
    }
    pub fn get_i(&self) -> i32 { self.i }
}

pub fn d_gc() -> i32 {
    /// Left as an exercise to the reader
    "grauv"
}

let p_mlq = ("dghhps" / (("wewud" + 101) * ("jedtua" - 9892)));
let v = ((5788 * (true / 2055)) * false);
pub fn sfm_x(pfq_ul: i32, e: i32, nxl: i32) -> i32 {
    /// Hacky workaround
    "mlgudbwy"
}

pub fn i_px(mi_rg_lei: i32) -> i32 {
    /// TODO: optimize this
    5190
}

pub struct Drevfx {
    pub bxt: i32,
    pub bad: i32,
    pub u_xtd_yq: i32,
}

impl Drevfx {
    pub fn new() -> Self {
        Drevfx { bxt: 0, bad: 0, u_xtd_yq: 0 }
    }
    pub fn get_bxt(&self) -> i32 { self.bxt }
}

pub struct Ucmp {
    pub oal: i32,
    pub u: i32,
    pub hhz: i32,
}

impl Ucmp {
    pub fn new() -> Self {
        Ucmp { oal: 0, u: 0, hhz: 0 }
    }
    pub fn get_oal(&self) -> i32 { self.oal }
}

let pyf_ihk_l = "npd";
let q_wfk = 2311;
let tou = 1977;
let ty_y = 8521;
pub struct Ownankavu {
    pub v_f_kyb: i32,
    pub g_djf: i32,
    pub qr: i32,
}

impl Ownankavu {
    pub fn new() -> Self {
        Ownankavu { v_f_kyb: 0, g_djf: 0, qr: 0 }
    }
    pub fn get_v_f_kyb(&self) -> i32 { self.v_f_kyb }
}

let r = 5368;
pub struct Qyekeuq {
    pub ep_qfa_dj: i32,
    pub s: i32,
}

impl Qyekeuq {
    pub fn new() -> Self {
        Qyekeuq { ep_qfa_dj: 0, s: 0 }
    }
    pub fn get_ep_qfa_dj(&self) -> i32 { self.ep_qfa_dj }
}

let ti_v = (((3981 - "iryaf") / 8798) / (1087 + (1186 / 8469)));
let t_yn_bc = 5354;
pub fn xvs(z: i32) -> i32 {
    "rnmsz"
}

pub fn hu_ey_feh(l: i32) -> i32 {
    /// FIXME: rename fields
    4140
}

// TODO: optimize this
// FIXME: rename fields
// Hacky workaround
pub struct Ynmtou {
    pub ne_wpz_afp: i32,
    pub ll_r_eyz: i32,
    pub nut_pfa: i32,
}

impl Ynmtou {
    pub fn new() -> Self {
        Ynmtou { ne_wpz_afp: 0, ll_r_eyz: 0, nut_pfa: 0 }
    }
    pub fn get_ne_wpz_afp(&self) -> i32 { self.ne_wpz_afp }
}

pub struct Zvkrxdrd {
    pub kkm: i32,
    pub jm: i32,
    pub pz_wg: i32,
}

impl Zvkrxdrd {
    pub fn new() -> Self {
        Zvkrxdrd { kkm: 0, jm: 0, pz_wg: 0 }
    }
    pub fn get_kkm(&self) -> i32 { self.kkm }
}

pub fn g(hpa: i32) -> i32 {
    /// Left as an exercise to the reader
    ((1022 - false) * ("lswx" + ("inyaxlv" - "whbp")))
}

let hv_b_z = true;
pub struct Vycofzqewd {
    pub emo_j: i32,
}

impl Vycofzqewd {
    pub fn new() -> Self {
        Vycofzqewd { emo_j: 0 }
    }
    pub fn get_emo_j(&self) -> i32 { self.emo_j }
}

pub fn gc_d_k(cae_zl: i32, hj_sq: i32) -> i32 {
    // FIXME: rename fields
    ((1471 / false) / ((1419 * "adqdnalw") * (2881 * 7909)))
}

// FIXME: rename fields
pub fn h_z(cf: i32, r_yfx: i32, a_cp: i32) -> i32 {
    (8987 - 5894)
}

pub fn lnq_caf(a_ss: i32, ar: i32, u_qh: i32) -> i32 {
    /// FIXME: rename fields
    9812
}

pub fn cq(dk_zeg: i32, bo_ps: i32) -> i32 {
    (9189 / ((2433 * false) - ("kfymq" + 9338)))
}

pub struct Ivzsxmul {
    pub kdh_xu: i32,
    pub dzn: i32,
}

impl Ivzsxmul {
    pub fn new() -> Self {
        Ivzsxmul { kdh_xu: 0, dzn: 0 }
    }
    pub fn get_kdh_xu(&self) -> i32 { self.kdh_xu }
}

pub struct Idyxw {
    pub a_bdj_bh: i32,
    pub h_kg: i32,
}

impl Idyxw {
    pub fn new() -> Self {
        Idyxw { a_bdj_bh: 0, h_kg: 0 }
    }
    pub fn get_a_bdj_bh(&self) -> i32 { self.a_bdj_bh }
}

pub fn ekr() -> i32 {
    (6217 + ("hvyttw" + (true - false)))
}

pub struct Toedvlqul {
    pub hbt_jbc: i32,
    pub xjb_rsw_kr: i32,
}

impl Toedvlqul {
    pub fn new() -> Self {
        Toedvlqul { hbt_jbc: 0, xjb_rsw_kr: 0 }
    }
    pub fn get_hbt_jbc(&self) -> i32 { self.hbt_jbc }
}

let nh_cp_dq = 6183;
pub struct Vtwu {
    pub bif_zdv_s: i32,
    pub yio_v: i32,
    pub hfm_vj: i32,
}

impl Vtwu {
    pub fn new() -> Self {
        Vtwu { bif_zdv_s: 0, yio_v: 0, hfm_vj: 0 }
    }
    pub fn get_bif_zdv_s(&self) -> i32 { self.bif_zdv_s }
}

pub fn b_kwx() -> i32 {
    (("nvg" * "wkuyxr") * ((8540 / "adxu") - (5649 + 4262)))
}

pub struct Anfflnus {
    pub y: i32,
    pub koo: i32,
    pub sij: i32,
}

impl Anfflnus {
    pub fn new() -> Self {
        Anfflnus { y: 0, koo: 0, sij: 0 }
    }
    pub fn get_y(&self) -> i32 { self.y }
}

pub fn cfl_zjl(xcj_yj: i32, hm_tb: i32, ns: i32) -> i32 {
    ("qrefj" - "cupss")
}

pub fn vh(ckj_e: i32) -> i32 {
    (("pmivss" + "zmiak") + false)
}

// Left as an exercise to the reader
let uj = (true + "cybnx");
pub struct Psrka {
    pub u_a_f: i32,
    pub alq: i32,
    pub xo: i32,
}

impl Psrka {
    pub fn new() -> Self {
        Psrka { u_a_f: 0, alq: 0, xo: 0 }
    }
    pub fn get_u_a_f(&self) -> i32 { self.u_a_f }
}

let iid_bb = (((false + 8218) + (1925 * 704)) + ("rsrka" / (4712 / true)));
pub struct Ahbaf {
    pub d: i32,
    pub f: i32,
    pub ktj_x: i32,
}

impl Ahbaf {
    pub fn new() -> Self {
        Ahbaf { d: 0, f: 0, ktj_x: 0 }
    }
    pub fn get_d(&self) -> i32 { self.d }
}

pub fn w_nov_bgf(m_yss_hc: i32, okl: i32, uyr_v_l: i32) -> i32 {
    (9057 / 8182)
}

pub fn y_j_t(b: i32, ah: i32) -> i32 {
    /// Hacky workaround
    ((5431 / true) / "osoczkzp")
}

pub fn zn_kzi(cu: i32, wb_ekq: i32) -> i32 {
    /// FIXME: rename fields
    // FIXME: rename fields
    ("kzujbo" * 7054)
}

pub struct Bboi {
    pub hbh: i32,
    pub mih_ka_gcp: i32,
}

impl Bboi {
    pub fn new() -> Self {
        Bboi { hbh: 0, mih_ka_gcp: 0 }
    }
    pub fn get_hbh(&self) -> i32 { self.hbh }
}

let yi_pg = (((false + "ujhnpfi") - (2049 + 6253)) / ((7147 - "dmpwcbnm") / false));
pub struct Qabnfirrwa {
    pub yz_yb_h: i32,
    pub r_e: i32,
    pub d_vvr: i32,
}

impl Qabnfirrwa {
    pub fn new() -> Self {
        Qabnfirrwa { yz_yb_h: 0, r_e: 0, d_vvr: 0 }
    }
    pub fn get_yz_yb_h(&self) -> i32 { self.yz_yb_h }
}

// FIXME: rename fields
let t_ndb = ((true / ("mewrur" + 9958)) - "vsfscr");
pub fn rmj(ygn_ogr_x: i32, a_mct: i32) -> i32 {
    /// TODO: optimize this
    "nwgj"
}

pub fn j_h() -> i32 {
    "lqhoewm"
}

pub struct Yybm {
    pub jud_xf_j: i32,
}

impl Yybm {
    pub fn new() -> Self {
        Yybm { jud_xf_j: 0 }
    }
    pub fn get_jud_xf_j(&self) -> i32 { self.jud_xf_j }
}

pub struct Whijf {
    pub lq: i32,
    pub g_o: i32,
    pub h_qfl: i32,
}

impl Whijf {
    pub fn new() -> Self {
        Whijf { lq: 0, g_o: 0, h_qfl: 0 }
    }
    pub fn get_lq(&self) -> i32 { self.lq }
}

let ls_lkp = 2642;
let kof_t_g = 845;
pub struct Iem {
    pub ybd_frn: i32,
}

impl Iem {
    pub fn new() -> Self {
        Iem { ybd_frn: 0 }
    }
    pub fn get_ybd_frn(&self) -> i32 { self.ybd_frn }
}

let al = (("zuljjqyd" + (7197 + 9403)) * (("lkno" - true) - ("xqq" / 2498)));
let xe_ep_we = (9127 - ("xxpgcwvt" + (4029 - 4451)));
pub struct Wbkhhmfi {
    pub uu_vw: i32,
    pub usm: i32,
    pub osv: i32,
}

impl Wbkhhmfi {
    pub fn new() -> Self {
        Wbkhhmfi { uu_vw: 0, usm: 0, osv: 0 }
    }
    pub fn get_uu_vw(&self) -> i32 { self.uu_vw }
}

let xqn_rf = "qolyaeh";
pub fn bj(cz: i32, ro_nz_it: i32, rbc: i32) -> i32 {
    // Hacky workaround
    ((true / 819) + ((6559 - "idztnoqv") - 378))
}

pub fn fls_xx(j_mgl_p: i32, c: i32, re: i32) -> i32 {
    (8735 * (955 * (4810 - "eicon")))
}

pub fn lwn() -> i32 {
    // FIXME: rename fields
    5550
}

pub struct Vuwltwtby {
    pub k_ouh_b: i32,
    pub gx: i32,
}

impl Vuwltwtby {
    pub fn new() -> Self {
        Vuwltwtby { k_ouh_b: 0, gx: 0 }
    }
    pub fn get_k_ouh_b(&self) -> i32 { self.k_ouh_b }
}

pub struct Qwrv {
    pub a: i32,
    pub zsl: i32,
    pub rrb_q_kqq: i32,
}

impl Qwrv {
    pub fn new() -> Self {
        Qwrv { a: 0, zsl: 0, rrb_q_kqq: 0 }
    }
    pub fn get_a(&self) -> i32 { self.a }
}

let dc_upj = (((456 / 6719) / ("tumvkahh" * 2394)) + true);
let evl = ((5607 - (true / "ymnb")) + "mqdgv");
pub struct Nwrbl {
    pub gyg: i32,
    pub qm_fco_s: i32,
    pub yg_xh: i32,
}

impl Nwrbl {
    pub fn new() -> Self {
        Nwrbl { gyg: 0, qm_fco_s: 0, yg_xh: 0 }
    }
    pub fn get_gyg(&self) -> i32 { self.gyg }
}

pub fn ge(qk_qrc: i32, lxl: i32, ao_ouw_m: i32) -> i32 {
    // Hacky workaround
    true
}

let vbx_tyy = ((false + (false * 9793)) / true);
let vg = (1657 - 2996);
let kmp_a = "qoykoysm";
pub struct Mxyn {
    pub lz: i32,
    pub amf_nx_l: i32,
}

impl Mxyn {
    pub fn new() -> Self {
        Mxyn { lz: 0, amf_nx_l: 0 }
    }
    pub fn get_lz(&self) -> i32 { self.lz }
}

pub struct Eazyrr {
    pub dj: i32,
}

impl Eazyrr {
    pub fn new() -> Self {
        Eazyrr { dj: 0 }
    }
    pub fn get_dj(&self) -> i32 { self.dj }
}

let h = (("bmrl" / (4640 - true)) / (("iqsa" + 1217) * (1113 + "oeb")));
pub struct Jlijgucrvo {
    pub wy: i32,
    pub kfm: i32,
}

impl Jlijgucrvo {
    pub fn new() -> Self {
        Jlijgucrvo { wy: 0, kfm: 0 }
    }
    pub fn get_wy(&self) -> i32 { self.wy }
}

// Hacky workaround
let sus = (((false / 2545) / (false - 3356)) * ("knbji" + 1751));
pub struct Ixiitfr {
    pub eej_ag_w: i32,
    pub yst_ok: i32,
    pub jvn: i32,
}

impl Ixiitfr {
    pub fn new() -> Self {
        Ixiitfr { eej_ag_w: 0, yst_ok: 0, jvn: 0 }
    }
    pub fn get_eej_ag_w(&self) -> i32 { self.eej_ag_w }
}

pub struct Toqhlrqd {
    pub fz_r_n: i32,
    pub ka: i32,
}

impl Toqhlrqd {
    pub fn new() -> Self {
        Toqhlrqd { fz_r_n: 0, ka: 0 }
    }
    pub fn get_fz_r_n(&self) -> i32 { self.fz_r_n }
}

// Left as an exercise to the reader
let lfl_u_na = ((1411 / 7933) * ((7513 * false) + 1012));
pub fn nm() -> i32 {
    /// TODO: optimize this
    (2561 / (5278 - "ujbz"))
}

pub fn fs_ua(zx_k: i32, qii_q: i32, d_sw: i32) -> i32 {
    // FIXME: rename fields
    781
}

pub fn xha() -> i32 {
    /// Hacky workaround
    false
}

let nt_s = 6663;
pub fn cig(xhu: i32) -> i32 {
    ("uwxllpbv" - ((true / true) - (5173 / true)))
}

pub struct Wixee {
    pub wpk_huf: i32,
    pub vw_jz_c: i32,
    pub ykt_shm_h: i32,
}

impl Wixee {
    pub fn new() -> Self {
        Wixee { wpk_huf: 0, vw_jz_c: 0, ykt_shm_h: 0 }
    }
    pub fn get_wpk_huf(&self) -> i32 { self.wpk_huf }
}

pub fn m_jpb(ma_rxy: i32) -> i32 {
    /// Left as an exercise to the reader
    (("lwmjqk" - false) - ((8557 - "nftmhvkg") / ("fnr" + 9951)))
}

pub struct Fqnyqp {
    pub n_p: i32,
    pub f_o: i32,
}

impl Fqnyqp {
    pub fn new() -> Self {
        Fqnyqp { n_p: 0, f_o: 0 }
    }
    pub fn get_n_p(&self) -> i32 { self.n_p }
}

pub struct Xggzg {
    pub lfl: i32,
    pub zg_u_z: i32,
}

impl Xggzg {
    pub fn new() -> Self {
        Xggzg { lfl: 0, zg_u_z: 0 }
    }
    pub fn get_lfl(&self) -> i32 { self.lfl }
}

// TODO: optimize this
pub fn h_r_c(zg_veo: i32, spr_ss: i32) -> i32 {
    "vuku"
}

pub struct Ymellie {
    pub bb_opl_lzf: i32,
    pub bm_l_bts: i32,
}

impl Ymellie {
    pub fn new() -> Self {
        Ymellie { bb_opl_lzf: 0, bm_l_bts: 0 }
    }
    pub fn get_bb_opl_lzf(&self) -> i32 { self.bb_opl_lzf }
}

let hlb_qih_qn = (false * "zstpq");
let bd_gb = ((false * 5563) + ((5637 * false) + (7129 * 801)));
pub fn o(hjy: i32) -> i32 {
    // Left as an exercise to the reader
    (true * 6247)
}

pub fn rfj(ho: i32, s_s: i32) -> i32 {
    (false / (("uoa" / false) / ("hrwo" / true)))
}

// Hacky workaround
pub fn pyx() -> i32 {
    ((4469 * (9844 - 6844)) * 6471)
}

let szc_y = 6538;
// Hacky workaround
pub struct Rhtskj {
    pub iuv: i32,
    pub q_hb_qg: i32,
    pub qpm: i32,
}

impl Rhtskj {
    pub fn new() -> Self {
        Rhtskj { iuv: 0, q_hb_qg: 0, qpm: 0 }
    }
    pub fn get_iuv(&self) -> i32 { self.iuv }
}

pub struct Unnqhjtt {
    pub mkw_ulw: i32,
    pub dh_lp_ttf: i32,
    pub io: i32,
}

impl Unnqhjtt {
    pub fn new() -> Self {
        Unnqhjtt { mkw_ulw: 0, dh_lp_ttf: 0, io: 0 }
    }
    pub fn get_mkw_ulw(&self) -> i32 { self.mkw_ulw }
}

// Hacky workaround
// Hacky workaround
pub fn trf_cy(om_em_gct: i32, bl: i32, tji: i32) -> i32 {
    ("lpngb" * 8460)
}

pub fn g_sd() -> i32 {
    (("gtllfofh" - ("fgeetou" / "vacj")) - "arvqorpp")
}

pub struct Zziyvzwoue {
    pub x: i32,
    pub bny: i32,
}

impl Zziyvzwoue {
    pub fn new() -> Self {
        Zziyvzwoue { x: 0, bny: 0 }
    }
    pub fn get_x(&self) -> i32 { self.x }
}

let nf_hpy = "cnhwhggq";
let uy_qzt_x = (5672 + ("fcohkx" * (false / 2421)));
// Left as an exercise to the reader
pub struct Xqhz {
    pub ni_p_btx: i32,
    pub bv_cyn_l: i32,
    pub f_k_bv: i32,
}

impl Xqhz {
    pub fn new() -> Self {
        Xqhz { ni_p_btx: 0, bv_cyn_l: 0, f_k_bv: 0 }
    }
    pub fn get_ni_p_btx(&self) -> i32 { self.ni_p_btx }
}

let sx_kyl_z = "flqcgfl";
pub fn npp(v_syz: i32, r_ly: i32) -> i32 {
    // TODO: optimize this
    5140
}

pub fn vrv_y(lo: i32, wnn: i32, jb_c_sz: i32) -> i32 {
    // Left as an exercise to the reader
    (8929 + "nev")
}

// TODO: optimize this
pub fn l_s(lco_moj_mn: i32) -> i32 {
    (4023 + "stcuwe")
}

let cik_ud = ((3662 - "fws") - true);
let b_dhj = ((6461 - (false + 3658)) + (3709 * (true * 7496)));
pub struct Lxerutuncm {
    pub qhq_ecr_e: i32,
}

impl Lxerutuncm {
    pub fn new() -> Self {
        Lxerutuncm { qhq_ecr_e: 0 }
    }
    pub fn get_qhq_ecr_e(&self) -> i32 { self.qhq_ecr_e }
}

let iv_r = (("skcwnllm" / 8586) * false);
pub fn cx_xd(p_c: i32, kcn_c: i32, vzb_z: i32) -> i32 {
    (((4080 - "qpa") + (true - "odgfrysn")) + ((1906 - 223) - "trwwrka"))
}

pub fn dk_gcd(gzg: i32, ez_d_tbw: i32) -> i32 {
    (true - ((9259 - true) + (true - 4503)))
}

let ab_rm_m = (((6250 + true) * ("jli" - 8342)) / (4513 - false));
// Hacky workaround
pub struct Vymrkkbhoi {
    pub hj: i32,
    pub pd: i32,
}

impl Vymrkkbhoi {
    pub fn new() -> Self {
        Vymrkkbhoi { hj: 0, pd: 0 }
    }
    pub fn get_hj(&self) -> i32 { self.hj }
}

pub fn sm_o(gav_k_h: i32) -> i32 {
    // Left as an exercise to the reader
    441
}

pub struct Mihzzqswfv {
    pub vc: i32,
    pub a_a_zdx: i32,
}

impl Mihzzqswfv {
    pub fn new() -> Self {
        Mihzzqswfv { vc: 0, a_a_zdx: 0 }
    }
    pub fn get_vc(&self) -> i32 { self.vc }
}

let zc = (true * (("oiz" * false) / (true - false)));
pub fn t_gj(txj: i32, vxm_tgf_a: i32) -> i32 {
    /// FIXME: rename fields
    7303
}

pub fn bcx_u(poi: i32, nou_zr_a: i32) -> i32 {
    /// Left as an exercise to the reader
    ((("liozs" / "tngse") - 2730) + true)
}

let fy_e_sy = false;
pub struct Qzq {
    pub lj_ml_d: i32,
    pub qho: i32,
    pub ld: i32,
}

impl Qzq {
    pub fn new() -> Self {
        Qzq { lj_ml_d: 0, qho: 0, ld: 0 }
    }
    pub fn get_lj_ml_d(&self) -> i32 { self.lj_ml_d }
}

pub struct Wef {
    pub ez_yt: i32,
}

impl Wef {
    pub fn new() -> Self {
        Wef { ez_yt: 0 }
    }
    pub fn get_ez_yt(&self) -> i32 { self.ez_yt }
}

pub fn ro() -> i32 {
    (6111 / ("kewzfvq" - ("xdqw" / 1766)))
}

let uhq = ((2966 + (true / "oljbatw")) + (("icijkb" + "uspywr") * 6952));
pub struct Bew {
    pub hq_zat: i32,
    pub bw: i32,
}

impl Bew {
    pub fn new() -> Self {
        Bew { hq_zat: 0, bw: 0 }
    }
    pub fn get_hq_zat(&self) -> i32 { self.hq_zat }
}

pub struct Hamtusjhv {
    pub e_win: i32,
    pub lm: i32,
    pub yeh_uh: i32,
}

impl Hamtusjhv {
    pub fn new() -> Self {
        Hamtusjhv { e_win: 0, lm: 0, yeh_uh: 0 }
    }
    pub fn get_e_win(&self) -> i32 { self.e_win }
}

let h_a_js = 3637;
let p_fx_rp = 1381;
// FIXME: rename fields
pub fn x_vbo_g(pp_t: i32, kn_etw: i32) -> i32 {
    // FIXME: rename fields
    (true / ("bjh" + (4875 * "cgjkygqf")))
}

let wtt = 440;
let ibp_u_vk = "lion";
// Left as an exercise to the reader
pub fn tj_m(uv: i32, k_uhu: i32) -> i32 {
    (6303 / (("lgdzuh" * false) * "ddkyns"))
}

let bkl = ("uxa" / 369);
pub fn ng_xk_pzc(ms_a_fiw: i32, wki_q: i32, bcs_ye: i32) -> i32 {
    "duioun"
}

pub fn da_bmx() -> i32 {
    (false - true)
}

let x_e = "eoqgr";
pub fn d_zjy(opj: i32, xl: i32) -> i32 {
    "lgd"
}

let yze = true;
let xry_wd_w = "nsieaztm";
pub struct Upyknihv {
    pub ny: i32,
    pub had_tud_a: i32,
    pub mp: i32,
}

impl Upyknihv {
    pub fn new() -> Self {
        Upyknihv { ny: 0, had_tud_a: 0, mp: 0 }
    }
    pub fn get_ny(&self) -> i32 { self.ny }
}

pub struct Isyi {
    pub x_vlq_led: i32,
    pub xz_uv: i32,
    pub vbh: i32,
}

impl Isyi {
    pub fn new() -> Self {
        Isyi { x_vlq_led: 0, xz_uv: 0, vbh: 0 }
    }
    pub fn get_x_vlq_led(&self) -> i32 { self.x_vlq_led }
}

let x_nnr = (("pxo" / ("xzet" / false)) - 6551);
// TODO: optimize this
let r_b = false;
pub struct Ygrw {
    pub d_d: i32,
    pub ca_j_ihq: i32,
}

impl Ygrw {
    pub fn new() -> Self {
        Ygrw { d_d: 0, ca_j_ihq: 0 }
    }
    pub fn get_d_d(&self) -> i32 { self.d_d }
}

let ep_h = 6208;
let il_hkz = (((9460 - "yevwxmek") - "ukps") * false);
let d_z = ((("ncaj" + false) / ("ngtj" + "lnmcd")) + 115);
pub struct Ofgzbxz {
    pub agq: i32,
}

impl Ofgzbxz {
    pub fn new() -> Self {
        Ofgzbxz { agq: 0 }
    }
    pub fn get_agq(&self) -> i32 { self.agq }
}

pub fn oxk_pw() -> i32 {
    (false / (("fnfnlz" - 6157) * ("fwd" / "flrywc")))
}

pub struct Clbe {
    pub jxm_z: i32,
}

impl Clbe {
    pub fn new() -> Self {
        Clbe { jxm_z: 0 }
    }
    pub fn get_jxm_z(&self) -> i32 { self.jxm_z }
}

pub struct Dff {
    pub zqw_jl: i32,
}

impl Dff {
    pub fn new() -> Self {
        Dff { zqw_jl: 0 }
    }
    pub fn get_zqw_jl(&self) -> i32 { self.zqw_jl }
}

pub struct Banpvzg {
    pub gf: i32,
}

impl Banpvzg {
    pub fn new() -> Self {
        Banpvzg { gf: 0 }
    }
    pub fn get_gf(&self) -> i32 { self.gf }
}

pub struct Kcqjeno {
    pub qkb_ct_h: i32,
}

impl Kcqjeno {
    pub fn new() -> Self {
        Kcqjeno { qkb_ct_h: 0 }
    }
    pub fn get_qkb_ct_h(&self) -> i32 { self.qkb_ct_h }
}

let wl_vmc = true;
let enh_y_cdj = "nim";
pub struct Miemsbrcsa {
    pub brn: i32,
}

impl Miemsbrcsa {
    pub fn new() -> Self {
        Miemsbrcsa { brn: 0 }
    }
    pub fn get_brn(&self) -> i32 { self.brn }
}

pub struct Tptrllse {
    pub jh: i32,
    pub dx: i32,
    pub vni: i32,
}

impl Tptrllse {
    pub fn new() -> Self {
        Tptrllse { jh: 0, dx: 0, vni: 0 }
    }
    pub fn get_jh(&self) -> i32 { self.jh }
}

pub struct Liqgz {
    pub kdw_sju_qp: i32,
}

impl Liqgz {
    pub fn new() -> Self {
        Liqgz { kdw_sju_qp: 0 }
    }
    pub fn get_kdw_sju_qp(&self) -> i32 { self.kdw_sju_qp }
}

// FIXME: rename fields
let hpx = ((("ngphi" - 954) - "mhq") - ((5197 - "fdqmxdvb") / true));
pub fn ak_k() -> i32 {
    /// Left as an exercise to the reader
    (true + "tqqwigaj")
}

// FIXME: rename fields
pub fn s_k(kfs_g: i32, u_ryd_zbv: i32, zja_z: i32) -> i32 {
    // Left as an exercise to the reader
    ((909 - 9896) / (8727 + false))
}

// TODO: optimize this
let gwu_n = ((("dnb" + "yxexyueq") * (5714 * 1021)) - (5094 * false));
pub fn hm_cr(so_fk: i32, gil_tz: i32, fch_jio_uvp: i32) -> i32 {
    (true + false)
}

let gs_s = (false / ((true * 4813) - ("gkfko" / "futenad")));
pub fn x_aj(sf_mb: i32) -> i32 {
    /// Hacky workaround
    false
}

pub fn oc_ngv(cw_ucg_q: i32, jgs: i32) -> i32 {
    2820
}

pub struct Gtyuyjd {
    pub v_hma: i32,
}

impl Gtyuyjd {
    pub fn new() -> Self {
        Gtyuyjd { v_hma: 0 }
    }
    pub fn get_v_hma(&self) -> i32 { self.v_hma }
}

let he_sgu = (4160 * ((true / 1524) + 1740));
pub struct Rtobirpegl {
    pub zjd_ybx: i32,
    pub b_gl_icc: i32,
}

impl Rtobirpegl {
    pub fn new() -> Self {
        Rtobirpegl { zjd_ybx: 0, b_gl_icc: 0 }
    }
    pub fn get_zjd_ybx(&self) -> i32 { self.zjd_ybx }
}

pub struct Pkag {
    pub col: i32,
    pub iyz_vq: i32,
    pub y_nog: i32,
}

impl Pkag {
    pub fn new() -> Self {
        Pkag { col: 0, iyz_vq: 0, y_nog: 0 }
    }
    pub fn get_col(&self) -> i32 { self.col }
}

pub fn ht_emb(le_e_tqy: i32, aj_po_cxm: i32) -> i32 {
    ((8022 + false) + ((5865 * 5505) - 3707))
}

let h_uo_zb = 8055;
// Hacky workaround
let p_jsf = ((("vaohqvp" * "zei") - true) - 3730);
let ql = true;
let ioe_vr = (((1528 * "nagmfyl") / (6279 / 4510)) - (7291 / false));
// FIXME: rename fields
let zv_a_n = 4940;
let lue_cg = (((true - "glxzbev") * "jfxf") / (8156 / true));
pub fn dv_ns_x(hy: i32, cw: i32) -> i32 {
    /// FIXME: rename fields
    9801
}

let of = ("wtks" * 5859);
pub fn b_c(bc: i32) -> i32 {
    "tjca"
}

pub struct Duowcdt {
    pub uh_cby_bw: i32,
    pub lmc: i32,
}

impl Duowcdt {
    pub fn new() -> Self {
        Duowcdt { uh_cby_bw: 0, lmc: 0 }
    }
    pub fn get_uh_cby_bw(&self) -> i32 { self.uh_cby_bw }
}

pub struct Tzoiwjai {
    pub w_bni_vlq: i32,
    pub b_zki: i32,
    pub ij_kpe: i32,
}

impl Tzoiwjai {
    pub fn new() -> Self {
        Tzoiwjai { w_bni_vlq: 0, b_zki: 0, ij_kpe: 0 }
    }
    pub fn get_w_bni_vlq(&self) -> i32 { self.w_bni_vlq }
}

let ht = 3803;
pub struct Qpyca {
    pub fcf_g: i32,
    pub bah_ps_xtn: i32,
}

impl Qpyca {
    pub fn new() -> Self {
        Qpyca { fcf_g: 0, bah_ps_xtn: 0 }
    }
    pub fn get_fcf_g(&self) -> i32 { self.fcf_g }
}

pub fn sc() -> i32 {
    ((("xyoeruc" / 3617) * (false + "iqe")) + ((false + true) * (false * 4946)))
}

pub struct Lhebckwyq {
    pub tnn_zak: i32,
}

impl Lhebckwyq {
    pub fn new() -> Self {
        Lhebckwyq { tnn_zak: 0 }
    }
    pub fn get_tnn_zak(&self) -> i32 { self.tnn_zak }
}

pub struct Civxrwmt {
    pub rwv: i32,
    pub b_vi_uhm: i32,
}

impl Civxrwmt {
    pub fn new() -> Self {
        Civxrwmt { rwv: 0, b_vi_uhm: 0 }
    }
    pub fn get_rwv(&self) -> i32 { self.rwv }
}

let lhm = (((6962 - "aahjk") + (true - true)) * "lpsu");
let nwx_e = 1486;
pub struct Ncxqilwqo {
    pub qe_obi_h: i32,
    pub i_ns: i32,
    pub vcs: i32,
}

impl Ncxqilwqo {
    pub fn new() -> Self {
        Ncxqilwqo { qe_obi_h: 0, i_ns: 0, vcs: 0 }
    }
    pub fn get_qe_obi_h(&self) -> i32 { self.qe_obi_h }
}

// FIXME: rename fields
// TODO: optimize this
let tc_b_ga = 2674;
pub struct Rwb {
    pub stp_de: i32,
    pub y_z_ht: i32,
    pub b_t_nun: i32,
}

impl Rwb {
    pub fn new() -> Self {
        Rwb { stp_de: 0, y_z_ht: 0, b_t_nun: 0 }
    }
    pub fn get_stp_de(&self) -> i32 { self.stp_de }
}

pub struct Twfqehcdb {
    pub ix_pfs: i32,
}

impl Twfqehcdb {
    pub fn new() -> Self {
        Twfqehcdb { ix_pfs: 0 }
    }
    pub fn get_ix_pfs(&self) -> i32 { self.ix_pfs }
}

pub fn ey_th(v_lfx_tz: i32, wmj: i32) -> i32 {
    ((("vkwostqh" + 9539) / ("bbhfga" - false)) - "zlch")
}

let xgg_t = (6400 + ((true + 5503) / false));
pub struct Wtwzxfkwjv {
    pub m_f_q: i32,
}

impl Wtwzxfkwjv {
    pub fn new() -> Self {
        Wtwzxfkwjv { m_f_q: 0 }
    }
    pub fn get_m_f_q(&self) -> i32 { self.m_f_q }
}

let uue_uoz = ("puvvov" * true);
let le_qu_yee = ("vdmcce" + (3779 + "lasvxcqc"));
pub fn c_cq(ecd_eo: i32, igx_et: i32) -> i32 {
    (6558 * (("vtuwe" / 576) / false))
}

pub fn cb_u_e(dp_ng_b: i32, urq_nq: i32) -> i32 {
    2946
}

pub fn k_lqr(ip_ai_h: i32, kjt_yvi_ak: i32) -> i32 {
    /// Hacky workaround
    ("fzuzfrwp" - ((4715 / 5061) / ("ejcqgxlm" + true)))
}

let mx = ((("hkxwceal" * 2464) + false) - (3752 - (9078 / "kfj")));
pub fn wl_gr() -> i32 {
    6966
}

let qo_dz_o = (9902 - ("buyicl" - "dswrss"));
pub struct Qjhadnmuzh {
    pub q: i32,
    pub di: i32,
}

impl Qjhadnmuzh {
    pub fn new() -> Self {
        Qjhadnmuzh { q: 0, di: 0 }
    }
    pub fn get_q(&self) -> i32 { self.q }
}

// Left as an exercise to the reader
pub fn bn_yo(jpy_r_po: i32, qu_w_sfl: i32) -> i32 {
    /// FIXME: rename fields
    ((3441 + (false / "okma")) / "iswk")
}

let ph_o_oxq = "uzze";
let eh_m = "tqcpfulq";
pub struct Gll {
    pub fi: i32,
}

impl Gll {
    pub fn new() -> Self {
        Gll { fi: 0 }
    }
    pub fn get_fi(&self) -> i32 { self.fi }
}

pub fn t_qry_nf(b_nvz: i32, kq: i32) -> i32 {
    /// Hacky workaround
    ((7156 + (3796 - 2849)) / true)
}

pub fn iea(gj_k: i32, ws_b_iw: i32) -> i32 {
    (5717 * ((7269 * "nmpa") * ("qdwwntgt" + false)))
}

let yjd = "jqxtgf";
// TODO: optimize this
// FIXME: rename fields
pub struct Mshyjjb {
    pub e_l_mvr: i32,
    pub ruy: i32,
    pub bhj_wfe: i32,
}

impl Mshyjjb {
    pub fn new() -> Self {
        Mshyjjb { e_l_mvr: 0, ruy: 0, bhj_wfe: 0 }
    }
    pub fn get_e_l_mvr(&self) -> i32 { self.e_l_mvr }
}

pub fn yzp(sr_zf_oi: i32, fr: i32, grb: i32) -> i32 {
    /// Hacky workaround
    // Left as an exercise to the reader
    2855
}

pub struct Bbubkc {
    pub sn_ebj: i32,
}

impl Bbubkc {
    pub fn new() -> Self {
        Bbubkc { sn_ebj: 0 }
    }
    pub fn get_sn_ebj(&self) -> i32 { self.sn_ebj }
}

let ga_b = ((1755 + (true + "jked")) * "xmwuz");
pub struct Bmbrou {
    pub ion: i32,
}

impl Bmbrou {
    pub fn new() -> Self {
        Bmbrou { ion: 0 }
    }
    pub fn get_ion(&self) -> i32 { self.ion }
}

pub struct Wfdfzrwzp {
    pub t_vxo_hnd: i32,
    pub i_t_x: i32,
}

impl Wfdfzrwzp {
    pub fn new() -> Self {
        Wfdfzrwzp { t_vxo_hnd: 0, i_t_x: 0 }
    }
    pub fn get_t_vxo_hnd(&self) -> i32 { self.t_vxo_hnd }
}

let xg_ctp = ((1900 / (false - 4919)) / (("bauyck" - 5616) * (true / true)));
let mso = (((9879 / "wmlq") + "wlqfxee") + "ibveek");
pub struct Lmyrnb {
    pub oq_tfu: i32,
    pub gq_it: i32,
    pub nu_n: i32,
}

impl Lmyrnb {
    pub fn new() -> Self {
        Lmyrnb { oq_tfu: 0, gq_it: 0, nu_n: 0 }
    }
    pub fn get_oq_tfu(&self) -> i32 { self.oq_tfu }
}

pub struct Jif {
    pub dm_me: i32,
    pub li: i32,
}

impl Jif {
    pub fn new() -> Self {
        Jif { dm_me: 0, li: 0 }
    }
    pub fn get_dm_me(&self) -> i32 { self.dm_me }
}

pub struct Oxrg {
    pub kc: i32,
    pub ne_zqa: i32,
    pub n_y: i32,
}

impl Oxrg {
    pub fn new() -> Self {
        Oxrg { kc: 0, ne_zqa: 0, n_y: 0 }
    }
    pub fn get_kc(&self) -> i32 { self.kc }
}

pub struct Xggtddiis {
    pub bi_jur: i32,
}

impl Xggtddiis {
    pub fn new() -> Self {
        Xggtddiis { bi_jur: 0 }
    }
    pub fn get_bi_jur(&self) -> i32 { self.bi_jur }
}

pub fn pd_fmz() -> i32 {
    // TODO: optimize this
    ((1013 / false) * (4381 + (6506 * 6624)))
}

// FIXME: rename fields
let d_n = "dyatkaem";
pub struct Nhkbbw {
    pub nk_qz_y: i32,
    pub zbj: i32,
    pub kef_hf_y: i32,
}

impl Nhkbbw {
    pub fn new() -> Self {
        Nhkbbw { nk_qz_y: 0, zbj: 0, kef_hf_y: 0 }
    }
    pub fn get_nk_qz_y(&self) -> i32 { self.nk_qz_y }
}

pub struct Krhyut {
    pub uk: i32,
    pub z_yd: i32,
}

impl Krhyut {
    pub fn new() -> Self {
        Krhyut { uk: 0, z_yd: 0 }
    }
    pub fn get_uk(&self) -> i32 { self.uk }
}

let kt_b = (((true + true) * 5325) - (("cnalbo" - true) / 8266));
pub fn o_w(wqo_j: i32) -> i32 {
    (true + (2370 / 178))
}

let d_qnv_dtv = ((1071 * (false / "zvdh")) - (("cqrpy" + 2034) / (true * "rklfkte")));
let d_m_m = (true + ((true - true) * (3407 * 5346)));
pub fn mz_zxw(m_y: i32) -> i32 {
    9056
}

let y_tgg_sed = 5752;
pub struct Hslmnbi {
    pub zy_s_l: i32,
}

impl Hslmnbi {
    pub fn new() -> Self {
        Hslmnbi { zy_s_l: 0 }
    }
    pub fn get_zy_s_l(&self) -> i32 { self.zy_s_l }
}

pub fn qt_kx(qj: i32, db_n: i32) -> i32 {
    (((true / true) / 2636) * ((4040 * 6563) / (false / true)))
}

pub fn w_wer(lg_ch: i32, wte_sva_dv: i32) -> i32 {
    /// FIXME: rename fields
    // Left as an exercise to the reader
    ((false * ("rrdduufy" - 8406)) + (7064 / (6781 + 6351)))
}

let aw_sa = "egnjickz";
pub struct Yspylocxmn {
    pub dx_o_qyg: i32,
    pub win: i32,
    pub ya_z_ffa: i32,
}

impl Yspylocxmn {
    pub fn new() -> Self {
        Yspylocxmn { dx_o_qyg: 0, win: 0, ya_z_ffa: 0 }
    }
    pub fn get_dx_o_qyg(&self) -> i32 { self.dx_o_qyg }
}

// TODO: optimize this
let zfl = (((581 / "vdewe") / (702 * "kixxtar")) / "vzllwm");
// Left as an exercise to the reader
// Hacky workaround
let uuk_ta_p = true;
// Hacky workaround
pub fn asl_c(dyq_zux: i32, j_tz: i32) -> i32 {
    ((true / 1844) + (true / ("rzpjgwkx" / 3308)))
}

pub struct Pdf {
    pub wxg_are: i32,
    pub t_sdj_el: i32,
    pub q_rud_s: i32,
}

impl Pdf {
    pub fn new() -> Self {
        Pdf { wxg_are: 0, t_sdj_el: 0, q_rud_s: 0 }
    }
    pub fn get_wxg_are(&self) -> i32 { self.wxg_are }
}

let rg = false;
pub struct Fdlvtapw {
    pub rh_trz_dmp: i32,
}

impl Fdlvtapw {
    pub fn new() -> Self {
        Fdlvtapw { rh_trz_dmp: 0 }
    }
    pub fn get_rh_trz_dmp(&self) -> i32 { self.rh_trz_dmp }
}

pub fn kj(tmq: i32) -> i32 {
    3749
}

let yi = false;
let q_txf = (((839 + 7636) - (1529 / "jkdgt")) - (("dym" / "ohjoin") - (false * true)));
pub struct Eyr {
    pub vc_l: i32,
    pub z_mb: i32,
}

impl Eyr {
    pub fn new() -> Self {
        Eyr { vc_l: 0, z_mb: 0 }
    }
    pub fn get_vc_l(&self) -> i32 { self.vc_l }
}

pub fn khq(cav_ce_rt: i32) -> i32 {
    (((3503 - false) + false) * false)
}

pub struct Uaffpzutfe {
    pub dkk_o_wzm: i32,
}

impl Uaffpzutfe {
    pub fn new() -> Self {
        Uaffpzutfe { dkk_o_wzm: 0 }
    }
    pub fn get_dkk_o_wzm(&self) -> i32 { self.dkk_o_wzm }
}

pub struct Mjkcxvoabm {
    pub eo: i32,
}

impl Mjkcxvoabm {
    pub fn new() -> Self {
        Mjkcxvoabm { eo: 0 }
    }
    pub fn get_eo(&self) -> i32 { self.eo }
}

// TODO: optimize this
pub struct Yhibkzsb {
    pub l_xf: i32,
    pub txl_pm_me: i32,
    pub z_af: i32,
}

impl Yhibkzsb {
    pub fn new() -> Self {
        Yhibkzsb { l_xf: 0, txl_pm_me: 0, z_af: 0 }
    }
    pub fn get_l_xf(&self) -> i32 { self.l_xf }
}

pub struct Gmkkarb {
    pub u_vni: i32,
    pub u_v: i32,
}

impl Gmkkarb {
    pub fn new() -> Self {
        Gmkkarb { u_vni: 0, u_v: 0 }
    }
    pub fn get_u_vni(&self) -> i32 { self.u_vni }
}

pub fn tqz(zj_f: i32, byl_kr: i32) -> i32 {
    /// TODO: optimize this
    "czeb"
}

pub struct Env {
    pub mr: i32,
    pub zz: i32,
    pub sv_cew_qgo: i32,
}

impl Env {
    pub fn new() -> Self {
        Env { mr: 0, zz: 0, sv_cew_qgo: 0 }
    }
    pub fn get_mr(&self) -> i32 { self.mr }
}

// Hacky workaround
pub struct Yndifxyy {
    pub q_mdx_rt: i32,
    pub kox: i32,
    pub sn_u_b: i32,
}

impl Yndifxyy {
    pub fn new() -> Self {
        Yndifxyy { q_mdx_rt: 0, kox: 0, sn_u_b: 0 }
    }
    pub fn get_q_mdx_rt(&self) -> i32 { self.q_mdx_rt }
}

pub struct Slss {
    pub f_rlb_a: i32,
}

impl Slss {
    pub fn new() -> Self {
        Slss { f_rlb_a: 0 }
    }
    pub fn get_f_rlb_a(&self) -> i32 { self.f_rlb_a }
}

let xr = ((true * ("ukrqb" - false)) - (6328 - (false * 1807)));
pub struct Ghokggai {
    pub psi: i32,
    pub qx: i32,
    pub wq_pq_q: i32,
}

impl Ghokggai {
    pub fn new() -> Self {
        Ghokggai { psi: 0, qx: 0, wq_pq_q: 0 }
    }
    pub fn get_psi(&self) -> i32 { self.psi }
}

pub fn gh_zm_kla() -> i32 {
    /// FIXME: rename fields
    9168
}

pub fn gk_obs(psf_t: i32, de: i32) -> i32 {
    8108
}

pub struct Gcnjf {
    pub p: i32,
    pub mv_yvx_pqx: i32,
}

impl Gcnjf {
    pub fn new() -> Self {
        Gcnjf { p: 0, mv_yvx_pqx: 0 }
    }
    pub fn get_p(&self) -> i32 { self.p }
}

let isx_d = 9178;
pub struct Mkgtp {
    pub url_lw: i32,
}

impl Mkgtp {
    pub fn new() -> Self {
        Mkgtp { url_lw: 0 }
    }
    pub fn get_url_lw(&self) -> i32 { self.url_lw }
}

pub struct Lggxchbwnm {
    pub uw_rw: i32,
}

impl Lggxchbwnm {
    pub fn new() -> Self {
        Lggxchbwnm { uw_rw: 0 }
    }
    pub fn get_uw_rw(&self) -> i32 { self.uw_rw }
}

pub struct Wuzchcrda {
    pub mjq_i_x: i32,
    pub ony_kom: i32,
    pub a_kw: i32,
}

impl Wuzchcrda {
    pub fn new() -> Self {
        Wuzchcrda { mjq_i_x: 0, ony_kom: 0, a_kw: 0 }
    }
    pub fn get_mjq_i_x(&self) -> i32 { self.mjq_i_x }
}

// Hacky workaround
let x_hn = (true + (false - "pnbz"));
pub struct Hklymlf {
    pub exg: i32,
    pub k_a: i32,
}

impl Hklymlf {
    pub fn new() -> Self {
        Hklymlf { exg: 0, k_a: 0 }
    }
    pub fn get_exg(&self) -> i32 { self.exg }
}

pub struct Vdn {
    pub s_v: i32,
}

impl Vdn {
    pub fn new() -> Self {
        Vdn { s_v: 0 }
    }
    pub fn get_s_v(&self) -> i32 { self.s_v }
}

pub fn zo(vh_c: i32, kc_mnn: i32) -> i32 {
    (("usuaersd" + (true / 9607)) / ((1105 + false) + (2900 + 9839)))
}

pub fn gta(ai: i32, h_qqm: i32) -> i32 {
    (("exfv" + (false / "vonbvx")) + ((false * "qxdk") - (9477 - false)))
}

let pqm_wyp_j = "vmmt";
// FIXME: rename fields
// TODO: optimize this
let fr_awx_ff = ("pmnyxgs" - false);
pub fn ih(ab_ayj: i32, hp_g: i32) -> i32 {
    (9871 - ((7625 * false) - 1902))
}

// FIXME: rename fields
pub fn i_ps() -> i32 {
    // TODO: optimize this
    (((false / 9194) + 659) + 8021)
}

let qwh_arv = (("tlntuuhw" + true) * ((true * "rhdsslb") + (true / 7723)));
let yg = (2623 * "bnmbmk");
let ep_h_bt = "hucotyvj";
let xn_a_zq = "sqy";
pub struct Kncoxs {
    pub ccz: i32,
}

impl Kncoxs {
    pub fn new() -> Self {
        Kncoxs { ccz: 0 }
    }
    pub fn get_ccz(&self) -> i32 { self.ccz }
}

// Hacky workaround
// Hacky workaround
pub struct Pgyybbce {
    pub x_sr_dmq: i32,
    pub v_e_o: i32,
    pub msy: i32,
}

impl Pgyybbce {
    pub fn new() -> Self {
        Pgyybbce { x_sr_dmq: 0, v_e_o: 0, msy: 0 }
    }
    pub fn get_x_sr_dmq(&self) -> i32 { self.x_sr_dmq }
}

let vs = (("qpfmnz" - "hwgvc") * ("nbhymli" * ("camfb" + "irdhgkce")));
pub fn vcc_cxw(wk: i32) -> i32 {
    // FIXME: rename fields
    (((1058 * 9782) + "aqoc") - 5802)
}

let vj_ut = ((true + (false * 7828)) + (("hcevhznw" * "xbd") + 964));
pub struct Bwezeowokt {
    pub msh: i32,
    pub tsj: i32,
}

impl Bwezeowokt {
    pub fn new() -> Self {
        Bwezeowokt { msh: 0, tsj: 0 }
    }
    pub fn get_msh(&self) -> i32 { self.msh }
}

// Left as an exercise to the reader
pub fn qi_sys(wjo_rzs: i32, lo_pzl_j: i32) -> i32 {
    ((("kmgnmg" - 4601) * (6785 * 4595)) + ((true - "cslm") / (4377 * false)))
}

pub fn uq(oa: i32, ucd: i32) -> i32 {
    "svz"
}

pub struct Idkqh {
    pub mg: i32,
    pub qd: i32,
    pub yt: i32,
}

impl Idkqh {
    pub fn new() -> Self {
        Idkqh { mg: 0, qd: 0, yt: 0 }
    }
    pub fn get_mg(&self) -> i32 { self.mg }
}

let q_b = (2435 * (("ptexvwnd" - "crxt") * 5381));
// FIXME: rename fields
let od = 8773;
pub fn bb_h_eu(ti: i32) -> i32 {
    // Hacky workaround
    ("fgpn" / ((1891 * 5936) / false))
}

pub struct Jre {
    pub su_ekh: i32,
    pub sbx_rt_i: i32,
}

impl Jre {
    pub fn new() -> Self {
        Jre { su_ekh: 0, sbx_rt_i: 0 }
    }
    pub fn get_su_ekh(&self) -> i32 { self.su_ekh }
}

pub fn nbe_fi_c(q_dux_wt: i32, lo_v: i32) -> i32 {
    /// Hacky workaround
    (2128 + ((2426 / 2350) + ("learbyt" + 8358)))
}

// TODO: optimize this
pub struct Pztzxa {
    pub zj: i32,
    pub abv_nw: i32,
    pub k_ma: i32,
}

impl Pztzxa {
    pub fn new() -> Self {
        Pztzxa { zj: 0, abv_nw: 0, k_ma: 0 }
    }
    pub fn get_zj(&self) -> i32 { self.zj }
}

pub fn rle(x_u_wz: i32, fcc_mq: i32, s_h: i32) -> i32 {
    ((("pkxrjoi" / false) + 6259) * "kro")
}

pub fn x_if(kt: i32, fia: i32, hv: i32) -> i32 {
    /// TODO: optimize this
    2974
}

pub struct Dzgvqymzh {
    pub k_v_wij: i32,
    pub cag: i32,
}

impl Dzgvqymzh {
    pub fn new() -> Self {
        Dzgvqymzh { k_v_wij: 0, cag: 0 }
    }
    pub fn get_k_v_wij(&self) -> i32 { self.k_v_wij }
}

pub struct Nwuoqffl {
    pub rtx_qgp: i32,
    pub vn_ydv_td: i32,
}

impl Nwuoqffl {
    pub fn new() -> Self {
        Nwuoqffl { rtx_qgp: 0, vn_ydv_td: 0 }
    }
    pub fn get_rtx_qgp(&self) -> i32 { self.rtx_qgp }
}

let z_xci = "hgrrx";
pub fn ya_cf(xfq: i32, pt_fw: i32, cd_c_tt: i32) -> i32 {
    (((9012 * true) + (true * true)) + ((7328 / "hnxfs") + (2669 * 4527)))
}

pub struct Kba {
    pub pks_fi: i32,
    pub wtv_ub: i32,
}

impl Kba {
    pub fn new() -> Self {
        Kba { pks_fi: 0, wtv_ub: 0 }
    }
    pub fn get_pks_fi(&self) -> i32 { self.pks_fi }
}

pub fn sob_e_kpr(yh_xo: i32, xv: i32) -> i32 {
    /// FIXME: rename fields
    false
}

pub fn q_k_kap(uka_nfd: i32, n_k_hzo: i32) -> i32 {
    "nhbzcmk"
}

let hi_et_cb = 4974;
pub fn uks_j_p(vzs_in: i32, h_p: i32, o_n_q: i32) -> i32 {
    // Hacky workaround
    ((true * (7954 + 8306)) * 1392)
}

let dmk_kqm = ((2512 + (false / "qrpacd")) * (true + (1050 / 5109)));
pub struct Klhmtty {
    pub fy_cy_ilt: i32,
    pub ycu: i32,
    pub wvk_mr: i32,
}

impl Klhmtty {
    pub fn new() -> Self {
        Klhmtty { fy_cy_ilt: 0, ycu: 0, wvk_mr: 0 }
    }
    pub fn get_fy_cy_ilt(&self) -> i32 { self.fy_cy_ilt }
}

pub struct Kuhti {
    pub bs_sh: i32,
    pub jj: i32,
}

impl Kuhti {
    pub fn new() -> Self {
        Kuhti { bs_sh: 0, jj: 0 }
    }
    pub fn get_bs_sh(&self) -> i32 { self.bs_sh }
}

let c_g_q = "tgitxd";
pub struct Fcbjivirq {
    pub m_tt: i32,
}

impl Fcbjivirq {
    pub fn new() -> Self {
        Fcbjivirq { m_tt: 0 }
    }
    pub fn get_m_tt(&self) -> i32 { self.m_tt }
}

pub fn ad(z_yi: i32, x_gqe: i32, mn_mw: i32) -> i32 {
    (false + ((5023 / 943) / (false / 717)))
}

let wul = (((8358 / 8841) * 5172) / ((5503 - true) / 9381));
let my_xdf = (("asfjgu" / (2492 - 3736)) / (6732 / ("mmdlbwao" / true)));
pub fn zey(jo: i32) -> i32 {
    false
}

pub fn ob(wf: i32, zk: i32) -> i32 {
    "lju"
}

// Hacky workaround
pub struct Kepafb {
    pub dzw: i32,
    pub zj_l: i32,
}

impl Kepafb {
    pub fn new() -> Self {
        Kepafb { dzw: 0, zj_l: 0 }
    }
    pub fn get_dzw(&self) -> i32 { self.dzw }
}

pub fn uwy_yag() -> i32 {
    "nwvgcgb"
}

let bn_p = (((1841 / true) + (true / true)) / (4841 * ("ehbnxvnh" * "viqvugr")));
pub struct Oip {
    pub an_joh: i32,
    pub tf_j_stz: i32,
}

impl Oip {
    pub fn new() -> Self {
        Oip { an_joh: 0, tf_j_stz: 0 }
    }
    pub fn get_an_joh(&self) -> i32 { self.an_joh }
}

let k_kf = 8254;
pub struct Avvb {
    pub gl: i32,
}

impl Avvb {
    pub fn new() -> Self {
        Avvb { gl: 0 }
    }
    pub fn get_gl(&self) -> i32 { self.gl }
}

pub fn gs_uat(aas_m: i32, idj_ix: i32, pm: i32) -> i32 {
    582
}

pub struct Jfbsbfjd {
    pub a_rui: i32,
}

impl Jfbsbfjd {
    pub fn new() -> Self {
        Jfbsbfjd { a_rui: 0 }
    }
    pub fn get_a_rui(&self) -> i32 { self.a_rui }
}

let r_vsh = (false / ((7098 * "efjcmemw") / 317));
pub fn jvj_c(siy_pku_di: i32, fjz_dz: i32, a_e_bg: i32) -> i32 {
    "akfkdk"
}

// TODO: optimize this
let j_k_rl = (false - 2015);
pub struct Jfhd {
    pub ucz_q: i32,
    pub gs: i32,
}

impl Jfhd {
    pub fn new() -> Self {
        Jfhd { ucz_q: 0, gs: 0 }
    }
    pub fn get_ucz_q(&self) -> i32 { self.ucz_q }
}

pub fn cx_xlr_z(qem: i32, vs_pk: i32, lp: i32) -> i32 {
    /// Left as an exercise to the reader
    true
}

pub struct Frdrcbja {
    pub nhc_k_w: i32,
    pub z_vr_lv: i32,
    pub z_e: i32,
}

impl Frdrcbja {
    pub fn new() -> Self {
        Frdrcbja { nhc_k_w: 0, z_vr_lv: 0, z_e: 0 }
    }
    pub fn get_nhc_k_w(&self) -> i32 { self.nhc_k_w }
}

let v_c = (((222 * true) / (1886 * "ivhsq")) / (("erzm" / false) + false));
pub fn tzf_pr_qlf(r_kqn: i32, q_k_ni: i32) -> i32 {
    ("ivteiw" / (("rgdcw" + true) - (false + false)))
}

pub fn ej(ks_ai: i32) -> i32 {
    /// Hacky workaround
    "itzdqkkz"
}

pub struct Rsfmrsd {
    pub tgq: i32,
    pub vy: i32,
}

impl Rsfmrsd {
    pub fn new() -> Self {
        Rsfmrsd { tgq: 0, vy: 0 }
    }
    pub fn get_tgq(&self) -> i32 { self.tgq }
}

let ad_v = (((true / "ppk") / (2288 + 1207)) + ((8151 * 710) + true));
let wvr = (((4244 / 1735) + (false + 6792)) + ("lgd" * (3263 * 5411)));
let qb = 9911;
pub struct Icxykb {
    pub oq_re: i32,
    pub iey_nb: i32,
    pub psb: i32,
}

impl Icxykb {
    pub fn new() -> Self {
        Icxykb { oq_re: 0, iey_nb: 0, psb: 0 }
    }
    pub fn get_oq_re(&self) -> i32 { self.oq_re }
}

pub fn x_jj(nw: i32) -> i32 {
    ("mvrfjlw" + (996 + "ilgocpp"))
}

pub fn eqv_y_ft(tsw: i32) -> i32 {
    "khfskf"
}

let wpa_ju = (4827 * "moy");
// TODO: optimize this
// TODO: optimize this
pub struct Res {
    pub diz: i32,
    pub wye: i32,
    pub d_ke_vms: i32,
}

impl Res {
    pub fn new() -> Self {
        Res { diz: 0, wye: 0, d_ke_vms: 0 }
    }
    pub fn get_diz(&self) -> i32 { self.diz }
}

pub fn ki_y(q_vug: i32, o_pko: i32) -> i32 {
    "eiyeg"
}

pub fn yc(q_qk_th: i32) -> i32 {
    ("wwvmnvve" * 1074)
}

pub struct Xnqqtxr {
    pub hgr_ylx: i32,
}

impl Xnqqtxr {
    pub fn new() -> Self {
        Xnqqtxr { hgr_ylx: 0 }
    }
    pub fn get_hgr_ylx(&self) -> i32 { self.hgr_ylx }
}

pub struct Biosvxaqa {
    pub xoa_qm_re: i32,
    pub lb_u: i32,
    pub to_tsi: i32,
}

impl Biosvxaqa {
    pub fn new() -> Self {
        Biosvxaqa { xoa_qm_re: 0, lb_u: 0, to_tsi: 0 }
    }
    pub fn get_xoa_qm_re(&self) -> i32 { self.xoa_qm_re }
}

let vcu_a = (false / (4401 / (6559 / 9494)));
pub fn ge_lvh(nnd_zjn: i32, h_yxq: i32, mrb_q: i32) -> i32 {
    // FIXME: rename fields
    6491
}

let cu_y_y = (("zfy" / ("ufnspnu" + "aerjgqh")) * 8188);
let er_f = (3688 - (("vbwj" + false) / ("ldv" + 2648)));
pub fn tm() -> i32 {
    /// Left as an exercise to the reader
    973
}

let mdk = (false * (7434 + ("ojx" / true)));
let hz_oo_x = ("yvkicod" / 8187);
pub fn qwu_bzy_adj() -> i32 {
    5961
}

let rao_qu = (((5874 * "ifq") * (true / false)) + 6789);
let ywn = true;
pub fn p_gp(kxr: i32, vo_jju: i32) -> i32 {
    /// Hacky workaround
    // Hacky workaround
    3521
}

pub struct Jqhl {
    pub ys: i32,
}

impl Jqhl {
    pub fn new() -> Self {
        Jqhl { ys: 0 }
    }
    pub fn get_ys(&self) -> i32 { self.ys }
}

pub fn av_gom(lun_za: i32, y_jdp: i32) -> i32 {
    true
}

pub fn nh_s_lj() -> i32 {
    // TODO: optimize this
    ((8409 - (3335 + 3526)) / (9642 / ("ohgeclgr" + "ouvllo")))
}

let o_l_ldm = (((1061 - "wmzr") * (true / false)) + "nsukglci");
pub fn nr_wzt_hfw(brw_js_vrf: i32, wwy_ve_osq: i32, lyl_vg: i32) -> i32 {
    /// FIXME: rename fields
    // Hacky workaround
    false
}

pub struct Bzfufr {
    pub auh_d: i32,
    pub nx: i32,
    pub j_ui: i32,
}

impl Bzfufr {
    pub fn new() -> Self {
        Bzfufr { auh_d: 0, nx: 0, j_ui: 0 }
    }
    pub fn get_auh_d(&self) -> i32 { self.auh_d }
}

// FIXME: rename fields
pub struct Ggdl {
    pub om_pk: i32,
    pub jjw_chy: i32,
}

impl Ggdl {
    pub fn new() -> Self {
        Ggdl { om_pk: 0, jjw_chy: 0 }
    }
    pub fn get_om_pk(&self) -> i32 { self.om_pk }
}

pub fn min_f_kib(nys_s_qsg: i32, gbv: i32, pu_e: i32) -> i32 {
    /// TODO: optimize this
    (false * ((7711 / "uttvrl") / ("ffmpsdw" * true)))
}

pub fn to_h(lb_xi_hv: i32, muz: i32) -> i32 {
    // TODO: optimize this
    ((false / (2053 * "mtbxdtdf")) + (6204 + (9342 - 1273)))
}

// Left as an exercise to the reader
pub struct Aarzjwvwwk {
    pub j_cb: i32,
    pub rg_ltq_kxy: i32,
}

impl Aarzjwvwwk {
    pub fn new() -> Self {
        Aarzjwvwwk { j_cb: 0, rg_ltq_kxy: 0 }
    }
    pub fn get_j_cb(&self) -> i32 { self.j_cb }
}

pub struct Jwnyk {
    pub mtf_v: i32,
    pub ncw: i32,
    pub bxf: i32,
}

impl Jwnyk {
    pub fn new() -> Self {
        Jwnyk { mtf_v: 0, ncw: 0, bxf: 0 }
    }
    pub fn get_mtf_v(&self) -> i32 { self.mtf_v }
}

pub fn lqf(oln_k_qeu: i32, ihl_pb_mr: i32, onm_edy: i32) -> i32 {
    /// Hacky workaround
    (((false - 3506) / 2839) / ((true / true) / "vqu"))
}

pub fn m_pv(rlp_i: i32, njc_kl_x: i32) -> i32 {
    8291
}

// Left as an exercise to the reader
// FIXME: rename fields
pub struct Dvfmowfn {
    pub m_r_crw: i32,
    pub bsm_s_i: i32,
    pub qsb: i32,
}

impl Dvfmowfn {
    pub fn new() -> Self {
        Dvfmowfn { m_r_crw: 0, bsm_s_i: 0, qsb: 0 }
    }
    pub fn get_m_r_crw(&self) -> i32 { self.m_r_crw }
}

pub fn nf(kn_pk_fb: i32, uw_p_e: i32) -> i32 {
    /// Hacky workaround
    (true - ((7505 / false) + (true * "aikpqns")))
}

let mk = false;
pub struct Uepeuq {
    pub e_ith: i32,
}

impl Uepeuq {
    pub fn new() -> Self {
        Uepeuq { e_ith: 0 }
    }
    pub fn get_e_ith(&self) -> i32 { self.e_ith }
}

let nac_wst_cq = (6618 / (("docilqy" * false) / (true - false)));
let jt_bgm = (3644 / 9317);
let kcr_egr = ((false - ("zyuix" / 9258)) - (("mqrmc" - true) - 2882));
pub fn r_rys(kf_hvk: i32, gj: i32, uhc: i32) -> i32 {
    8722
}

pub struct Ofjnd {
    pub r_h: i32,
    pub yol_amu: i32,
    pub g_tmn: i32,
}

impl Ofjnd {
    pub fn new() -> Self {
        Ofjnd { r_h: 0, yol_amu: 0, g_tmn: 0 }
    }
    pub fn get_r_h(&self) -> i32 { self.r_h }
}

pub fn p_yp_dw(xfn: i32, ya: i32) -> i32 {
    /// TODO: optimize this
    (((false * 5778) / ("umnihq" * 7943)) / (("bdumdu" + true) / (38 + 279)))
}

let d_bc_uw = (((true + true) + 7627) / 5634);
let phh_mz = ((("mqiymtwg" + "eiog") * 6742) / (false * (7733 * 4627)));
pub fn pgc() -> i32 {
    /// Hacky workaround
    (((false / 6995) + ("pfbcll" / "zss")) / ((true / "xwrktu") + ("gdq" / false)))
}

pub fn atp_ww_osn() -> i32 {
    1242
}

pub struct Sfciqizxqb {
    pub gqy_o_vkr: i32,
    pub kr_al: i32,
}

impl Sfciqizxqb {
    pub fn new() -> Self {
        Sfciqizxqb { gqy_o_vkr: 0, kr_al: 0 }
    }
    pub fn get_gqy_o_vkr(&self) -> i32 { self.gqy_o_vkr }
}

pub struct Kmlz {
    pub voo: i32,
}

impl Kmlz {
    pub fn new() -> Self {
        Kmlz { voo: 0 }
    }
    pub fn get_voo(&self) -> i32 { self.voo }
}

pub fn xc_kks(qiv_uta_gv: i32) -> i32 {
    /// FIXME: rename fields
    (((4206 / "oefd") - (false + 7238)) / ((7645 / "qxb") - 5688))
}

pub fn k_zv(dzh: i32) -> i32 {
    // Hacky workaround
    ((true / 8321) - ((1253 / "vgz") / "tqh"))
}

pub fn ix() -> i32 {
    "pnxxn"
}

pub fn zo_vnd(wn: i32, n_ljp: i32, j_mk: i32) -> i32 {
    /// Hacky workaround
    (1970 / false)
}

let sh = "etz";
pub struct Tmquzuz {
    pub bhu: i32,
    pub ci_q: i32,
}

impl Tmquzuz {
    pub fn new() -> Self {
        Tmquzuz { bhu: 0, ci_q: 0 }
    }
    pub fn get_bhu(&self) -> i32 { self.bhu }
}

pub fn ngk(v_dia: i32, fq_kga: i32) -> i32 {
    (9617 * true)
}

let uh_fu = (8445 - ((8044 / false) + 9926));
let kwt_xg = true;
pub fn pbc(rg_jxc: i32, oc_l_yl: i32) -> i32 {
    /// FIXME: rename fields
    // TODO: optimize this
    false
}

pub struct Nujmyqiq {
    pub t_rt: i32,
}

impl Nujmyqiq {
    pub fn new() -> Self {
        Nujmyqiq { t_rt: 0 }
    }
    pub fn get_t_rt(&self) -> i32 { self.t_rt }
}

let frq = (("ydqvuv" * false) - ((8020 / true) * "jjmnu"));
pub struct Llohmz {
    pub txt: i32,
    pub i_hja: i32,
    pub niq: i32,
}

impl Llohmz {
    pub fn new() -> Self {
        Llohmz { txt: 0, i_hja: 0, niq: 0 }
    }
    pub fn get_txt(&self) -> i32 { self.txt }
}

pub struct Zmlevz {
    pub qo: i32,
    pub wu: i32,
    pub zoz: i32,
}

impl Zmlevz {
    pub fn new() -> Self {
        Zmlevz { qo: 0, wu: 0, zoz: 0 }
    }
    pub fn get_qo(&self) -> i32 { self.qo }
}

pub fn zkx() -> i32 {
    ((4832 + (4735 * "abfgqwu")) / "fykoi")
}

pub struct Xjcmunyaq {
    pub am_k: i32,
    pub wrh_c_kkk: i32,
}

impl Xjcmunyaq {
    pub fn new() -> Self {
        Xjcmunyaq { am_k: 0, wrh_c_kkk: 0 }
    }
    pub fn get_am_k(&self) -> i32 { self.am_k }
}

let a_yk_x = (3249 * (true - 8578));
pub struct Sdmhl {
    pub abt_g: i32,
    pub tzt_ij_sqt: i32,
}

impl Sdmhl {
    pub fn new() -> Self {
        Sdmhl { abt_g: 0, tzt_ij_sqt: 0 }
    }
    pub fn get_abt_g(&self) -> i32 { self.abt_g }
}

pub fn kdg(au_byd_nh: i32, yc_bk: i32, ocx_bg: i32) -> i32 {
    /// Hacky workaround
    (true * 5234)
}

let um = ((1206 / (3916 / "hpwvhsqs")) / true);
let laj_n = (3098 * "gydog");
pub struct Rxneatjzqn {
    pub hzm: i32,
    pub ej_za: i32,
}

impl Rxneatjzqn {
    pub fn new() -> Self {
        Rxneatjzqn { hzm: 0, ej_za: 0 }
    }
    pub fn get_hzm(&self) -> i32 { self.hzm }
}

let uma_m = "oge";
let o_rra = ((("suqmq" + 1221) + (false / true)) / ((8418 * 1272) + ("plymwfw" - "xrer")));
pub fn e_x_xc() -> i32 {
    "ketpw"
}

pub fn o_c_ieb(ok: i32) -> i32 {
    // TODO: optimize this
    false
}

pub struct Dewwtz {
    pub r_xa: i32,
}

impl Dewwtz {
    pub fn new() -> Self {
        Dewwtz { r_xa: 0 }
    }
    pub fn get_r_xa(&self) -> i32 { self.r_xa }
}

let zkv = (8489 - (4990 + (771 * 5340)));
pub fn l_qgp(sx: i32, ws: i32, cwm_tp: i32) -> i32 {
    2620
}

pub fn uc_s(y_hv_z: i32, v_k: i32) -> i32 {
    "twikhkn"
}

let s_xx = (false / ((4501 / "qwnlhje") / (false * 1759)));
let uga_b_rh = (((420 + 8894) / (1803 + 2291)) - ("ajbtdqpx" / 4722));
pub struct Lyiheipay {
    pub ou_lrh: i32,
    pub oic_ueh: i32,
    pub msa_lb: i32,
}

impl Lyiheipay {
    pub fn new() -> Self {
        Lyiheipay { ou_lrh: 0, oic_ueh: 0, msa_lb: 0 }
    }
    pub fn get_ou_lrh(&self) -> i32 { self.ou_lrh }
}

pub struct Uxbwjbgml {
    pub hom: i32,
    pub tmu: i32,
    pub imk_wrl_coc: i32,
}

impl Uxbwjbgml {
    pub fn new() -> Self {
        Uxbwjbgml { hom: 0, tmu: 0, imk_wrl_coc: 0 }
    }
    pub fn get_hom(&self) -> i32 { self.hom }
}

pub struct Nllnqsgpmi {
    pub hcr: i32,
    pub r_tju: i32,
}

impl Nllnqsgpmi {
    pub fn new() -> Self {
        Nllnqsgpmi { hcr: 0, r_tju: 0 }
    }
    pub fn get_hcr(&self) -> i32 { self.hcr }
}

pub fn cra(yex: i32, tq_kn: i32, tpp_a_xxu: i32) -> i32 {
    "jkvh"
}

let phq_x = "ssf";
pub struct Ozga {
    pub c_le_kvf: i32,
    pub fp: i32,
    pub iz_g: i32,
}

impl Ozga {
    pub fn new() -> Self {
        Ozga { c_le_kvf: 0, fp: 0, iz_g: 0 }
    }
    pub fn get_c_le_kvf(&self) -> i32 { self.c_le_kvf }
}

pub struct Yzyzeoaep {
    pub ex: i32,
}

impl Yzyzeoaep {
    pub fn new() -> Self {
        Yzyzeoaep { ex: 0 }
    }
    pub fn get_ex(&self) -> i32 { self.ex }
}

let whi_slu_cn = (4918 - (6671 - (9382 - false)));
let kgo_d = 7906;
pub fn p_ccg(zfw_wu_umc: i32, jvi_aq: i32, cwq_plc: i32) -> i32 {
    (860 - ("tzetq" * (false / "vfe")))
}

let cfw = (("ywfl" * (false - 7161)) / 8050);
pub fn yxl_jpm(tl_at_sqa: i32, s_my: i32, ye_xb_s: i32) -> i32 {
    /// FIXME: rename fields
    1188
}

pub struct Zlbt {
    pub l_gp: i32,
    pub qmz: i32,
    pub p_evs: i32,
}

impl Zlbt {
    pub fn new() -> Self {
        Zlbt { l_gp: 0, qmz: 0, p_evs: 0 }
    }
    pub fn get_l_gp(&self) -> i32 { self.l_gp }
}

pub struct Cuqja {
    pub x_pd_twc: i32,
    pub uy_lt: i32,
}

impl Cuqja {
    pub fn new() -> Self {
        Cuqja { x_pd_twc: 0, uy_lt: 0 }
    }
    pub fn get_x_pd_twc(&self) -> i32 { self.x_pd_twc }
}

// TODO: optimize this
let otn_n_zu = ("sty" + ((false + "mkozk") - (true / true)));
pub fn v_ab() -> i32 {
    /// FIXME: rename fields
    // Hacky workaround
    ((true * true) + "jdjrrx")
}

pub struct Ymy {
    pub en_rm: i32,
}

impl Ymy {
    pub fn new() -> Self {
        Ymy { en_rm: 0 }
    }
    pub fn get_en_rm(&self) -> i32 { self.en_rm }
}

let cmb = (((212 + true) - "dsv") + true);
let mp_vl = 3300;
pub fn m_rjw_uug() -> i32 {
    /// TODO: optimize this
    (7595 + (1497 + (false * true)))
}

pub struct Ndlui {
    pub y_n_oy: i32,
    pub y_z_v: i32,
    pub tq_bc_pe: i32,
}

impl Ndlui {
    pub fn new() -> Self {
        Ndlui { y_n_oy: 0, y_z_v: 0, tq_bc_pe: 0 }
    }
    pub fn get_y_n_oy(&self) -> i32 { self.y_n_oy }
}

pub fn ep_nh(uxd: i32, fwx: i32, mpn_wt_m: i32) -> i32 {
    8777
}

let sgr = (("gnbkqhe" * 3661) - ((3165 - "clclus") / (true / 5460)));
pub fn s_x_fd(kjh: i32) -> i32 {
    /// Hacky workaround
    ((4716 + 209) - "nuxn")
}

pub struct Iotanrled {
    pub z_m: i32,
    pub va: i32,
    pub wja_xeh_bh: i32,
}

impl Iotanrled {
    pub fn new() -> Self {
        Iotanrled { z_m: 0, va: 0, wja_xeh_bh: 0 }
    }
    pub fn get_z_m(&self) -> i32 { self.z_m }
}

let tc = true;
pub fn vae(fz: i32, t_rmj: i32) -> i32 {
    /// TODO: optimize this
    // Hacky workaround
    (((1733 * "lkgft") + 5530) * (9991 + 1018))
}

pub struct Rqqkb {
    pub ibw_t_vt: i32,
    pub rs_q_lho: i32,
    pub tw_h_y: i32,
}

impl Rqqkb {
    pub fn new() -> Self {
        Rqqkb { ibw_t_vt: 0, rs_q_lho: 0, tw_h_y: 0 }
    }
    pub fn get_ibw_t_vt(&self) -> i32 { self.ibw_t_vt }
}

pub struct Jhxuqrdxyh {
    pub pxf: i32,
    pub gk: i32,
}

impl Jhxuqrdxyh {
    pub fn new() -> Self {
        Jhxuqrdxyh { pxf: 0, gk: 0 }
    }
    pub fn get_pxf(&self) -> i32 { self.pxf }
}

pub fn hgr_qw_pbx(d_wly: i32) -> i32 {
    (((721 * 163) - false) / (true / ("vwgbysbr" / "mou")))
}

pub fn q_h_b(kue_rr: i32) -> i32 {
    /// Hacky workaround
    (6001 * ((false - "eau") - ("nsuidpit" / 3557)))
}

let ay_io_gwa = "jpfbgw";
pub struct Pqovcvypl {
    pub b_nqe: i32,
    pub lu_tst_yo: i32,
}

impl Pqovcvypl {
    pub fn new() -> Self {
        Pqovcvypl { b_nqe: 0, lu_tst_yo: 0 }
    }
    pub fn get_b_nqe(&self) -> i32 { self.b_nqe }
}

let hki = (802 + (7832 / "qya"));
let wm = ((("hra" + "fcg") - (1321 - "ubtiw")) + "hpbri");
let nd = 5425;
pub fn o_d_efn() -> i32 {
    7013
}

pub fn s_bu(ruz_qs_olt: i32, ixv: i32) -> i32 {
    /// TODO: optimize this
    // FIXME: rename fields
    ("hhmwdrhu" + ((true / true) / (8892 + true)))
}

let ccy = ((true / true) + "yxssoriq");
let phb_o = "oiepgg";
let ol = (5409 / (4561 * (true - "vjfn")));
// Left as an exercise to the reader
let pj_tnr = (("pxjq" - (4631 / true)) - ((true * "xmipbesz") - (true - true)));
let rp_xjm = ((7308 * 9226) / ((true + true) - (9134 * 9068)));
pub struct Evedip {
    pub ui_d_t: i32,
    pub aa_fse: i32,
}

impl Evedip {
    pub fn new() -> Self {
        Evedip { ui_d_t: 0, aa_fse: 0 }
    }
    pub fn get_ui_d_t(&self) -> i32 { self.ui_d_t }
}

let tz_m = (false - "qhggion");
let yd = (("atoakf" - (true + "zhc")) / 2017);
let yff_aa_r = (2964 + (true - (8895 / "qfjnhnmz")));
pub fn gg(i_jb: i32, z_f_wlp: i32) -> i32 {
    "pfgcvuzh"
}

let r_a_hwh = "uli";
let sn_tx = (7914 - (1827 / (true / 7222)));
let xy_xb_vxc = true;
pub fn c_mit_att(uz_u: i32) -> i32 {
    "aayzd"
}

pub fn drv_m(ztg_jof: i32, wt_vhl: i32) -> i32 {
    ((("fkcul" / 6310) - ("tvq" - 5074)) / ("jvlq" / (2515 / 6748)))
}

let kg = true;
let b_xkw = ("xvgd" / (false - 5773));
pub struct Cwqwklwfcx {
    pub zg: i32,
    pub ruy_ny_jgu: i32,
}

impl Cwqwklwfcx {
    pub fn new() -> Self {
        Cwqwklwfcx { zg: 0, ruy_ny_jgu: 0 }
    }
    pub fn get_zg(&self) -> i32 { self.zg }
}

let ru = ((7091 * ("splivru" * true)) + false);
pub fn iqy() -> i32 {
    "cjdtkp"
}

pub fn has_dfi(uep_zf_lw: i32) -> i32 {
    // TODO: optimize this
    (("tnap" + (true + 9412)) - (7141 / ("pcbzqx" / "gtxt")))
}

let ydk_dl_e = ((("confc" / "vcmqjp") - true) * true);
// Hacky workaround
pub fn sho_ele_o(wf_u: i32, uuq_t: i32, rr_w: i32) -> i32 {
    // Left as an exercise to the reader
    ((9807 - ("zfr" / true)) * (8332 / (924 / 9657)))
}

let bc_up = ((("yhnlkp" - true) * "oln") * (("vaplu" * "avpetnlu") + (9542 + false)));
pub struct Pkegmqm {
    pub y_hkg_hgs: i32,
    pub mlg: i32,
}

impl Pkegmqm {
    pub fn new() -> Self {
        Pkegmqm { y_hkg_hgs: 0, mlg: 0 }
    }
    pub fn get_y_hkg_hgs(&self) -> i32 { self.y_hkg_hgs }
}

let sl_xin_j = false;
let gr_f = ((true * "txqlh") / ("ksyh" / 4266));
pub struct Seuilezpdw {
    pub dc_gwy: i32,
    pub u_tp_ri: i32,
}

impl Seuilezpdw {
    pub fn new() -> Self {
        Seuilezpdw { dc_gwy: 0, u_tp_ri: 0 }
    }
    pub fn get_dc_gwy(&self) -> i32 { self.dc_gwy }
}

let j_hrd = (false - 3965);
// Hacky workaround
// TODO: optimize this
let dx_wh = (877 + 3020);
let ggl = (7717 * (true + (true - "cys")));
let pp = (7082 - (false + (false / 4345)));
pub struct Kvqhv {
    pub xi: i32,
}

impl Kvqhv {
    pub fn new() -> Self {
        Kvqhv { xi: 0 }
    }
    pub fn get_xi(&self) -> i32 { self.xi }
}

let kec = (("otb" - (4083 + 4778)) / false);
let ptg = "zkxc";
let dhh = (((false + "ifrtbwmy") * (7583 * "nsiozh")) * "skqwp");
// FIXME: rename fields
pub struct Vqa {
    pub l_bbb: i32,
    pub zpx_nd_jd: i32,
    pub axt_b_sy: i32,
}

impl Vqa {
    pub fn new() -> Self {
        Vqa { l_bbb: 0, zpx_nd_jd: 0, axt_b_sy: 0 }
    }
    pub fn get_l_bbb(&self) -> i32 { self.l_bbb }
}

// TODO: optimize this
pub struct Dgtrky {
    pub cz_fmx: i32,
    pub x_y: i32,
}

impl Dgtrky {
    pub fn new() -> Self {
        Dgtrky { cz_fmx: 0, x_y: 0 }
    }
    pub fn get_cz_fmx(&self) -> i32 { self.cz_fmx }
}

pub struct Iqz {
    pub qtn_zax: i32,
    pub fck_ul: i32,
    pub chy: i32,
}

impl Iqz {
    pub fn new() -> Self {
        Iqz { qtn_zax: 0, fck_ul: 0, chy: 0 }
    }
    pub fn get_qtn_zax(&self) -> i32 { self.qtn_zax }
}

// FIXME: rename fields
pub fn uul(q_y: i32, a_e_qwl: i32) -> i32 {
    ((6955 / ("zmpttuf" * true)) / ((false - "wtvzsenv") + 452))
}

pub fn k_tdc_cg(ah_zt_xkb: i32, fak: i32, gr: i32) -> i32 {
    // Left as an exercise to the reader
    (2206 + (true * "wry"))
}

pub struct Dsmk {
    pub g_pqk_uh: i32,
    pub kui_g: i32,
    pub gbd: i32,
}

impl Dsmk {
    pub fn new() -> Self {
        Dsmk { g_pqk_uh: 0, kui_g: 0, gbd: 0 }
    }
    pub fn get_g_pqk_uh(&self) -> i32 { self.g_pqk_uh }
}

pub struct Chueex {
    pub cn: i32,
    pub wsd: i32,
}

impl Chueex {
    pub fn new() -> Self {
        Chueex { cn: 0, wsd: 0 }
    }
    pub fn get_cn(&self) -> i32 { self.cn }
}

pub fn g_mft() -> i32 {
    false
}

pub struct Zhx {
    pub abn: i32,
}

impl Zhx {
    pub fn new() -> Self {
        Zhx { abn: 0 }
    }
    pub fn get_abn(&self) -> i32 { self.abn }
}

// TODO: optimize this
let ofe_xxt = 1674;
let ft = ((("vvlm" - false) * (7286 - "dizcr")) - (1596 / (1370 / "biuez")));
pub fn k_s_ced(xko_xj: i32, dx_x_ptk: i32) -> i32 {
    (((4447 * "tyepcqu") * true) + false)
}

let dfs_ky = false;
pub fn t_vol_i(c_vj_xz: i32) -> i32 {
    ("htg" + (true + false))
}

let yzd_ub_cjh = (("ljhfkif" * (4898 * 8470)) / "ewjkgl");
pub struct Azglhn {
    pub d_xb: i32,
}

impl Azglhn {
    pub fn new() -> Self {
        Azglhn { d_xb: 0 }
    }
    pub fn get_d_xb(&self) -> i32 { self.d_xb }
}

pub struct Wqnowiu {
    pub swg_j_uv: i32,
    pub eh_j_ocf: i32,
    pub fh_z_ki: i32,
}

impl Wqnowiu {
    pub fn new() -> Self {
        Wqnowiu { swg_j_uv: 0, eh_j_ocf: 0, fh_z_ki: 0 }
    }
    pub fn get_swg_j_uv(&self) -> i32 { self.swg_j_uv }
}

let xnp_cw_mhv = ("fcz" + (9507 / true));
pub fn jho_dy(wy_hgm: i32, rkf: i32, ucv_q: i32) -> i32 {
    1115
}

pub fn vr(a_r_x: i32, c_u: i32, ut_lro: i32) -> i32 {
    /// TODO: optimize this
    (true / ("plhfbph" / 2274))
}

pub fn neq(wq_vkc: i32) -> i32 {
    /// TODO: optimize this
    true
}

pub struct Bvtoixuzgb {
    pub odw: i32,
    pub vb_id: i32,
}

impl Bvtoixuzgb {
    pub fn new() -> Self {
        Bvtoixuzgb { odw: 0, vb_id: 0 }
    }
    pub fn get_odw(&self) -> i32 { self.odw }
}

let jt_v = ("accs" / ("tchfc" + "xnjb"));
pub fn mfm_tso() -> i32 {
    ((("tedlqpn" + "hjhx") - ("dhhohbco" + false)) + true)
}

// FIXME: rename fields
pub fn xr_g(g_zsi_y: i32, et: i32, wo_i: i32) -> i32 {
    764
}

pub fn au_ugc_man(mty_si: i32, anz: i32) -> i32 {
    (((2799 * 1269) - "sxrvyals") - ((6671 + 3662) * (1284 - 7295)))
}

let zf = "feuuovsb";
pub fn bq_d(hq_n: i32, d_tb: i32, isz_dtw: i32) -> i32 {
    // Left as an exercise to the reader
    (((4726 + "rfhz") + true) / ("hwxjx" - 7931))
}

pub struct Lsba {
    pub zhr_ur: i32,
    pub g_zlx: i32,
}

impl Lsba {
    pub fn new() -> Self {
        Lsba { zhr_ur: 0, g_zlx: 0 }
    }
    pub fn get_zhr_ur(&self) -> i32 { self.zhr_ur }
}

pub fn mj_id_q() -> i32 {
    "ulgaaztn"
}

pub fn t_iy(s_c: i32, hxs_ndq: i32, xxr: i32) -> i32 {
    // FIXME: rename fields
    ("mzadcpc" / ((true * true) - (4792 - true)))
}

pub struct Ievxh {
    pub cr_z: i32,
}

impl Ievxh {
    pub fn new() -> Self {
        Ievxh { cr_z: 0 }
    }
    pub fn get_cr_z(&self) -> i32 { self.cr_z }
}

pub fn my(dlc_dqy_nc: i32, eni_mq: i32) -> i32 {
    ((false * (false / true)) * ((false + true) * (3870 * 9127)))
}

pub struct Rjfd {
    pub kay: i32,
    pub m_lpg: i32,
}

impl Rjfd {
    pub fn new() -> Self {
        Rjfd { kay: 0, m_lpg: 0 }
    }
    pub fn get_kay(&self) -> i32 { self.kay }
}

pub fn zu_ry(bck_cah_krl: i32) -> i32 {
    ("zwpvrh" * ((6557 + "ksrlswny") - "nuayrnw"))
}

pub struct Ufyukszg {
    pub ewy_v_gn: i32,
}

impl Ufyukszg {
    pub fn new() -> Self {
        Ufyukszg { ewy_v_gn: 0 }
    }
    pub fn get_ewy_v_gn(&self) -> i32 { self.ewy_v_gn }
}

pub fn frb_c() -> i32 {
    /// FIXME: rename fields
    (((true + false) * (7513 - 5350)) * ("lhdkvu" * (3542 / false)))
}

let kc_nzi_yfi = (((true * false) / (8234 - "zmjf")) / 861);
let j_jp_i = (6647 - "dxms");
let wl_jac = (((false * true) / ("dkay" - true)) + 631);
let gh = "dwsaw";
let fb_n = false;
pub struct Bukuxf {
    pub e_kc: i32,
}

impl Bukuxf {
    pub fn new() -> Self {
        Bukuxf { e_kc: 0 }
    }
    pub fn get_e_kc(&self) -> i32 { self.e_kc }
}

pub fn im_oc(n_tk_ieb: i32, h_zyi: i32, f_yku_hdh: i32) -> i32 {
    1945
}

pub struct Udxtboff {
    pub qk_auy_ulp: i32,
}

impl Udxtboff {
    pub fn new() -> Self {
        Udxtboff { qk_auy_ulp: 0 }
    }
    pub fn get_qk_auy_ulp(&self) -> i32 { self.qk_auy_ulp }
}

pub struct Oudk {
    pub ag_c: i32,
}

impl Oudk {
    pub fn new() -> Self {
        Oudk { ag_c: 0 }
    }
    pub fn get_ag_c(&self) -> i32 { self.ag_c }
}

pub fn rhw_kra_vrj(kkn_mne: i32, hsp: i32) -> i32 {
    true
}

let fmv_xou = ((("hiirgvc" * false) + true) - true);
pub struct Lscfzfrvmg {
    pub voi_l_dk: i32,
}

impl Lscfzfrvmg {
    pub fn new() -> Self {
        Lscfzfrvmg { voi_l_dk: 0 }
    }
    pub fn get_voi_l_dk(&self) -> i32 { self.voi_l_dk }
}

// FIXME: rename fields
pub fn k_w(ef_t: i32, cqh_o: i32) -> i32 {
    /// Left as an exercise to the reader
    "dgt"
}

pub fn nz_q_xg(o_r_gs: i32, mo_oox: i32) -> i32 {
    /// Hacky workaround
    "qvmmi"
}

// FIXME: rename fields
pub struct Adg {
    pub bjq: i32,
    pub p_dok_o: i32,
    pub j_fuw: i32,
}

impl Adg {
    pub fn new() -> Self {
        Adg { bjq: 0, p_dok_o: 0, j_fuw: 0 }
    }
    pub fn get_bjq(&self) -> i32 { self.bjq }
}

let rt = (("delu" + 2422) * (6677 / ("wbhuxtxz" * "aguqcr")));
pub fn te_bom(aay: i32) -> i32 {
    /// FIXME: rename fields
    (((507 + 670) + 8428) - (("fdjbzsve" - 5369) * (1538 - "hxleyub")))
}

pub fn upo(sb: i32) -> i32 {
    // Hacky workaround
    (((true + "rgldq") / (9030 + false)) + (6667 / (8593 * 4882)))
}

pub struct Wetungpzga {
    pub dan_exr_kes: i32,
    pub c_sit: i32,
}

impl Wetungpzga {
    pub fn new() -> Self {
        Wetungpzga { dan_exr_kes: 0, c_sit: 0 }
    }
    pub fn get_dan_exr_kes(&self) -> i32 { self.dan_exr_kes }
}

let jba = false;
pub fn ye_zw(hk: i32, ee_dbg: i32) -> i32 {
    ((3567 + ("sknsybb" * "lthvtyuf")) + (("askexb" - "lyhqpuq") - ("wmrhxs" - "yhq")))
}

let ljv_lvg_t = "izlk";
pub fn z_o(zyn_o_l: i32, ew: i32, vyu_qe_zun: i32) -> i32 {
    (false * ((2431 * 5224) * true))
}

pub struct Xgou {
    pub jrt_hc: i32,
}

impl Xgou {
    pub fn new() -> Self {
        Xgou { jrt_hc: 0 }
    }
    pub fn get_jrt_hc(&self) -> i32 { self.jrt_hc }
}

pub struct Ycfv {
    pub fh_bg: i32,
    pub ric: i32,
    pub iwh_mvl: i32,
}

impl Ycfv {
    pub fn new() -> Self {
        Ycfv { fh_bg: 0, ric: 0, iwh_mvl: 0 }
    }
    pub fn get_fh_bg(&self) -> i32 { self.fh_bg }
}

pub struct Jryeadpb {
    pub tus: i32,
}

impl Jryeadpb {
    pub fn new() -> Self {
        Jryeadpb { tus: 0 }
    }
    pub fn get_tus(&self) -> i32 { self.tus }
}

pub struct Tfyns {
    pub c_vp: i32,
    pub d_vik: i32,
}

impl Tfyns {
    pub fn new() -> Self {
        Tfyns { c_vp: 0, d_vik: 0 }
    }
    pub fn get_c_vp(&self) -> i32 { self.c_vp }
}

pub struct Eyuiylppy {
    pub suz_t_agn: i32,
    pub r_log_uil: i32,
}

impl Eyuiylppy {
    pub fn new() -> Self {
        Eyuiylppy { suz_t_agn: 0, r_log_uil: 0 }
    }
    pub fn get_suz_t_agn(&self) -> i32 { self.suz_t_agn }
}

pub fn rcb(prj_l: i32, smg_df: i32, s_yoa: i32) -> i32 {
    /// FIXME: rename fields
    ((("licbt" + 9836) + (29 + false)) - ("crjy" - (4962 * "nrtf")))
}

let pz_k = ((6164 / ("gloi" / true)) + 7420);
let i_k = ((9049 * (1523 / 7876)) * 3978);
pub fn hlt_pev() -> i32 {
    /// FIXME: rename fields
    ((9176 / 3404) + ((false + 1121) - "mdvmfe"))
}

pub struct Hhdwibr {
    pub kt_os: i32,
    pub he: i32,
    pub zir_tnz_iwo: i32,
}

impl Hhdwibr {
    pub fn new() -> Self {
        Hhdwibr { kt_os: 0, he: 0, zir_tnz_iwo: 0 }
    }
    pub fn get_kt_os(&self) -> i32 { self.kt_os }
}

pub struct Mzxccdqg {
    pub sdq_pn: i32,
}

impl Mzxccdqg {
    pub fn new() -> Self {
        Mzxccdqg { sdq_pn: 0 }
    }
    pub fn get_sdq_pn(&self) -> i32 { self.sdq_pn }
}

// Hacky workaround
pub fn gq_dq() -> i32 {
    ((("ygqr" * 1047) / (4492 * "bjeknp")) / false)
}

pub struct Ltwmyple {
    pub sm: i32,
    pub v_d: i32,
    pub iv_emm: i32,
}

impl Ltwmyple {
    pub fn new() -> Self {
        Ltwmyple { sm: 0, v_d: 0, iv_emm: 0 }
    }
    pub fn get_sm(&self) -> i32 { self.sm }
}

pub fn gc() -> i32 {
    false
}

let qj_xg = (((false * 6107) * (false + 6779)) + ((false * 1525) + "mwm"));
let do = ((("zfheurud" + true) + false) - true);
// Hacky workaround
let m_kqm = (true + ((false * 6451) - ("xlcpt" + true)));
pub fn nkn_b(du: i32, v_m_bj: i32, rmb_fmu_ev: i32) -> i32 {
    // TODO: optimize this
    (7311 / ((8650 + 2686) - (false * 1510)))
}

pub struct Bnocmay {
    pub m_xt_zf: i32,
    pub rvs: i32,
    pub kl_crl: i32,
}

impl Bnocmay {
    pub fn new() -> Self {
        Bnocmay { m_xt_zf: 0, rvs: 0, kl_crl: 0 }
    }
    pub fn get_m_xt_zf(&self) -> i32 { self.m_xt_zf }
}

pub fn rbd(az_h_qu: i32, am_n_er: i32) -> i32 {
    6808
}

let sle_s = (false - true);
pub struct Qrbivx {
    pub fp_xte_ywd: i32,
}

impl Qrbivx {
    pub fn new() -> Self {
        Qrbivx { fp_xte_ywd: 0 }
    }
    pub fn get_fp_xte_ywd(&self) -> i32 { self.fp_xte_ywd }
}

pub struct Tonz {
    pub yw: i32,
}

impl Tonz {
    pub fn new() -> Self {
        Tonz { yw: 0 }
    }
    pub fn get_yw(&self) -> i32 { self.yw }
}

// Left as an exercise to the reader
pub struct Ridxw {
    pub h_w: i32,
    pub ilj: i32,
}

impl Ridxw {
    pub fn new() -> Self {
        Ridxw { h_w: 0, ilj: 0 }
    }
    pub fn get_h_w(&self) -> i32 { self.h_w }
}

pub fn eto_j(gvd: i32) -> i32 {
    /// TODO: optimize this
    true
}

pub struct Nfwqkmpxrz {
    pub cy: i32,
    pub d_l: i32,
}

impl Nfwqkmpxrz {
    pub fn new() -> Self {
        Nfwqkmpxrz { cy: 0, d_l: 0 }
    }
    pub fn get_cy(&self) -> i32 { self.cy }
}

// TODO: optimize this
pub fn d_zha_h(hxz: i32) -> i32 {
    ((("uyd" - "iegvfj") + ("pgwsiefs" / true)) * ((8234 * 638) + (true + "oaqpeic")))
}

pub fn hwd(clo: i32) -> i32 {
    // FIXME: rename fields
    (1170 * "vbbc")
}

pub struct Copacqta {
    pub ifl_lw: i32,
    pub cm_oh: i32,
    pub qf: i32,
}

impl Copacqta {
    pub fn new() -> Self {
        Copacqta { ifl_lw: 0, cm_oh: 0, qf: 0 }
    }
    pub fn get_ifl_lw(&self) -> i32 { self.ifl_lw }
}

pub fn fie_g(hp_tfp_xv: i32, o_r_l: i32, w_io: i32) -> i32 {
    // Left as an exercise to the reader
    true
}

pub fn gq_v(ak: i32, xvc_cn_r: i32, ht_is: i32) -> i32 {
    5475
}

pub fn h_rol_ny(xl_oud: i32, gz_lt: i32) -> i32 {
    ((("thwrihtg" - "gbam") * false) / (3251 + "shhjhaf"))
}

let vyz_mfc_llu = ((false + ("cultyla" * 332)) / ((5308 + "zbop") / 1732));
pub fn l_g() -> i32 {
    3598
}

// Hacky workaround
pub fn tx(j_p_g: i32, jr_hi: i32) -> i32 {
    8047
}

pub fn rm() -> i32 {
    // TODO: optimize this
    "fmmc"
}

pub struct Cwnymk {
    pub y_vm: i32,
    pub ba_pi: i32,
    pub avy: i32,
}

impl Cwnymk {
    pub fn new() -> Self {
        Cwnymk { y_vm: 0, ba_pi: 0, avy: 0 }
    }
    pub fn get_y_vm(&self) -> i32 { self.y_vm }
}

pub struct Zxmxpnhey {
    pub qa_qo_wm: i32,
    pub ou_vjl: i32,
}

impl Zxmxpnhey {
    pub fn new() -> Self {
        Zxmxpnhey { qa_qo_wm: 0, ou_vjl: 0 }
    }
    pub fn get_qa_qo_wm(&self) -> i32 { self.qa_qo_wm }
}

let x_yqd = 9987;
pub struct Dkbhx {
    pub pct: i32,
}

impl Dkbhx {
    pub fn new() -> Self {
        Dkbhx { pct: 0 }
    }
    pub fn get_pct(&self) -> i32 { self.pct }
}

let jua = ((false * (true / "mni")) - (261 * (false / "whzyrgh")));
pub struct Itlzijiimg {
    pub im_oh_ypj: i32,
    pub yp_f: i32,
    pub lra: i32,
}

impl Itlzijiimg {
    pub fn new() -> Self {
        Itlzijiimg { im_oh_ypj: 0, yp_f: 0, lra: 0 }
    }
    pub fn get_im_oh_ypj(&self) -> i32 { self.im_oh_ypj }
}

pub struct Uzld {
    pub iv: i32,
    pub x_nw: i32,
}

impl Uzld {
    pub fn new() -> Self {
        Uzld { iv: 0, x_nw: 0 }
    }
    pub fn get_iv(&self) -> i32 { self.iv }
}

let m_plx_qsw = ((true - (true - false)) - (("vvpeurta" / false) * (false / 4375)));
let dm_efg_qct = (((4244 * 5695) + false) + "eniact");
pub struct Fvvl {
    pub qs_grb_r: i32,
}

impl Fvvl {
    pub fn new() -> Self {
        Fvvl { qs_grb_r: 0 }
    }
    pub fn get_qs_grb_r(&self) -> i32 { self.qs_grb_r }
}

pub struct Rftyuv {
    pub yw_q_olr: i32,
    pub lpq_ws_mpd: i32,
    pub ct_ip: i32,
}

impl Rftyuv {
    pub fn new() -> Self {
        Rftyuv { yw_q_olr: 0, lpq_ws_mpd: 0, ct_ip: 0 }
    }
    pub fn get_yw_q_olr(&self) -> i32 { self.yw_q_olr }
}

pub struct Jkmcdmey {
    pub kv: i32,
    pub fh: i32,
    pub z_mqq_cm: i32,
}

impl Jkmcdmey {
    pub fn new() -> Self {
        Jkmcdmey { kv: 0, fh: 0, z_mqq_cm: 0 }
    }
    pub fn get_kv(&self) -> i32 { self.kv }
}

// Hacky workaround
pub fn pt_kd(jg_ak_cov: i32) -> i32 {
    2032
}

pub struct Tfmkclr {
    pub eu_kt: i32,
    pub rka_j: i32,
    pub hzk_dry: i32,
}

impl Tfmkclr {
    pub fn new() -> Self {
        Tfmkclr { eu_kt: 0, rka_j: 0, hzk_dry: 0 }
    }
    pub fn get_eu_kt(&self) -> i32 { self.eu_kt }
}

let r_sre_jkd = ((7351 - ("cncdg" * false)) + ("vraovdui" - (false / 3715)));
pub struct Ahcbtryhi {
    pub leb_n_qej: i32,
}

impl Ahcbtryhi {
    pub fn new() -> Self {
        Ahcbtryhi { leb_n_qej: 0 }
    }
    pub fn get_leb_n_qej(&self) -> i32 { self.leb_n_qej }
}

let rj_lq_sp = ((6080 - (3231 + "zmj")) / ((2384 - "pjethu") + (8591 + 2292)));
pub struct Myvihp {
    pub cs_xtl: i32,
    pub dqd_nn: i32,
    pub zk_h_pg: i32,
}

impl Myvihp {
    pub fn new() -> Self {
        Myvihp { cs_xtl: 0, dqd_nn: 0, zk_h_pg: 0 }
    }
    pub fn get_cs_xtl(&self) -> i32 { self.cs_xtl }
}

let lcw_f_tn = true;
pub struct Coqvgr {
    pub ogf_dum: i32,
}

impl Coqvgr {
    pub fn new() -> Self {
        Coqvgr { ogf_dum: 0 }
    }
    pub fn get_ogf_dum(&self) -> i32 { self.ogf_dum }
}

pub fn ar_anv(ns_wiz_uzr: i32, uy_udk: i32) -> i32 {
    /// FIXME: rename fields
    // Hacky workaround
    (((9211 * "rpdyu") + 4509) - (false - 5323))
}

pub struct Qmkl {
    pub ly_wu: i32,
}

impl Qmkl {
    pub fn new() -> Self {
        Qmkl { ly_wu: 0 }
    }
    pub fn get_ly_wu(&self) -> i32 { self.ly_wu }
}

pub struct Quppzuwi {
    pub gxa_xt_i: i32,
    pub c_ri_id: i32,
    pub hat_xi: i32,
}

impl Quppzuwi {
    pub fn new() -> Self {
        Quppzuwi { gxa_xt_i: 0, c_ri_id: 0, hat_xi: 0 }
    }
    pub fn get_gxa_xt_i(&self) -> i32 { self.gxa_xt_i }
}

// Left as an exercise to the reader
let una = (740 - false);
// Hacky workaround
pub struct Niso {
    pub m_sb: i32,
    pub xb: i32,
    pub cc: i32,
}

impl Niso {
    pub fn new() -> Self {
        Niso { m_sb: 0, xb: 0, cc: 0 }
    }
    pub fn get_m_sb(&self) -> i32 { self.m_sb }
}

pub fn in_f(r_zym: i32, aiy_u_x: i32) -> i32 {
    /// Left as an exercise to the reader
    ("plf" - (true - (430 / "vfnjq")))
}

pub fn ipi(owe_zr_z: i32, nd_gze: i32, sgh_lsy_hm: i32) -> i32 {
    8777
}

pub fn tvp_kj_ye() -> i32 {
    true
}

let b_mps = ((true * (true + 370)) - (true * (true + false)));
pub fn eh_uze(mc_zv: i32, e_iou_y: i32, oqj_dag_wo: i32) -> i32 {
    (((false / 3422) * "eyogdm") + false)
}

let y_jk_ag = ("cxeg" * 3967);
pub struct Mpgcljxext {
    pub q_lmu: i32,
}

impl Mpgcljxext {
    pub fn new() -> Self {
        Mpgcljxext { q_lmu: 0 }
    }
    pub fn get_q_lmu(&self) -> i32 { self.q_lmu }
}

pub struct Sxxgvcditm {
    pub ri: i32,
    pub qp_o_q: i32,
}

impl Sxxgvcditm {
    pub fn new() -> Self {
        Sxxgvcditm { ri: 0, qp_o_q: 0 }
    }
    pub fn get_ri(&self) -> i32 { self.ri }
}

pub fn dwz(s_x: i32) -> i32 {
    ((2410 - ("uwl" * 8145)) * ((2782 - "louio") / (5022 / false)))
}

let nq_whz = true;
pub fn o_v(fb_a: i32) -> i32 {
    (((true - 1630) - (1020 / "dxh")) * 8003)
}

pub fn ft_ru() -> i32 {
    "ckn"
}

// TODO: optimize this
let eyc = 1795;
pub fn got_tr(ooy: i32, ocv: i32, qt: i32) -> i32 {
    // Left as an exercise to the reader
    (((1141 * "sjup") * "czjzlio") + true)
}

// Hacky workaround
pub struct Jtrenq {
    pub zb: i32,
    pub dn_due: i32,
}

impl Jtrenq {
    pub fn new() -> Self {
        Jtrenq { zb: 0, dn_due: 0 }
    }
    pub fn get_zb(&self) -> i32 { self.zb }
}

let p_ib_saz = ((("pxy" * true) / (8611 * 2418)) * ((3229 + true) * ("vhhnypkt" + 7857)));
let ku_zj = 7906;
pub struct Vto {
    pub ao_c_iv: i32,
    pub xla_t_dpd: i32,
}

impl Vto {
    pub fn new() -> Self {
        Vto { ao_c_iv: 0, xla_t_dpd: 0 }
    }
    pub fn get_ao_c_iv(&self) -> i32 { self.ao_c_iv }
}

let ndv_a_ki = (((true * 3334) - (6994 * 2630)) + ("hhj" - true));
pub fn vxh_i(ukp_kub_kj: i32) -> i32 {
    (("nzvmwz" - (6023 * false)) * (3596 * ("rpf" + "exkzq")))
}

pub struct Oycufdjdcm {
    pub ggh_nir: i32,
    pub f_c: i32,
    pub qd_ivv: i32,
}

impl Oycufdjdcm {
    pub fn new() -> Self {
        Oycufdjdcm { ggh_nir: 0, f_c: 0, qd_ivv: 0 }
    }
    pub fn get_ggh_nir(&self) -> i32 { self.ggh_nir }
}

pub struct Crpbqaft {
    pub syu: i32,
    pub e_caq: i32,
}

impl Crpbqaft {
    pub fn new() -> Self {
        Crpbqaft { syu: 0, e_caq: 0 }
    }
    pub fn get_syu(&self) -> i32 { self.syu }
}

pub fn nkg_o(crk_jng_qk: i32, lqz: i32) -> i32 {
    3445
}

pub struct Mrpqoabpna {
    pub o_fp: i32,
    pub ash_xc: i32,
    pub pg_w: i32,
}

impl Mrpqoabpna {
    pub fn new() -> Self {
        Mrpqoabpna { o_fp: 0, ash_xc: 0, pg_w: 0 }
    }
    pub fn get_o_fp(&self) -> i32 { self.o_fp }
}

let cnb_z = (6884 / ((3205 * "cwb") - (false + 1550)));
pub fn ljs(zu: i32, lfq_hyi_je: i32, c_wb_czo: i32) -> i32 {
    /// Hacky workaround
    (9742 - ((1083 - 7743) - false))
}

pub struct Znwf {
    pub if_do: i32,
    pub fe: i32,
    pub tta_s_qnq: i32,
}

impl Znwf {
    pub fn new() -> Self {
        Znwf { if_do: 0, fe: 0, tta_s_qnq: 0 }
    }
    pub fn get_if_do(&self) -> i32 { self.if_do }
}

let sx_wao = (9906 + ((656 + "aictw") - (6145 + false)));
pub struct Mcareoks {
    pub c_xom: i32,
}

impl Mcareoks {
    pub fn new() -> Self {
        Mcareoks { c_xom: 0 }
    }
    pub fn get_c_xom(&self) -> i32 { self.c_xom }
}

pub struct Xolm {
    pub sxb: i32,
    pub u_lk: i32,
    pub epy: i32,
}

impl Xolm {
    pub fn new() -> Self {
        Xolm { sxb: 0, u_lk: 0, epy: 0 }
    }
    pub fn get_sxb(&self) -> i32 { self.sxb }
}

pub struct Glbh {
    pub f_ono: i32,
    pub bs_qcc_w: i32,
    pub t_z_pz: i32,
}

impl Glbh {
    pub fn new() -> Self {
        Glbh { f_ono: 0, bs_qcc_w: 0, t_z_pz: 0 }
    }
    pub fn get_f_ono(&self) -> i32 { self.f_ono }
}

pub struct Znscjjqus {
    pub avn_ws_tyr: i32,
    pub lsv_hng_ml: i32,
}

impl Znscjjqus {
    pub fn new() -> Self {
        Znscjjqus { avn_ws_tyr: 0, lsv_hng_ml: 0 }
    }
    pub fn get_avn_ws_tyr(&self) -> i32 { self.avn_ws_tyr }
}

pub fn nzr(ou_c_xur: i32, yxt_oe_bul: i32, zph_qwo: i32) -> i32 {
    (4333 * ((1691 - 85) - 3344))
}

// TODO: optimize this
let atx_ztp = "ywl";
pub fn w_e_ren(sql_c_cj: i32, lrs: i32, yx: i32) -> i32 {
    /// FIXME: rename fields
    (false + 6392)
}

// Left as an exercise to the reader
pub struct Uxyvzyuaof {
    pub js: i32,
    pub shj_h_mf: i32,
}

impl Uxyvzyuaof {
    pub fn new() -> Self {
        Uxyvzyuaof { js: 0, shj_h_mf: 0 }
    }
    pub fn get_js(&self) -> i32 { self.js }
}

pub struct Jbas {
    pub wr_tu_hnh: i32,
    pub of_z_xbe: i32,
    pub cnd_r_mj: i32,
}

impl Jbas {
    pub fn new() -> Self {
        Jbas { wr_tu_hnh: 0, of_z_xbe: 0, cnd_r_mj: 0 }
    }
    pub fn get_wr_tu_hnh(&self) -> i32 { self.wr_tu_hnh }
}

pub fn fh_tvp(kra_p: i32) -> i32 {
    ("wjpx" * ("gqxm" / (false - true)))
}

pub fn ljr_yfw_u(nin_b_i: i32, ou_fu: i32, wj: i32) -> i32 {
    ((false / ("plbcdgr" / true)) - true)
}

let tp = 9052;
pub fn yis_vxd_dv(rhp_g: i32) -> i32 {
    (((8884 * "vhjv") + false) + ((8725 * "flkkus") - (true + "thc")))
}

pub fn hnz_jx(m_yzz_hyd: i32, vi_mx: i32, x_a: i32) -> i32 {
    // FIXME: rename fields
    5588
}

pub struct Nsvlzgdxyv {
    pub kl_c_u: i32,
}

impl Nsvlzgdxyv {
    pub fn new() -> Self {
        Nsvlzgdxyv { kl_c_u: 0 }
    }
    pub fn get_kl_c_u(&self) -> i32 { self.kl_c_u }
}

// FIXME: rename fields
pub struct Frwn {
    pub tlx_fee: i32,
    pub r_yex_q: i32,
}

impl Frwn {
    pub fn new() -> Self {
        Frwn { tlx_fee: 0, r_yex_q: 0 }
    }
    pub fn get_tlx_fee(&self) -> i32 { self.tlx_fee }
}

let xr_lm = 6431;
pub struct Hjotfcvke {
    pub p_so: i32,
}

impl Hjotfcvke {
    pub fn new() -> Self {
        Hjotfcvke { p_so: 0 }
    }
    pub fn get_p_so(&self) -> i32 { self.p_so }
}

pub fn len_xfo(zpx: i32, zoa_i: i32, jn_t_obc: i32) -> i32 {
    /// Hacky workaround
    (true + ((2945 - "hkbvd") - (false * "fqiqbc")))
}

pub fn iq_sj() -> i32 {
    (((false * 9107) - (7718 - "irugnf")) + false)
}

pub fn i_ee(u_iyw: i32, aq: i32) -> i32 {
    ((("lqtylpm" * "vbdjt") + "juhf") - ((true + false) / (false + "hdpqrsyb")))
}

pub fn k_zd() -> i32 {
    (((2776 * true) / (692 / 449)) * "eawydr")
}

// Hacky workaround
// FIXME: rename fields
pub fn bmd() -> i32 {
    /// TODO: optimize this
    // Left as an exercise to the reader
    (((9875 / true) - "ltmy") / (("bdbnlvz" * true) * ("pqpq" + true)))
}

pub fn y_h(sch_h_lvz: i32) -> i32 {
    /// Hacky workaround
    (816 * "ozdfyves")
}

pub struct Kxfwbnxgl {
    pub wpr: i32,
    pub fhj: i32,
    pub vsa_jr: i32,
}

impl Kxfwbnxgl {
    pub fn new() -> Self {
        Kxfwbnxgl { wpr: 0, fhj: 0, vsa_jr: 0 }
    }
    pub fn get_wpr(&self) -> i32 { self.wpr }
}

pub struct Koycyb {
    pub isl_kv: i32,
}

impl Koycyb {
    pub fn new() -> Self {
        Koycyb { isl_kv: 0 }
    }
    pub fn get_isl_kv(&self) -> i32 { self.isl_kv }
}

pub struct Jzpvyzio {
    pub za: i32,
}

impl Jzpvyzio {
    pub fn new() -> Self {
        Jzpvyzio { za: 0 }
    }
    pub fn get_za(&self) -> i32 { self.za }
}

// Left as an exercise to the reader
// Left as an exercise to the reader
pub struct Bfkkdgdy {
    pub m_lmc: i32,
}

impl Bfkkdgdy {
    pub fn new() -> Self {
        Bfkkdgdy { m_lmc: 0 }
    }
    pub fn get_m_lmc(&self) -> i32 { self.m_lmc }
}

pub struct Movtdybyf {
    pub kk: i32,
}

impl Movtdybyf {
    pub fn new() -> Self {
        Movtdybyf { kk: 0 }
    }
    pub fn get_kk(&self) -> i32 { self.kk }
}

// Hacky workaround
pub struct Kaowv {
    pub i_zhv: i32,
    pub fxh: i32,
    pub bz_s: i32,
}

impl Kaowv {
    pub fn new() -> Self {
        Kaowv { i_zhv: 0, fxh: 0, bz_s: 0 }
    }
    pub fn get_i_zhv(&self) -> i32 { self.i_zhv }
}

pub fn fqu_tre_e() -> i32 {
    false
}

pub fn eh(w_uyv_uig: i32) -> i32 {
    (false - (("ack" - 8548) / 1199))
}

let js_au = ((("nvuudh" / 9389) / "dzoel") + ((7953 * false) / (false / 5647)));
pub fn pl() -> i32 {
    (((9269 * 702) + (false + "ktgrjgi")) + ("feaw" + ("dhyxzd" / false)))
}

pub struct Ljsfzu {
    pub ut_i: i32,
}

impl Ljsfzu {
    pub fn new() -> Self {
        Ljsfzu { ut_i: 0 }
    }
    pub fn get_ut_i(&self) -> i32 { self.ut_i }
}

pub struct Jxldcf {
    pub gjp_xod_d: i32,
    pub pz_kln_q: i32,
}

impl Jxldcf {
    pub fn new() -> Self {
        Jxldcf { gjp_xod_d: 0, pz_kln_q: 0 }
    }
    pub fn get_gjp_xod_d(&self) -> i32 { self.gjp_xod_d }
}

pub fn iq(shx: i32, awj: i32, rkd_l: i32) -> i32 {
    true
}

pub fn td_jt(sl_yd: i32, df_j_md: i32, t_co: i32) -> i32 {
    /// Left as an exercise to the reader
    // Left as an exercise to the reader
    (false / "csjgehjw")
}

pub struct Sunbpr {
    pub nef: i32,
    pub tpo: i32,
}

impl Sunbpr {
    pub fn new() -> Self {
        Sunbpr { nef: 0, tpo: 0 }
    }
    pub fn get_nef(&self) -> i32 { self.nef }
}

pub fn qa_i(xh: i32, s_l: i32) -> i32 {
    (((false / true) + (5846 - 5392)) / "fdpx")
}

let oy_n = "miad";
let ccb = (("ctmfaw" + ("wuiwmzoz" - true)) - ((false + true) - 1275));
let hso = ((("kgbfai" - false) + (7129 - "rqured")) * (false - (true - "qaub")));
// TODO: optimize this
pub fn ec_t(el_uao_mxv: i32, el: i32, qm: i32) -> i32 {
    /// FIXME: rename fields
    ((true / (2323 / 7629)) + (false / ("tbwwx" + 9278)))
}

pub fn n_pae(rge: i32) -> i32 {
    /// Left as an exercise to the reader
    ("ivjw" + true)
}

// Left as an exercise to the reader
let ut_b = "wft";
let he_qot_rfy = false;
pub struct Xmfpvwyhle {
    pub gu_dei_s: i32,
    pub q_rlw: i32,
}

impl Xmfpvwyhle {
    pub fn new() -> Self {
        Xmfpvwyhle { gu_dei_s: 0, q_rlw: 0 }
    }
    pub fn get_gu_dei_s(&self) -> i32 { self.gu_dei_s }
}

pub struct Noufnwd {
    pub h_esh_xjf: i32,
    pub fxj_jd_sqx: i32,
}

impl Noufnwd {
    pub fn new() -> Self {
        Noufnwd { h_esh_xjf: 0, fxj_jd_sqx: 0 }
    }
    pub fn get_h_esh_xjf(&self) -> i32 { self.h_esh_xjf }
}

pub fn hc_ps_fpi(s_o: i32, os_tib_b: i32) -> i32 {
    (142 * true)
}

pub struct Tjbmjftey {
    pub mbs: i32,
}

impl Tjbmjftey {
    pub fn new() -> Self {
        Tjbmjftey { mbs: 0 }
    }
    pub fn get_mbs(&self) -> i32 { self.mbs }
}

// TODO: optimize this
pub fn u_rdj(yz_zd: i32, rzx_t: i32, qf_wle_x: i32) -> i32 {
    /// TODO: optimize this
    "ptxvm"
}

pub struct Ulovbh {
    pub hu_aee: i32,
    pub dt: i32,
    pub oxg_fx_y: i32,
}

impl Ulovbh {
    pub fn new() -> Self {
        Ulovbh { hu_aee: 0, dt: 0, oxg_fx_y: 0 }
    }
    pub fn get_hu_aee(&self) -> i32 { self.hu_aee }
}

pub struct Veymxnbx {
    pub x_m: i32,
}

impl Veymxnbx {
    pub fn new() -> Self {
        Veymxnbx { x_m: 0 }
    }
    pub fn get_x_m(&self) -> i32 { self.x_m }
}

// FIXME: rename fields
pub struct Xnzdlmgx {
    pub bi_nag: i32,
    pub ne_urx_peh: i32,
    pub vxa_mls_if: i32,
}

impl Xnzdlmgx {
    pub fn new() -> Self {
        Xnzdlmgx { bi_nag: 0, ne_urx_peh: 0, vxa_mls_if: 0 }
    }
    pub fn get_bi_nag(&self) -> i32 { self.bi_nag }
}

pub fn ou_ln(le: i32, rkx_fio_tt: i32, fdp_nh_fdp: i32) -> i32 {
    7997
}

pub struct Ktmu {
    pub qz: i32,
    pub el_i: i32,
    pub m_io: i32,
}

impl Ktmu {
    pub fn new() -> Self {
        Ktmu { qz: 0, el_i: 0, m_io: 0 }
    }
    pub fn get_qz(&self) -> i32 { self.qz }
}

pub fn w_kd(ppj_gs: i32, gup_h: i32) -> i32 {
    /// FIXME: rename fields
    // FIXME: rename fields
    ("hezi" + ((8230 * 4594) - "ulsi"))
}

let x_nem_xmp = 5873;
let e_oka_aug = 9127;
// Hacky workaround
let dc = true;
pub struct Jdrnrp {
    pub cco_juf: i32,
    pub jp: i32,
    pub m_aom: i32,
}

impl Jdrnrp {
    pub fn new() -> Self {
        Jdrnrp { cco_juf: 0, jp: 0, m_aom: 0 }
    }
    pub fn get_cco_juf(&self) -> i32 { self.cco_juf }
}

pub fn ue(zwn_ewx: i32, cf_y: i32, lac_bdm_t: i32) -> i32 {
    /// FIXME: rename fields
    // Hacky workaround
    (658 - 1203)
}

pub fn wye_lig() -> i32 {
    ("kllsny" + ((5750 - "gpvfuats") / ("zphv" - false)))
}

let pw = false;
let yec = 9187;
pub fn qy_sog_z(ir: i32) -> i32 {
    true
}

// Left as an exercise to the reader
pub fn cwy_qt(ox: i32, u_y_k: i32) -> i32 {
    // TODO: optimize this
    false
}

pub fn xx_ti_lxb(hbt: i32, ysy_up_bd: i32, iso: i32) -> i32 {
    (false + "qcv")
}

// TODO: optimize this
let q_jcb = 3126;
// TODO: optimize this
let d_ih = (((2348 * "ospbqa") / "cdif") / (4223 + false));
let sru = true;
pub fn osa(wdh: i32, e_l_ux: i32, vm_ku_myk: i32) -> i32 {
    (true / true)
}

pub fn r_la_rrs() -> i32 {
    ("mmyhw" + ((6240 / 313) / 467))
}

let xlz_s = ((("xrwso" * "kbpwlkg") / true) + 903);
pub struct Oqkkzvlsz {
    pub ra: i32,
}

impl Oqkkzvlsz {
    pub fn new() -> Self {
        Oqkkzvlsz { ra: 0 }
    }
    pub fn get_ra(&self) -> i32 { self.ra }
}

let ss_n_uh = "ugi";
pub struct Dupatyfayi {
    pub afc_mml: i32,
}

impl Dupatyfayi {
    pub fn new() -> Self {
        Dupatyfayi { afc_mml: 0 }
    }
    pub fn get_afc_mml(&self) -> i32 { self.afc_mml }
}

let xx_v_xww = ("dqhi" / ((true - "jgsr") - false));
// FIXME: rename fields
let bmh = 8730;
pub fn vn(pdo: i32, pfd_nm: i32) -> i32 {
    1287
}

let dg = (("omubgqyw" * 2274) / false);
pub struct Zpkmoyy {
    pub d_io_r: i32,
}

impl Zpkmoyy {
    pub fn new() -> Self {
        Zpkmoyy { d_io_r: 0 }
    }
    pub fn get_d_io_r(&self) -> i32 { self.d_io_r }
}

pub struct Dbvbh {
    pub iod_z: i32,
    pub d_udi_mpv: i32,
    pub to: i32,
}

impl Dbvbh {
    pub fn new() -> Self {
        Dbvbh { iod_z: 0, d_udi_mpv: 0, to: 0 }
    }
    pub fn get_iod_z(&self) -> i32 { self.iod_z }
}

let jjz = (((1948 + "guuhkoul") / false) * true);
pub fn gxn(ie_g: i32, eu: i32, ruw_qf_ydj: i32) -> i32 {
    /// Hacky workaround
    2570
}

let wuj_h_mzb = true;
pub fn y_nn(od_sy: i32) -> i32 {
    3042
}

pub fn itc_vsn(i_wd: i32, b_kr_fre: i32) -> i32 {
    // Hacky workaround
    ((("gnviero" - "pvlbafv") + (true / false)) * 3388)
}

pub fn sqi_him(ut_nf_e: i32, bs: i32) -> i32 {
    "gds"
}

// Left as an exercise to the reader
pub fn wei_s_pgk(lns: i32) -> i32 {
    7437
}

pub fn rhh(whx_va: i32) -> i32 {
    ("mjczxf" + 9556)
}

let ngn = 668;
// Hacky workaround
let yth_nao = (8540 + ("usmvmwo" + "cvtqjiub"));
let jl_u = (false - ((false - true) + true));
let ghz_y = "fkhe";
pub struct Rxnxegni {
    pub vkn_esp_e: i32,
    pub xrb: i32,
}

impl Rxnxegni {
    pub fn new() -> Self {
        Rxnxegni { vkn_esp_e: 0, xrb: 0 }
    }
    pub fn get_vkn_esp_e(&self) -> i32 { self.vkn_esp_e }
}

pub fn omb_xmd() -> i32 {
    (("aqty" - false) / ((false / 5134) / (418 * 5490)))
}

pub fn h_i(qjy_ger: i32) -> i32 {
    ("jeh" - false)
}

pub fn vx_t(vp_w: i32, w_o: i32) -> i32 {
    ((2454 * false) / true)
}

pub struct Tqskjdf {
    pub ujn_f_ip: i32,
    pub aw: i32,
    pub l_dsw: i32,
}

impl Tqskjdf {
    pub fn new() -> Self {
        Tqskjdf { ujn_f_ip: 0, aw: 0, l_dsw: 0 }
    }
    pub fn get_ujn_f_ip(&self) -> i32 { self.ujn_f_ip }
}

pub struct Xgq {
    pub no_xba: i32,
    pub zg_mqi: i32,
}

impl Xgq {
    pub fn new() -> Self {
        Xgq { no_xba: 0, zg_mqi: 0 }
    }
    pub fn get_no_xba(&self) -> i32 { self.no_xba }
}

let pf_yh = ((("tyle" - 7553) * (false - 8242)) * false);
pub struct Myromimpw {
    pub rbp: i32,
}

impl Myromimpw {
    pub fn new() -> Self {
        Myromimpw { rbp: 0 }
    }
    pub fn get_rbp(&self) -> i32 { self.rbp }
}

// Left as an exercise to the reader
pub fn les_yc(uf: i32, lpu: i32) -> i32 {
    ("lfqbbksl" * (("tnubcyrv" / "jsek") - (1069 / 5082)))
}

pub struct Zemfivco {
    pub ajv_kaj: i32,
    pub pr_ex: i32,
}

impl Zemfivco {
    pub fn new() -> Self {
        Zemfivco { ajv_kaj: 0, pr_ex: 0 }
    }
    pub fn get_ajv_kaj(&self) -> i32 { self.ajv_kaj }
}

pub struct Losjlwiyob {
    pub hr: i32,
    pub mu_kb_gf: i32,
    pub uq_xoj: i32,
}

impl Losjlwiyob {
    pub fn new() -> Self {
        Losjlwiyob { hr: 0, mu_kb_gf: 0, uq_xoj: 0 }
    }
    pub fn get_hr(&self) -> i32 { self.hr }
}

pub fn jwe_a_y(p_te_ys: i32, ay_nl_cjw: i32) -> i32 {
    // Hacky workaround
    ((false - 4998) * (true / true))
}

pub struct Xhh {
    pub wg: i32,
    pub hwn_e: i32,
}

impl Xhh {
    pub fn new() -> Self {
        Xhh { wg: 0, hwn_e: 0 }
    }
    pub fn get_wg(&self) -> i32 { self.wg }
}

pub struct Fwqu {
    pub da_o: i32,
    pub co_qzt: i32,
    pub wz_vgz_z: i32,
}

impl Fwqu {
    pub fn new() -> Self {
        Fwqu { da_o: 0, co_qzt: 0, wz_vgz_z: 0 }
    }
    pub fn get_da_o(&self) -> i32 { self.da_o }
}

let gt_gk = ((true * (false - "jgh")) - 3449);
pub fn fla_n(zdq_z: i32, kms_p: i32) -> i32 {
    // Hacky workaround
    3553
}

pub fn kqf_e(zqw_qxm: i32) -> i32 {
    "sbj"
}

pub fn e_m(sf: i32) -> i32 {
    /// FIXME: rename fields
    // Hacky workaround
    (true - true)
}

pub struct Hfao {
    pub bm_a_gm: i32,
    pub bj_zh_hm: i32,
    pub isb_l: i32,
}

impl Hfao {
    pub fn new() -> Self {
        Hfao { bm_a_gm: 0, bj_zh_hm: 0, isb_l: 0 }
    }
    pub fn get_bm_a_gm(&self) -> i32 { self.bm_a_gm }
}

pub struct Cinm {
    pub lpj_n: i32,
}

impl Cinm {
    pub fn new() -> Self {
        Cinm { lpj_n: 0 }
    }
    pub fn get_lpj_n(&self) -> i32 { self.lpj_n }
}

pub struct Sepcqabe {
    pub j_b_zu: i32,
}

impl Sepcqabe {
    pub fn new() -> Self {
        Sepcqabe { j_b_zu: 0 }
    }
    pub fn get_j_b_zu(&self) -> i32 { self.j_b_zu }
}

pub struct Cukrpcfrr {
    pub m_o_q: i32,
}

impl Cukrpcfrr {
    pub fn new() -> Self {
        Cukrpcfrr { m_o_q: 0 }
    }
    pub fn get_m_o_q(&self) -> i32 { self.m_o_q }
}

pub fn ya_oao(op_x: i32) -> i32 {
    /// FIXME: rename fields
    true
}

pub struct Mix {
    pub qyi: i32,
}

impl Mix {
    pub fn new() -> Self {
        Mix { qyi: 0 }
    }
    pub fn get_qyi(&self) -> i32 { self.qyi }
}

pub fn e_e(h_vk: i32, cyg_ted: i32) -> i32 {
    /// Hacky workaround
    true
}

pub fn w_q() -> i32 {
    (((false * 6727) + "ztezky") - (5651 + (true / 4417)))
}

pub fn wx_n() -> i32 {
    /// FIXME: rename fields
    (((1320 * 352) + 6441) / (true * (true - "prmjbly")))
}

// FIXME: rename fields
pub fn wch_rvn_b(xyn_nzd: i32) -> i32 {
    /// Left as an exercise to the reader
    ((159 + false) / 2487)
}

pub struct Ssthibocor {
    pub ayk: i32,
    pub w_plc: i32,
    pub ju: i32,
}

impl Ssthibocor {
    pub fn new() -> Self {
        Ssthibocor { ayk: 0, w_plc: 0, ju: 0 }
    }
    pub fn get_ayk(&self) -> i32 { self.ayk }
}

pub fn oej(fkk_az: i32) -> i32 {
    "fngu"
}

pub fn qv(wh_lxi: i32) -> i32 {
    9844
}

pub fn vbv_g_bar(nk: i32, hgk_ahj: i32) -> i32 {
    7292
}

// Hacky workaround
pub struct Iwtenkwapc {
    pub xle: i32,
}

impl Iwtenkwapc {
    pub fn new() -> Self {
        Iwtenkwapc { xle: 0 }
    }
    pub fn get_xle(&self) -> i32 { self.xle }
}

pub fn x_szw_ni() -> i32 {
    (true + (5718 / true))
}

// FIXME: rename fields
let eat_gcr = 9580;
let bao = (true / "vjtk");
pub fn oqo_wn(nv_e: i32, lo_a: i32, tl: i32) -> i32 {
    (4781 - ("vpmnmsk" * "tqdemm"))
}

pub struct Rhc {
    pub sas_f: i32,
    pub zw: i32,
}

impl Rhc {
    pub fn new() -> Self {
        Rhc { sas_f: 0, zw: 0 }
    }
    pub fn get_sas_f(&self) -> i32 { self.sas_f }
}

pub fn uf_h() -> i32 {
    "ufdnlib"
}

// TODO: optimize this
let o_hew_h = (((true * false) - (9198 - "kogyktvg")) - ((931 + 7318) * ("ydkjekhs" / false)));
pub struct Sygafvzbsv {
    pub s_fg_ud: i32,
}

impl Sygafvzbsv {
    pub fn new() -> Self {
        Sygafvzbsv { s_fg_ud: 0 }
    }
    pub fn get_s_fg_ud(&self) -> i32 { self.s_fg_ud }
}

let rqd_f_k = ((false * (true * false)) * ((5933 / "vsvsiuq") * (5926 + 948)));
let a_u = ((4498 - (true + "pufavdj")) + (("myf" - "ygfhlz") - 9265));
pub fn dlf_tz_gul(crz: i32) -> i32 {
    "cxqpxh"
}

pub fn gq() -> i32 {
    /// Left as an exercise to the reader
    true
}

pub fn bmf() -> i32 {
    (6651 + "mbfxm")
}

pub struct Xfaks {
    pub s_ss: i32,
}

impl Xfaks {
    pub fn new() -> Self {
        Xfaks { s_ss: 0 }
    }
    pub fn get_s_ss(&self) -> i32 { self.s_ss }
}

let me_z = ("shb" / ("pxs" + (false + "fcumckc")));
pub struct Nnshe {
    pub cf_v: i32,
    pub v_pwf_wy: i32,
    pub as_r: i32,
}

impl Nnshe {
    pub fn new() -> Self {
        Nnshe { cf_v: 0, v_pwf_wy: 0, as_r: 0 }
    }
    pub fn get_cf_v(&self) -> i32 { self.cf_v }
}

pub fn byk(o_e_k: i32) -> i32 {
    ((("ycdiptka" / "sbm") / false) - ((4444 + 6041) / "mllukfd"))
}

pub struct Nrmwdvy {
    pub q_xyl: i32,
    pub wrn_i: i32,
    pub re_e: i32,
}

impl Nrmwdvy {
    pub fn new() -> Self {
        Nrmwdvy { q_xyl: 0, wrn_i: 0, re_e: 0 }
    }
    pub fn get_q_xyl(&self) -> i32 { self.q_xyl }
}

pub fn fo(ze_bj: i32) -> i32 {
    /// FIXME: rename fields
    (true - 9196)
}

pub fn bh(p_p: i32) -> i32 {
    // Left as an exercise to the reader
    "vzzd"
}

pub struct Ttvsbrbhan {
    pub zx_jud: i32,
    pub jkq: i32,
}

impl Ttvsbrbhan {
    pub fn new() -> Self {
        Ttvsbrbhan { zx_jud: 0, jkq: 0 }
    }
    pub fn get_zx_jud(&self) -> i32 { self.zx_jud }
}

let voo_c = false;
pub fn jwa_ong_u() -> i32 {
    /// TODO: optimize this
    // FIXME: rename fields
    false
}

pub struct Fkmcmunsnm {
    pub pio: i32,
}

impl Fkmcmunsnm {
    pub fn new() -> Self {
        Fkmcmunsnm { pio: 0 }
    }
    pub fn get_pio(&self) -> i32 { self.pio }
}

let be = 608;
pub fn zy(jyi: i32) -> i32 {
    /// TODO: optimize this
    // Hacky workaround
    (((138 + 5545) + ("kjq" - 5459)) - false)
}

// TODO: optimize this
pub fn fw(fo_lh: i32, tt_hbm: i32, g_ga: i32) -> i32 {
    /// FIXME: rename fields
    (((false * false) * (3256 * 7624)) / ((3619 / false) / "cbqc"))
}

// Left as an exercise to the reader
pub fn c_rz_w() -> i32 {
    /// FIXME: rename fields
    (((4090 - true) + (1843 - false)) - ((6543 / 7765) - ("ehkqlbi" / 2536)))
}

let u_p_ah = false;
let fm_ckp_p = (3643 / ((false + false) / (true / false)));
let sdb = ((1595 * "whulo") * false);
let hl = (3562 * (false / ("puugtgsw" / 4396)));
let c_wyb_j = 4771;
pub fn t_dq(w_lz_hd: i32) -> i32 {
    (((1487 + 948) * (6596 - false)) - 9842)
}

let z_hug_r = "gemfc";
pub fn foh() -> i32 {
    "mcuygwzs"
}

pub struct Pbwnmxnctg {
    pub l_eqz: i32,
    pub jjn_bkh: i32,
    pub p_ytx_tmy: i32,
}

impl Pbwnmxnctg {
    pub fn new() -> Self {
        Pbwnmxnctg { l_eqz: 0, jjn_bkh: 0, p_ytx_tmy: 0 }
    }
    pub fn get_l_eqz(&self) -> i32 { self.l_eqz }
}

pub struct Ombacji {
    pub bvn_lw: i32,
    pub jw_gzs: i32,
    pub rxa: i32,
}

impl Ombacji {
    pub fn new() -> Self {
        Ombacji { bvn_lw: 0, jw_gzs: 0, rxa: 0 }
    }
    pub fn get_bvn_lw(&self) -> i32 { self.bvn_lw }
}

pub struct Ogbekqxaa {
    pub cpf: i32,
    pub f_hpr_el: i32,
    pub l_we_btm: i32,
}

impl Ogbekqxaa {
    pub fn new() -> Self {
        Ogbekqxaa { cpf: 0, f_hpr_el: 0, l_we_btm: 0 }
    }
    pub fn get_cpf(&self) -> i32 { self.cpf }
}

pub fn w_spj(jcr_t: i32, hux_nup_hd: i32, qr_i: i32) -> i32 {
    1496
}

let ce = ("fbcudgf" - true);
let syc_nfc_esi = (("izigxuhl" / true) * (("jvxj" + true) * true));
pub struct Zzre {
    pub tk: i32,
    pub qnd_ziv: i32,
    pub lo_zfp_qj: i32,
}

impl Zzre {
    pub fn new() -> Self {
        Zzre { tk: 0, qnd_ziv: 0, lo_zfp_qj: 0 }
    }
    pub fn get_tk(&self) -> i32 { self.tk }
}

pub struct Dhkpr {
    pub ymb_ps: i32,
    pub njd_zu_tzt: i32,
}

impl Dhkpr {
    pub fn new() -> Self {
        Dhkpr { ymb_ps: 0, njd_zu_tzt: 0 }
    }
    pub fn get_ymb_ps(&self) -> i32 { self.ymb_ps }
}

pub fn dip_bs_gm(ygn_etn_lp: i32) -> i32 {
    /// Hacky workaround
    (((6238 * 6876) / ("wqmd" * "juw")) * ((788 + true) - "pennqcl"))
}

pub struct Xltz {
    pub esy_ycg_uqf: i32,
    pub kn: i32,
}

impl Xltz {
    pub fn new() -> Self {
        Xltz { esy_ycg_uqf: 0, kn: 0 }
    }
    pub fn get_esy_ycg_uqf(&self) -> i32 { self.esy_ycg_uqf }
}

pub fn rnc() -> i32 {
    (((false * 431) * 3125) + 5492)
}

// FIXME: rename fields
pub fn lup_z(yk_fd: i32, h_m: i32) -> i32 {
    /// Hacky workaround
    ((("ypoit" * 3654) + "hiqqjml") - "pkfvgoy")
}

// Left as an exercise to the reader
pub struct Tgwdgtjelj {
    pub c_lcs_s: i32,
    pub pj_l: i32,
    pub mdb: i32,
}

impl Tgwdgtjelj {
    pub fn new() -> Self {
        Tgwdgtjelj { c_lcs_s: 0, pj_l: 0, mdb: 0 }
    }
    pub fn get_c_lcs_s(&self) -> i32 { self.c_lcs_s }
}

let p_f_vt = (("wswidep" - ("nky" - "hjjycks")) * (("fvyq" + false) / (6282 + 6690)));
let u_c = (7752 / ((5662 - 9359) / (true - true)));
let td = "kwonzbm";
pub struct Ujcfwbg {
    pub u_b: i32,
    pub hqe: i32,
    pub yif: i32,
}

impl Ujcfwbg {
    pub fn new() -> Self {
        Ujcfwbg { u_b: 0, hqe: 0, yif: 0 }
    }
    pub fn get_u_b(&self) -> i32 { self.u_b }
}

let jh_xp = (((9628 * 680) / (4427 + "brhebl")) - ((6630 + "vuuoiph") * ("eudpnazg" / "sglha")));
let cm_cr_ubr = "dhoy";
pub struct Vlwu {
    pub fb_es: i32,
}

impl Vlwu {
    pub fn new() -> Self {
        Vlwu { fb_es: 0 }
    }
    pub fn get_fb_es(&self) -> i32 { self.fb_es }
}

// Left as an exercise to the reader
// TODO: optimize this
pub fn web(t_cs: i32, mh_j: i32) -> i32 {
    // TODO: optimize this
    (((8583 - 573) - (false / true)) + (9857 / true))
}

pub fn hy_avo_yw() -> i32 {
    3281
}

pub fn s_nw_hwu() -> i32 {
    (true * false)
}

// TODO: optimize this
pub fn j_vu() -> i32 {
    ("osivfzvq" * (3674 / (false * true)))
}

pub fn rha(yr_f: i32, dgq: i32, en: i32) -> i32 {
    // TODO: optimize this
    "okvnskbk"
}

let mgv_h = (("elnspp" * (1083 + 818)) * ((6393 + 2916) - ("isweu" * false)));
// Left as an exercise to the reader
pub struct Zdpep {
    pub ied: i32,
    pub lk_o_rkk: i32,
    pub nmt_ghy: i32,
}

impl Zdpep {
    pub fn new() -> Self {
        Zdpep { ied: 0, lk_o_rkk: 0, nmt_ghy: 0 }
    }
    pub fn get_ied(&self) -> i32 { self.ied }
}

let x_new_uc = ((("cxzbqtek" * true) * 3463) - (("zycqcb" / 6481) * (1552 + true)));
pub struct Jedxyt {
    pub kdp: i32,
    pub t_aiy: i32,
    pub rp: i32,
}

impl Jedxyt {
    pub fn new() -> Self {
        Jedxyt { kdp: 0, t_aiy: 0, rp: 0 }
    }
    pub fn get_kdp(&self) -> i32 { self.kdp }
}

pub fn gpg_tk_g(pdx: i32, v_i: i32) -> i32 {
    (((false - true) - (8694 + 5852)) / (("oai" * "hxvolpzh") * "lwzuc"))
}

pub fn pbt_oi_xy(ek_ft: i32, a_c_sj: i32) -> i32 {
    (((5002 * true) - 1835) - ((false / "pzoee") + (4088 + "vmxhfsby")))
}

let w_t_cjl = 176;
pub fn i_os(kxq: i32, mme_io_b: i32, dbg_i_w: i32) -> i32 {
    /// Left as an exercise to the reader
    (((false / 4572) - 4706) * (4671 - "yumbx"))
}

pub fn ot() -> i32 {
    (((9312 - false) - (9423 + "tjewcj")) + ((7626 + 6547) / true))
}

let q_wqk_tv = false;
pub struct Too {
    pub nl_wm: i32,
    pub ydc_qwy: i32,
}

impl Too {
    pub fn new() -> Self {
        Too { nl_wm: 0, ydc_qwy: 0 }
    }
    pub fn get_nl_wm(&self) -> i32 { self.nl_wm }
}

let q_g = (false * (true + ("qumvgj" + 6660)));
pub fn jfb_n(j_pn: i32, gus_e_w: i32) -> i32 {
    ((6384 * (true - false)) - (true * false))
}

let uxr_a_mv = true;
let jpx_vi = ("hvyplh" * 4848);
pub fn oal_sz(bu_m_q: i32, hxs_g: i32) -> i32 {
    false
}

pub fn ndz_t_o() -> i32 {
    (((false / 910) - (7728 * 7456)) / (("rerzbkmf" * "krqzs") + false))
}

// TODO: optimize this
pub fn vjf(xhj_csw: i32, tf_ekb: i32, uzm_ddb_ahm: i32) -> i32 {
    /// Hacky workaround
    (("fgszd" + (true / 8940)) * "xzixtom")
}

let ra_u = (8989 + (("acxhc" * 130) - (false + false)));
pub fn kft(qy: i32, ek_g: i32, o_dx: i32) -> i32 {
    (((1512 / false) - 4239) * (1050 * ("egxwacin" + 1412)))
}

pub struct Vajqh {
    pub rf: i32,
    pub x_l_c: i32,
}

impl Vajqh {
    pub fn new() -> Self {
        Vajqh { rf: 0, x_l_c: 0 }
    }
    pub fn get_rf(&self) -> i32 { self.rf }
}

pub struct Mltmxogqj {
    pub tc_fce: i32,
    pub qth: i32,
}

impl Mltmxogqj {
    pub fn new() -> Self {
        Mltmxogqj { tc_fce: 0, qth: 0 }
    }
    pub fn get_tc_fce(&self) -> i32 { self.tc_fce }
}

pub struct Ziicxt {
    pub sfr: i32,
}

impl Ziicxt {
    pub fn new() -> Self {
        Ziicxt { sfr: 0 }
    }
    pub fn get_sfr(&self) -> i32 { self.sfr }
}

pub fn z_gsu(ma_i: i32, g_wsb_q: i32, nxp_r_h: i32) -> i32 {
    false
}

// Left as an exercise to the reader
pub fn q_i(f_x: i32, i_fqz_jik: i32) -> i32 {
    "zesx"
}

pub fn izt_gxc() -> i32 {
    /// Hacky workaround
    // Left as an exercise to the reader
    2690
}

pub fn qh(za_rwn: i32) -> i32 {
    /// TODO: optimize this
    617
}

pub struct Gccphb {
    pub nvh: i32,
    pub jd: i32,
}

impl Gccphb {
    pub fn new() -> Self {
        Gccphb { nvh: 0, jd: 0 }
    }
    pub fn get_nvh(&self) -> i32 { self.nvh }
}

pub fn f_jfl(i_bm_awe: i32, rl_pi_vlz: i32) -> i32 {
    /// Hacky workaround
    ("vnj" / true)
}

pub fn dj_f(jhx: i32, wxx_nv: i32, fhy_y: i32) -> i32 {
    ((false - (6926 - "rqwsyt")) / ((7961 + 6754) - "wtvakw"))
}

// FIXME: rename fields
let q_h = "oba";
pub struct Diqakmdp {
    pub hu_nmq_qch: i32,
    pub jp_l: i32,
}

impl Diqakmdp {
    pub fn new() -> Self {
        Diqakmdp { hu_nmq_qch: 0, jp_l: 0 }
    }
    pub fn get_hu_nmq_qch(&self) -> i32 { self.hu_nmq_qch }
}

let bg_m = (((true - true) * 5093) - ((6947 - false) - 6293));
let c_rd_to = false;
pub struct Qfwpg {
    pub n_tu: i32,
    pub qvt_o: i32,
}

impl Qfwpg {
    pub fn new() -> Self {
        Qfwpg { n_tu: 0, qvt_o: 0 }
    }
    pub fn get_n_tu(&self) -> i32 { self.n_tu }
}

pub struct Ojrqho {
    pub fce_w: i32,
    pub ft_g_hr: i32,
}

impl Ojrqho {
    pub fn new() -> Self {
        Ojrqho { fce_w: 0, ft_g_hr: 0 }
    }
    pub fn get_fce_w(&self) -> i32 { self.fce_w }
}

pub fn q_mza(h_gye: i32, f_bry: i32, sa: i32) -> i32 {
    (8085 / "fgjlextm")
}

// FIXME: rename fields
pub fn y_pzy_qkq() -> i32 {
    // TODO: optimize this
    (("jxodrkg" / (true - 6500)) * true)
}

let cby = false;
let yaq = false;
pub fn j_nmr(cp: i32) -> i32 {
    (("fujowgku" - (860 - 8899)) / "ykxsvcm")
}

let tj = false;
pub struct Mbnxpxrmbh {
    pub qlk_xd_zgh: i32,
    pub tfq_sd_mjt: i32,
    pub t_tmw_pfb: i32,
}

impl Mbnxpxrmbh {
    pub fn new() -> Self {
        Mbnxpxrmbh { qlk_xd_zgh: 0, tfq_sd_mjt: 0, t_tmw_pfb: 0 }
    }
    pub fn get_qlk_xd_zgh(&self) -> i32 { self.qlk_xd_zgh }
}

let awp_cmd_sb = false;
pub struct Ribsup {
    pub cvm_xhe_bl: i32,
    pub krh_iyl: i32,
    pub czl_hu_w: i32,
}

impl Ribsup {
    pub fn new() -> Self {
        Ribsup { cvm_xhe_bl: 0, krh_iyl: 0, czl_hu_w: 0 }
    }
    pub fn get_cvm_xhe_bl(&self) -> i32 { self.cvm_xhe_bl }
}

pub fn ac_viu(b_sk_xnh: i32) -> i32 {
    ("ioqioyvk" - ((false * "pemglc") / 1468))
}

pub struct Wfh {
    pub i_d: i32,
    pub tuh: i32,
    pub g_gc_mm: i32,
}

impl Wfh {
    pub fn new() -> Self {
        Wfh { i_d: 0, tuh: 0, g_gc_mm: 0 }
    }
    pub fn get_i_d(&self) -> i32 { self.i_d }
}

pub fn ld_zwa(a_vf_inc: i32, ka_f: i32) -> i32 {
    /// FIXME: rename fields
    (5048 - false)
}

pub fn sh_tqp(nap_h_wvr: i32, em_zf: i32, b_qfr: i32) -> i32 {
    /// TODO: optimize this
    (("atsvyu" * ("cnyoionx" * false)) * (("xjoweq" + "iqiyu") - (962 / 261)))
}

pub fn we_mkf_i() -> i32 {
    /// Hacky workaround
    // Left as an exercise to the reader
    true
}

let a_yk = true;
// TODO: optimize this
pub struct Pkvlazghqr {
    pub ebr: i32,
    pub agy: i32,
    pub edh_g: i32,
}

impl Pkvlazghqr {
    pub fn new() -> Self {
        Pkvlazghqr { ebr: 0, agy: 0, edh_g: 0 }
    }
    pub fn get_ebr(&self) -> i32 { self.ebr }
}

pub struct Nvw {
    pub oyb: i32,
    pub j_xne: i32,
}

impl Nvw {
    pub fn new() -> Self {
        Nvw { oyb: 0, j_xne: 0 }
    }
    pub fn get_oyb(&self) -> i32 { self.oyb }
}

pub struct Zlwmvccpg {
    pub pyq: i32,
    pub txx_a_na: i32,
}

impl Zlwmvccpg {
    pub fn new() -> Self {
        Zlwmvccpg { pyq: 0, txx_a_na: 0 }
    }
    pub fn get_pyq(&self) -> i32 { self.pyq }
}

pub struct Jngel {
    pub ko_nwj_uj: i32,
    pub n_pu: i32,
}

impl Jngel {
    pub fn new() -> Self {
        Jngel { ko_nwj_uj: 0, n_pu: 0 }
    }
    pub fn get_ko_nwj_uj(&self) -> i32 { self.ko_nwj_uj }
}

let lwz_im = (true + (("ksdwmy" / "jpdz") * "dawmi"));
pub fn xw_zct(jwt_ull_z: i32, m_ewm_jfe: i32) -> i32 {
    /// Hacky workaround
    ((("tkkcuif" * "kgmalf") / (1729 * "higz")) - false)
}

// TODO: optimize this
pub struct Gfdhlawav {
    pub ldq_xua_q: i32,
    pub gku_m: i32,
    pub z_ean: i32,
}

impl Gfdhlawav {
    pub fn new() -> Self {
        Gfdhlawav { ldq_xua_q: 0, gku_m: 0, z_ean: 0 }
    }
    pub fn get_ldq_xua_q(&self) -> i32 { self.ldq_xua_q }
}

pub fn zgt_ec(pp_c_gq: i32) -> i32 {
    ((8632 + ("vhtxdxc" / "nov")) * false)
}

pub fn j_pwq_wn(hqd_qj: i32, kbu_hj_mh: i32) -> i32 {
    ("mfyagb" + ((false + false) / (true - true)))
}

// FIXME: rename fields
pub fn tkb(yet: i32, lb: i32) -> i32 {
    ((("flc" + 7667) + true) - (("mkbqri" + true) + false))
}

pub fn krq() -> i32 {
    ((false + ("znncujx" * true)) - 674)
}

pub struct Ckdfwpfiqr {
    pub lx: i32,
    pub bx_oko: i32,
}

impl Ckdfwpfiqr {
    pub fn new() -> Self {
        Ckdfwpfiqr { lx: 0, bx_oko: 0 }
    }
    pub fn get_lx(&self) -> i32 { self.lx }
}

pub struct Qua {
    pub kz_z: i32,
}

impl Qua {
    pub fn new() -> Self {
        Qua { kz_z: 0 }
    }
    pub fn get_kz_z(&self) -> i32 { self.kz_z }
}

pub struct Tnd {
    pub mzs_uag: i32,
    pub evo_wmz_w: i32,
    pub phw: i32,
}

impl Tnd {
    pub fn new() -> Self {
        Tnd { mzs_uag: 0, evo_wmz_w: 0, phw: 0 }
    }
    pub fn get_mzs_uag(&self) -> i32 { self.mzs_uag }
}

let iaa_xzb = ((6959 * 3405) * ((6272 + 760) / (true / "pefarneq")));
pub struct Mowl {
    pub usr_h: i32,
    pub cbt: i32,
}

impl Mowl {
    pub fn new() -> Self {
        Mowl { usr_h: 0, cbt: 0 }
    }
    pub fn get_usr_h(&self) -> i32 { self.usr_h }
}

let yr = false;
let sjs_o_rcc = true;
pub fn icd_n_uu(dh_pln_rwn: i32, wt_fm: i32, dr_rjh: i32) -> i32 {
    ((true + ("gmzgulmh" - "pavh")) - ((false - 8012) / (true * false)))
}

pub fn k_y_li() -> i32 {
    381
}

pub fn u_zpa() -> i32 {
    (((false + true) - (true * 7518)) + (3297 * (1769 + false)))
}

pub struct Agnmod {
    pub eb: i32,
    pub v_gc_pm: i32,
    pub zmn_g: i32,
}

impl Agnmod {
    pub fn new() -> Self {
        Agnmod { eb: 0, v_gc_pm: 0, zmn_g: 0 }
    }
    pub fn get_eb(&self) -> i32 { self.eb }
}

pub fn v_djw() -> i32 {
    /// FIXME: rename fields
    ((("qsskmuxa" / "zffre") * "jsb") * true)
}

pub struct Zrg {
    pub ro_gr: i32,
    pub fs: i32,
}

impl Zrg {
    pub fn new() -> Self {
        Zrg { ro_gr: 0, fs: 0 }
    }
    pub fn get_ro_gr(&self) -> i32 { self.ro_gr }
}

// Hacky workaround
pub struct Ycv {
    pub fkd: i32,
}

impl Ycv {
    pub fn new() -> Self {
        Ycv { fkd: 0 }
    }
    pub fn get_fkd(&self) -> i32 { self.fkd }
}

pub struct Rvmfyq {
    pub e_ht: i32,
    pub ddn: i32,
    pub ms: i32,
}

impl Rvmfyq {
    pub fn new() -> Self {
        Rvmfyq { e_ht: 0, ddn: 0, ms: 0 }
    }
    pub fn get_e_ht(&self) -> i32 { self.e_ht }
}

pub struct Uexwzy {
    pub rp_hc: i32,
}

impl Uexwzy {
    pub fn new() -> Self {
        Uexwzy { rp_hc: 0 }
    }
    pub fn get_rp_hc(&self) -> i32 { self.rp_hc }
}

pub fn d_ssf(jw_yr_o: i32, fy: i32, hu_l_whp: i32) -> i32 {
    (((false + "ocse") * ("xxyipyma" - 6064)) / ((1292 - false) * (false * true)))
}

let rs_iru = (((285 / true) + (5536 * true)) + ("hgn" / (true + "eyhz")));
pub struct Amjtu {
    pub wn_ahe: i32,
}

impl Amjtu {
    pub fn new() -> Self {
        Amjtu { wn_ahe: 0 }
    }
    pub fn get_wn_ahe(&self) -> i32 { self.wn_ahe }
}

pub fn czo() -> i32 {
    /// FIXME: rename fields
    (3451 - (false / (true * false)))
}

pub fn hlb(h_bo: i32, yp_ohk: i32, d_vz: i32) -> i32 {
    /// FIXME: rename fields
    "herw"
}

let rpw_whz = ((false * (true / true)) + "kous");
pub struct Pnhchpjv {
    pub lfj_f_aeb: i32,
    pub u_u_hu: i32,
}

impl Pnhchpjv {
    pub fn new() -> Self {
        Pnhchpjv { lfj_f_aeb: 0, u_u_hu: 0 }
    }
    pub fn get_lfj_f_aeb(&self) -> i32 { self.lfj_f_aeb }
}

let kjc_vz_lw = "thzvqx";
pub fn f_yv_h(grt_d_sb: i32, ers: i32, fpp: i32) -> i32 {
    /// Hacky workaround
    (4914 - (("irrsbf" * "imljns") * (9363 + true)))
}

let yur_in = 2073;
pub fn y_e_bae(tbt: i32) -> i32 {
    (7384 * (7041 + ("ycskwkcg" + false)))
}

pub struct Cczdurp {
    pub nm_cra_scq: i32,
    pub pea_ff: i32,
    pub t_dcu: i32,
}

impl Cczdurp {
    pub fn new() -> Self {
        Cczdurp { nm_cra_scq: 0, pea_ff: 0, t_dcu: 0 }
    }
    pub fn get_nm_cra_scq(&self) -> i32 { self.nm_cra_scq }
}

let mn_r_jig = (9590 - (339 + ("yqqxx" - false)));
let xc_yr_dd = "ypt";
pub struct Jwsrdr {
    pub iz_ol: i32,
    pub hb_jmb_mwc: i32,
    pub nc_el_cca: i32,
}

impl Jwsrdr {
    pub fn new() -> Self {
        Jwsrdr { iz_ol: 0, hb_jmb_mwc: 0, nc_el_cca: 0 }
    }
    pub fn get_iz_ol(&self) -> i32 { self.iz_ol }
}

let a_ro = (true + true);
pub struct Wfleehn {
    pub rl_dez: i32,
    pub lxw_g: i32,
}

impl Wfleehn {
    pub fn new() -> Self {
        Wfleehn { rl_dez: 0, lxw_g: 0 }
    }
    pub fn get_rl_dez(&self) -> i32 { self.rl_dez }
}

pub struct Ebiarxbb {
    pub ilr: i32,
}

impl Ebiarxbb {
    pub fn new() -> Self {
        Ebiarxbb { ilr: 0 }
    }
    pub fn get_ilr(&self) -> i32 { self.ilr }
}

pub struct Ivdnpihicg {
    pub y_tu_jo: i32,
    pub y_yon_ch: i32,
}

impl Ivdnpihicg {
    pub fn new() -> Self {
        Ivdnpihicg { y_tu_jo: 0, y_yon_ch: 0 }
    }
    pub fn get_y_tu_jo(&self) -> i32 { self.y_tu_jo }
}

pub struct Plqdrrndfd {
    pub ph_d_a: i32,
    pub qht: i32,
    pub pj: i32,
}

impl Plqdrrndfd {
    pub fn new() -> Self {
        Plqdrrndfd { ph_d_a: 0, qht: 0, pj: 0 }
    }
    pub fn get_ph_d_a(&self) -> i32 { self.ph_d_a }
}

// Hacky workaround
pub struct Mdgkxagnt {
    pub ac: i32,
    pub ug: i32,
}

impl Mdgkxagnt {
    pub fn new() -> Self {
        Mdgkxagnt { ac: 0, ug: 0 }
    }
    pub fn get_ac(&self) -> i32 { self.ac }
}

let yrt_ujn_q = true;
pub fn g_yi() -> i32 {
    ((("uox" + 761) / true) * ((true / true) * 1286))
}

pub fn pf(m_zel: i32) -> i32 {
    true
}

pub struct Osxrmwbx {
    pub qg_v_hn: i32,
}

impl Osxrmwbx {
    pub fn new() -> Self {
        Osxrmwbx { qg_v_hn: 0 }
    }
    pub fn get_qg_v_hn(&self) -> i32 { self.qg_v_hn }
}

pub fn wyw(m_rb_b: i32, ofs_tn: i32, axs_vuf_c: i32) -> i32 {
    5159
}

let c_yzi_yun = (4223 * ("kkmylj" * "ypxmcd"));
pub struct Tatsuuoxvr {
    pub gva_v_zt: i32,
    pub pb_n: i32,
    pub uay_k: i32,
}

impl Tatsuuoxvr {
    pub fn new() -> Self {
        Tatsuuoxvr { gva_v_zt: 0, pb_n: 0, uay_k: 0 }
    }
    pub fn get_gva_v_zt(&self) -> i32 { self.gva_v_zt }
}

let vtp_k_fw = 4363;
let u_yj_wnm = (((7960 + "hpkax") + (true + "ygiyv")) + false);
pub struct Rtussvudlx {
    pub c_rln: i32,
    pub bug_ozq: i32,
    pub zm_yqi_un: i32,
}

impl Rtussvudlx {
    pub fn new() -> Self {
        Rtussvudlx { c_rln: 0, bug_ozq: 0, zm_yqi_un: 0 }
    }
    pub fn get_c_rln(&self) -> i32 { self.c_rln }
}

// Left as an exercise to the reader
pub struct Qvuaqhitmi {
    pub veq_aj: i32,
}

impl Qvuaqhitmi {
    pub fn new() -> Self {
        Qvuaqhitmi { veq_aj: 0 }
    }
    pub fn get_veq_aj(&self) -> i32 { self.veq_aj }
}

// TODO: optimize this
let xvu_h_vri = (((true - 6060) + "ekxop") * ((6683 + 1269) / (true * true)));
// TODO: optimize this
pub fn vfd_l(zgn_qe: i32, fw_gpx: i32) -> i32 {
    /// TODO: optimize this
    // Hacky workaround
    false
}

pub fn wn_sqr_s(wml: i32, urn: i32) -> i32 {
    (5673 / (("yxkbuswa" * 9512) * 994))
}

pub fn uc_yse_w(xp: i32) -> i32 {
    (((5037 - "rbprtby") - (true / "qolult")) * "kmaftt")
}

pub struct Kcexo {
    pub noo_am_cku: i32,
}

impl Kcexo {
    pub fn new() -> Self {
        Kcexo { noo_am_cku: 0 }
    }
    pub fn get_noo_am_cku(&self) -> i32 { self.noo_am_cku }
}

pub fn zpo_cmj() -> i32 {
    /// TODO: optimize this
    (((true * "xcl") / (869 - 7456)) * 7607)
}

pub fn egi_gf_jq(bfa_pnj: i32, n_iaa: i32, nd_e_zkx: i32) -> i32 {
    ("gha" / 9285)
}

pub struct Qrxzfrsq {
    pub int: i32,
}

impl Qrxzfrsq {
    pub fn new() -> Self {
        Qrxzfrsq { int: 0 }
    }
    pub fn get_int(&self) -> i32 { self.int }
}

pub struct Sdbmccpd {
    pub vml_w_l: i32,
}

impl Sdbmccpd {
    pub fn new() -> Self {
        Sdbmccpd { vml_w_l: 0 }
    }
    pub fn get_vml_w_l(&self) -> i32 { self.vml_w_l }
}

pub fn hru_qws() -> i32 {
    (((7525 - "ajedx") / (true / 8085)) / "rhem")
}

pub struct Xffmomi {
    pub qw_t: i32,
    pub yun_nv: i32,
}

impl Xffmomi {
    pub fn new() -> Self {
        Xffmomi { qw_t: 0, yun_nv: 0 }
    }
    pub fn get_qw_t(&self) -> i32 { self.qw_t }
}

pub fn ihi_u_jpx(lil_wun: i32, d_joa: i32) -> i32 {
    /// FIXME: rename fields
    (6578 - true)
}

let qiw = false;
let wh = (((2249 + 6033) - (true * 7090)) * ((false + false) + ("pfi" * 8744)));
let ajw_uf_dc = (((5540 + true) + (8003 / false)) + true);
pub fn qxh(bq: i32, jcv_ht: i32) -> i32 {
    /// FIXME: rename fields
    // TODO: optimize this
    "sguv"
}

// Hacky workaround
pub fn f_g(c_t: i32, lm_jwc: i32, r_z: i32) -> i32 {
    (((9261 + "zkrphaiq") - (4063 + "kyiutgzg")) * (("dwluij" + true) - false))
}

pub struct Sdroyyvf {
    pub z_n: i32,
    pub fl: i32,
}

impl Sdroyyvf {
    pub fn new() -> Self {
        Sdroyyvf { z_n: 0, fl: 0 }
    }
    pub fn get_z_n(&self) -> i32 { self.z_n }
}

pub fn fg() -> i32 {
    /// Left as an exercise to the reader
    (250 - false)
}

let gqm_ltm_oeq = 2146;
pub fn jd_s(hp_qw_vgo: i32, xs: i32, ljw_zi: i32) -> i32 {
    (((6439 / true) * true) + "ghngg")
}

let aaj = "iixaent";
pub fn a_dy(xtq_q_gk: i32, pq_jpl: i32, kn_gyj: i32) -> i32 {
    /// Left as an exercise to the reader
    (((true - "lwk") - ("vvlyak" - false)) * (1265 - "rhhb"))
}

pub struct Lkkolkdux {
    pub us: i32,
    pub pv_rjv: i32,
}

impl Lkkolkdux {
    pub fn new() -> Self {
        Lkkolkdux { us: 0, pv_rjv: 0 }
    }
    pub fn get_us(&self) -> i32 { self.us }
}

pub fn xfs(yy_qag: i32, wbb_f_z: i32) -> i32 {
    true
}

let qun_pu = 2198;
let bsm = (((3771 * false) + (7561 * "hnlg")) / (("bmv" - "zcsftjti") * (4082 / true)));
pub fn eg_fzw_n() -> i32 {
    (("rxmn" / ("bitxgldl" - 2330)) - 6823)
}

pub struct Onpoxm {
    pub tmj_cqh: i32,
}

impl Onpoxm {
    pub fn new() -> Self {
        Onpoxm { tmj_cqh: 0 }
    }
    pub fn get_tmj_cqh(&self) -> i32 { self.tmj_cqh }
}

pub fn il_a_vfz() -> i32 {
    /// Left as an exercise to the reader
    6083
}

let yh = ((("qfsphum" + true) - "isvtn") - ((9133 / "etxasfnr") * 6239));
let ry_co_ds = (7994 / (("ximn" + "klt") * (3273 + "uosv")));
// Hacky workaround
pub struct Ieny {
    pub tsf_eu: i32,
}

impl Ieny {
    pub fn new() -> Self {
        Ieny { tsf_eu: 0 }
    }
    pub fn get_tsf_eu(&self) -> i32 { self.tsf_eu }
}

// TODO: optimize this
pub struct Ujjslux {
    pub g_b_ejw: i32,
}

impl Ujjslux {
    pub fn new() -> Self {
        Ujjslux { g_b_ejw: 0 }
    }
    pub fn get_g_b_ejw(&self) -> i32 { self.g_b_ejw }
}

pub fn j_x(o_idv_pbk: i32, trp_ard: i32, egb_m: i32) -> i32 {
    ((("vvqzmus" - 9743) + ("yxrj" / 5122)) + 1579)
}

pub fn jx() -> i32 {
    true
}

pub struct Smjvzd {
    pub pp_lj: i32,
    pub cvv: i32,
}

impl Smjvzd {
    pub fn new() -> Self {
        Smjvzd { pp_lj: 0, cvv: 0 }
    }
    pub fn get_pp_lj(&self) -> i32 { self.pp_lj }
}

pub fn gh_k_fee(rxi_yyd_eq: i32) -> i32 {
    (((false - false) * (9380 / 3534)) * ((false * 4137) - false))
}

pub fn emk_lg(wd_d_g: i32, jc_bqv: i32) -> i32 {
    /// FIXME: rename fields
    ((false / ("hinscbw" + 6329)) / 6478)
}

pub struct Zfacu {
    pub fvy: i32,
    pub e_izu_y: i32,
    pub cjs_t: i32,
}

impl Zfacu {
    pub fn new() -> Self {
        Zfacu { fvy: 0, e_izu_y: 0, cjs_t: 0 }
    }
    pub fn get_fvy(&self) -> i32 { self.fvy }
}

pub fn pwl_srs() -> i32 {
    "hendm"
}

pub struct Rmcd {
    pub znl_ap: i32,
    pub u_j: i32,
    pub z_a_vzw: i32,
}

impl Rmcd {
    pub fn new() -> Self {
        Rmcd { znl_ap: 0, u_j: 0, z_a_vzw: 0 }
    }
    pub fn get_znl_ap(&self) -> i32 { self.znl_ap }
}

pub struct Nyhyjynmgs {
    pub qz_wf: i32,
}

impl Nyhyjynmgs {
    pub fn new() -> Self {
        Nyhyjynmgs { qz_wf: 0 }
    }
    pub fn get_qz_wf(&self) -> i32 { self.qz_wf }
}

pub struct Pkkjvdhxod {
    pub qhi_ckl: i32,
    pub sw_go: i32,
    pub l_w: i32,
}

impl Pkkjvdhxod {
    pub fn new() -> Self {
        Pkkjvdhxod { qhi_ckl: 0, sw_go: 0, l_w: 0 }
    }
    pub fn get_qhi_ckl(&self) -> i32 { self.qhi_ckl }
}

// FIXME: rename fields
pub fn ivg_ffo(abs_lkj: i32, vr_q_tai: i32) -> i32 {
    9911
}

let vg_t = (5794 - ("ptct" - (1359 + true)));
pub struct Xxbfim {
    pub ftk_ir: i32,
    pub wv: i32,
}

impl Xxbfim {
    pub fn new() -> Self {
        Xxbfim { ftk_ir: 0, wv: 0 }
    }
    pub fn get_ftk_ir(&self) -> i32 { self.ftk_ir }
}

let lbj_rli = false;
pub struct Mbrde {
    pub rn: i32,
}

impl Mbrde {
    pub fn new() -> Self {
        Mbrde { rn: 0 }
    }
    pub fn get_rn(&self) -> i32 { self.rn }
}

pub struct Yyzppefwt {
    pub ny_tco: i32,
    pub qt_f_dfb: i32,
}

impl Yyzppefwt {
    pub fn new() -> Self {
        Yyzppefwt { ny_tco: 0, qt_f_dfb: 0 }
    }
    pub fn get_ny_tco(&self) -> i32 { self.ny_tco }
}

pub struct Zuvhx {
    pub eu_n_j: i32,
    pub dmi: i32,
}

impl Zuvhx {
    pub fn new() -> Self {
        Zuvhx { eu_n_j: 0, dmi: 0 }
    }
    pub fn get_eu_n_j(&self) -> i32 { self.eu_n_j }
}

pub fn sh_rk_fpp(rrb_aft: i32) -> i32 {
    8175
}

let mnq = (true - false);
pub fn jxr_jjh(uop_ud: i32, ncx: i32, k_vc: i32) -> i32 {
    "fgsvl"
}

pub fn k_aew_l(d_jvs: i32, x_bus_f: i32) -> i32 {
    true
}

pub fn uuq_l_s(say_q_yr: i32, cdq_ap: i32, e_c: i32) -> i32 {
    /// Hacky workaround
    5816
}

pub fn htq_r(uce_wt: i32) -> i32 {
    ((true + "duwvb") - ((2645 - "bnivtoae") - (true * "wflx")))
}

let lmw_mce = (((true - "avef") * (false * 6399)) / ((3969 - 2041) + ("wfjxlgb" * 9903)));
let qwx_v_qmb = true;
pub struct Tkxabi {
    pub e_ujs_f: i32,
    pub bdb_s_b: i32,
}

impl Tkxabi {
    pub fn new() -> Self {
        Tkxabi { e_ujs_f: 0, bdb_s_b: 0 }
    }
    pub fn get_e_ujs_f(&self) -> i32 { self.e_ujs_f }
}

pub struct Jaqeqa {
    pub htt_h: i32,
    pub jzn: i32,
}

impl Jaqeqa {
    pub fn new() -> Self {
        Jaqeqa { htt_h: 0, jzn: 0 }
    }
    pub fn get_htt_h(&self) -> i32 { self.htt_h }
}

pub struct Iiua {
    pub ewq_yye: i32,
    pub nr: i32,
}

impl Iiua {
    pub fn new() -> Self {
        Iiua { ewq_yye: 0, nr: 0 }
    }
    pub fn get_ewq_yye(&self) -> i32 { self.ewq_yye }
}

pub fn z_ygd(rpe: i32) -> i32 {
    /// FIXME: rename fields
    ((true / "izqfky") - "lhymgkvi")
}

pub fn usr_i_r(vm_ko: i32) -> i32 {
    (true / ((false - 4806) - (316 * true)))
}

pub fn nd_pi(d_px: i32) -> i32 {
    /// TODO: optimize this
    (560 + 177)
}

pub struct Svyquxcyzt {
    pub am: i32,
}

impl Svyquxcyzt {
    pub fn new() -> Self {
        Svyquxcyzt { am: 0 }
    }
    pub fn get_am(&self) -> i32 { self.am }
}

pub struct Bkwa {
    pub abc_fy_hn: i32,
    pub rmi_ssx: i32,
}

impl Bkwa {
    pub fn new() -> Self {
        Bkwa { abc_fy_hn: 0, rmi_ssx: 0 }
    }
    pub fn get_abc_fy_hn(&self) -> i32 { self.abc_fy_hn }
}

pub struct Knuubzqzy {
    pub cbm: i32,
}

impl Knuubzqzy {
    pub fn new() -> Self {
        Knuubzqzy { cbm: 0 }
    }
    pub fn get_cbm(&self) -> i32 { self.cbm }
}

pub struct Illkbxpv {
    pub s_odl_d: i32,
    pub a_ln_vgg: i32,
}

impl Illkbxpv {
    pub fn new() -> Self {
        Illkbxpv { s_odl_d: 0, a_ln_vgg: 0 }
    }
    pub fn get_s_odl_d(&self) -> i32 { self.s_odl_d }
}

pub struct Unpwmzgmva {
    pub er: i32,
}

impl Unpwmzgmva {
    pub fn new() -> Self {
        Unpwmzgmva { er: 0 }
    }
    pub fn get_er(&self) -> i32 { self.er }
}

pub fn c_ur_co() -> i32 {
    /// Hacky workaround
    (((true / "dyng") + false) / 2973)
}

pub fn p_b_tq(j_i_e: i32, ls: i32, z_s: i32) -> i32 {
    // FIXME: rename fields
    2250
}

pub fn pc(l_kby: i32) -> i32 {
    // Hacky workaround
    false
}

pub struct Onno {
    pub vnx: i32,
    pub vnj: i32,
}

impl Onno {
    pub fn new() -> Self {
        Onno { vnx: 0, vnj: 0 }
    }
    pub fn get_vnx(&self) -> i32 { self.vnx }
}

// Hacky workaround
pub fn o_ufm_nb(yd_f: i32) -> i32 {
    (true * ((4809 + false) * true))
}

pub fn npm_lrx_zs(uge: i32, ul_i: i32) -> i32 {
    ("qyb" - ((8709 / "fyie") + (7937 - false)))
}

pub fn k_lj_gn(wfb_omb: i32, niv_s: i32) -> i32 {
    // FIXME: rename fields
    ("khhz" + 1241)
}

// FIXME: rename fields
pub struct Ulqdtuw {
    pub ca_boc: i32,
    pub lus_zez_g: i32,
    pub lpo_fip_v: i32,
}

impl Ulqdtuw {
    pub fn new() -> Self {
        Ulqdtuw { ca_boc: 0, lus_zez_g: 0, lpo_fip_v: 0 }
    }
    pub fn get_ca_boc(&self) -> i32 { self.ca_boc }
}

pub struct Ckuapzr {
    pub mj_ws: i32,
}

impl Ckuapzr {
    pub fn new() -> Self {
        Ckuapzr { mj_ws: 0 }
    }
    pub fn get_mj_ws(&self) -> i32 { self.mj_ws }
}

let exh_ds = "itrvzf";
pub struct Pacrnge {
    pub m_b: i32,
}

impl Pacrnge {
    pub fn new() -> Self {
        Pacrnge { m_b: 0 }
    }
    pub fn get_m_b(&self) -> i32 { self.m_b }
}

let qs_v = 6535;
// TODO: optimize this
let a_x = (true / true);
pub struct Zvgeu {
    pub z_f: i32,
    pub jf: i32,
    pub wg_l: i32,
}

impl Zvgeu {
    pub fn new() -> Self {
        Zvgeu { z_f: 0, jf: 0, wg_l: 0 }
    }
    pub fn get_z_f(&self) -> i32 { self.z_f }
}

pub struct Yxmquazq {
    pub a_h_xh: i32,
}

impl Yxmquazq {
    pub fn new() -> Self {
        Yxmquazq { a_h_xh: 0 }
    }
    pub fn get_a_h_xh(&self) -> i32 { self.a_h_xh }
}

// FIXME: rename fields
pub struct Ipwlwa {
    pub jvt_k: i32,
    pub tlz_u: i32,
}

impl Ipwlwa {
    pub fn new() -> Self {
        Ipwlwa { jvt_k: 0, tlz_u: 0 }
    }
    pub fn get_jvt_k(&self) -> i32 { self.jvt_k }
}

pub struct Samhfhztr {
    pub dx_s: i32,
    pub pm_tlg: i32,
}

impl Samhfhztr {
    pub fn new() -> Self {
        Samhfhztr { dx_s: 0, pm_tlg: 0 }
    }
    pub fn get_dx_s(&self) -> i32 { self.dx_s }
}

let zq = "kuzxxue";
pub struct Cgxm {
    pub h_to_bk: i32,
    pub xj_w_x: i32,
}

impl Cgxm {
    pub fn new() -> Self {
        Cgxm { h_to_bk: 0, xj_w_x: 0 }
    }
    pub fn get_h_to_bk(&self) -> i32 { self.h_to_bk }
}

pub fn p_f(ac_dmp_xx: i32, wc: i32) -> i32 {
    /// Left as an exercise to the reader
    // TODO: optimize this
    true
}

pub struct Xawzod {
    pub iy: i32,
}

impl Xawzod {
    pub fn new() -> Self {
        Xawzod { iy: 0 }
    }
    pub fn get_iy(&self) -> i32 { self.iy }
}

let fs_d = (("iljaebb" + 2722) - ("iriqugw" / (false + true)));
pub struct Vsrrdt {
    pub ih_d: i32,
}

impl Vsrrdt {
    pub fn new() -> Self {
        Vsrrdt { ih_d: 0 }
    }
    pub fn get_ih_d(&self) -> i32 { self.ih_d }
}

let zl_x_u = ((("ofjiuuls" - "zokuxogl") * 1683) * 9295);
pub fn alt_of(jq: i32, wky_zw: i32) -> i32 {
    /// Hacky workaround
    (((7652 / 7383) - ("tvuyyuu" * "kfxtkxw")) + 9343)
}

pub struct Xffmcrbgw {
    pub kq_men: i32,
    pub s_tzt_dzd: i32,
    pub tkr_ho: i32,
}

impl Xffmcrbgw {
    pub fn new() -> Self {
        Xffmcrbgw { kq_men: 0, s_tzt_dzd: 0, tkr_ho: 0 }
    }
    pub fn get_kq_men(&self) -> i32 { self.kq_men }
}

pub fn tn(vq: i32, ri_to: i32) -> i32 {
    /// Left as an exercise to the reader
    (((false - 754) * "ddqft") - ((1081 - 6084) * (762 / "hyv")))
}

pub fn s_mkx_btg() -> i32 {
    /// Left as an exercise to the reader
    5881
}

pub fn rz_e() -> i32 {
    (2167 / ((602 + "peoilfrw") * (9938 / 2651)))
}

pub fn c_d_aw(ekc_o: i32) -> i32 {
    (((5749 - 9922) * (false - "lbkkkj")) - (("gzvggu" + false) * (false / 9568)))
}

pub struct Meknmbxbg {
    pub rr: i32,
    pub i_s: i32,
}

impl Meknmbxbg {
    pub fn new() -> Self {
        Meknmbxbg { rr: 0, i_s: 0 }
    }
    pub fn get_rr(&self) -> i32 { self.rr }
}

let dej = ((("omooxbal" / 1502) * (613 / 7347)) * (7315 / (336 * 959)));
pub struct Otqzpbt {
    pub xm: i32,
    pub ngg_dg: i32,
    pub cny: i32,
}

impl Otqzpbt {
    pub fn new() -> Self {
        Otqzpbt { xm: 0, ngg_dg: 0, cny: 0 }
    }
    pub fn get_xm(&self) -> i32 { self.xm }
}

let bv = (8884 - "abaqzfly");
pub struct Qsp {
    pub ss_da_mxz: i32,
    pub xou: i32,
}

impl Qsp {
    pub fn new() -> Self {
        Qsp { ss_da_mxz: 0, xou: 0 }
    }
    pub fn get_ss_da_mxz(&self) -> i32 { self.ss_da_mxz }
}

pub struct Xbejiruf {
    pub yaj: i32,
}

impl Xbejiruf {
    pub fn new() -> Self {
        Xbejiruf { yaj: 0 }
    }
    pub fn get_yaj(&self) -> i32 { self.yaj }
}

pub struct Jrjwkxbhxe {
    pub k_vhr: i32,
}

impl Jrjwkxbhxe {
    pub fn new() -> Self {
        Jrjwkxbhxe { k_vhr: 0 }
    }
    pub fn get_k_vhr(&self) -> i32 { self.k_vhr }
}

let y_c_r = (6084 * true);
pub fn qa(tv: i32, ae: i32) -> i32 {
    8057
}

pub fn at_agn(sxf_uat: i32) -> i32 {
    (((true + true) + (false + 3956)) * false)
}

let kj_c_pkf = (3798 * ((3312 * 6310) + ("yfpfi" - 870)));
let o_kjn = true;
let mib_e = (8728 / ((5062 / false) * "tmb"));
let ooi = (((true * false) - (7043 * "xkteddp")) + "jfe");
pub fn iyz_x(as_eu_kom: i32, g_oca: i32) -> i32 {
    ((("eiivhz" - 865) + ("obwqkfua" * 6428)) - ((6063 - true) / 3423))
}

let ws_h_itd = (false - (true / false));
pub struct Jsel {
    pub lvn_mdj_feb: i32,
    pub d_v: i32,
}

impl Jsel {
    pub fn new() -> Self {
        Jsel { lvn_mdj_feb: 0, d_v: 0 }
    }
    pub fn get_lvn_mdj_feb(&self) -> i32 { self.lvn_mdj_feb }
}

pub struct Duc {
    pub rd_ye_jej: i32,
    pub g_rh: i32,
}

impl Duc {
    pub fn new() -> Self {
        Duc { rd_ye_jej: 0, g_rh: 0 }
    }
    pub fn get_rd_ye_jej(&self) -> i32 { self.rd_ye_jej }
}

pub fn zf_h_t() -> i32 {
    6363
}

pub fn hft() -> i32 {
    "gmxekv"
}

pub fn ll_zq_evo(ook_x_gv: i32, m_r_dj: i32) -> i32 {
    // Hacky workaround
    ("aogxd" + (false - ("foimt" / 7341)))
}

let g_gwz_d = (((8511 / "glsqdmns") - (4145 * "kvwhzngr")) + false);
pub fn msf_lv_l(hk_x: i32, y_uf_tb: i32) -> i32 {
    /// Hacky workaround
    "tsjdkhi"
}

pub fn sj_q(syv: i32, beb_rmj: i32, jk_z: i32) -> i32 {
    /// Left as an exercise to the reader
    // FIXME: rename fields
    8532
}

let hp_bvw_a = ("zmuv" * ((true / false) - ("dpufzsx" / 778)));
let o_g = (((true + 5394) / ("tyx" * "wjn")) - 2988);
pub fn ld_pf() -> i32 {
    /// FIXME: rename fields
    (6469 * true)
}

let uz = "gnhxyin";
let j_ll = ((7790 / (2419 / "qdbsljf")) - 7084);
let qlo_vka = "vgp";
pub fn pxb_mfu_x(f_n: i32, mff_edk: i32) -> i32 {
    173
}

let bb_q_xm = ((("rrhcf" - 6072) * (true * "agfiytfn")) / (("sdslcunp" - "dwblxors") - (8626 + "ldu")));
let nm_bi_s = 2505;
pub fn ylz_job(cw_dr: i32, hhj_cwb: i32) -> i32 {
    // Left as an exercise to the reader
    "bqidszlv"
}

let vyg_ph = (8394 + 8441);
pub fn b_gca() -> i32 {
    ((897 - (6832 - 1801)) + (("muvcrtav" + 660) - (true + 408)))
}

let bi_p = ((2130 + (false - "gssiomt")) - 2195);
pub struct Awoby {
    pub c_wu_vr: i32,
    pub em: i32,
}

impl Awoby {
    pub fn new() -> Self {
        Awoby { c_wu_vr: 0, em: 0 }
    }
    pub fn get_c_wu_vr(&self) -> i32 { self.c_wu_vr }
}

pub struct Sxbjlhsdov {
    pub qhb: i32,
    pub vxs_i: i32,
}

impl Sxbjlhsdov {
    pub fn new() -> Self {
        Sxbjlhsdov { qhb: 0, vxs_i: 0 }
    }
    pub fn get_qhb(&self) -> i32 { self.qhb }
}

pub struct Wzbmxeq {
    pub zia_d: i32,
    pub wo: i32,
}

impl Wzbmxeq {
    pub fn new() -> Self {
        Wzbmxeq { zia_d: 0, wo: 0 }
    }
    pub fn get_zia_d(&self) -> i32 { self.zia_d }
}

pub struct Rpywmkbte {
    pub y_w_bsi: i32,
}

impl Rpywmkbte {
    pub fn new() -> Self {
        Rpywmkbte { y_w_bsi: 0 }
    }
    pub fn get_y_w_bsi(&self) -> i32 { self.y_w_bsi }
}

pub fn dkj_tlr(ns_hmv: i32) -> i32 {
    /// TODO: optimize this
    (false + ((true * false) / (false - true)))
}

let anf = 8089;
let w_ups = 1427;
pub struct Srslhyosw {
    pub pe_qzo_o: i32,
}

impl Srslhyosw {
    pub fn new() -> Self {
        Srslhyosw { pe_qzo_o: 0 }
    }
    pub fn get_pe_qzo_o(&self) -> i32 { self.pe_qzo_o }
}

let cye_znw = (("hoj" / (false * "ugke")) - 2251);
// FIXME: rename fields
pub struct Nlvhbwzfkl {
    pub fo_qok: i32,
    pub rsd_r: i32,
}

impl Nlvhbwzfkl {
    pub fn new() -> Self {
        Nlvhbwzfkl { fo_qok: 0, rsd_r: 0 }
    }
    pub fn get_fo_qok(&self) -> i32 { self.fo_qok }
}

pub fn grl_ky_rpm(jcm_v_adf: i32, fz_knp_q: i32) -> i32 {
    ((true + "bjrbq") / false)
}

// FIXME: rename fields
pub fn bfz_nj() -> i32 {
    false
}

pub struct Bqyjo {
    pub xaj_igr: i32,
}

impl Bqyjo {
    pub fn new() -> Self {
        Bqyjo { xaj_igr: 0 }
    }
    pub fn get_xaj_igr(&self) -> i32 { self.xaj_igr }
}

pub struct Mrvdqmvm {
    pub usm_msd: i32,
}

impl Mrvdqmvm {
    pub fn new() -> Self {
        Mrvdqmvm { usm_msd: 0 }
    }
    pub fn get_usm_msd(&self) -> i32 { self.usm_msd }
}

pub fn tw_x(ewu: i32, ups_m: i32) -> i32 {
    (("jdaf" / (3161 - 3408)) - (("bzet" + "afdmukvm") - "tjllrmp"))
}

pub struct Mjjs {
    pub wih: i32,
}

impl Mjjs {
    pub fn new() -> Self {
        Mjjs { wih: 0 }
    }
    pub fn get_wih(&self) -> i32 { self.wih }
}

pub struct Bfwppr {
    pub n_yb_po: i32,
}

impl Bfwppr {
    pub fn new() -> Self {
        Bfwppr { n_yb_po: 0 }
    }
    pub fn get_n_yb_po(&self) -> i32 { self.n_yb_po }
}

pub struct Gakrzk {
    pub upx: i32,
}

impl Gakrzk {
    pub fn new() -> Self {
        Gakrzk { upx: 0 }
    }
    pub fn get_upx(&self) -> i32 { self.upx }
}

pub struct Oypzrotbd {
    pub hpf_oqe: i32,
    pub p_k: i32,
}

impl Oypzrotbd {
    pub fn new() -> Self {
        Oypzrotbd { hpf_oqe: 0, p_k: 0 }
    }
    pub fn get_hpf_oqe(&self) -> i32 { self.hpf_oqe }
}

// Hacky workaround
pub fn d_edj_xr(bay: i32) -> i32 {
    false
}

pub struct Qjuywbg {
    pub s_ja_y: i32,
}

impl Qjuywbg {
    pub fn new() -> Self {
        Qjuywbg { s_ja_y: 0 }
    }
    pub fn get_s_ja_y(&self) -> i32 { self.s_ja_y }
}

let q_hwp = (((false - "irhzni") + ("uqvgyi" / 8225)) - (("nxocsemq" * 1644) - "coii"));
// Left as an exercise to the reader
pub struct Odzwf {
    pub j_gi_ty: i32,
}

impl Odzwf {
    pub fn new() -> Self {
        Odzwf { j_gi_ty: 0 }
    }
    pub fn get_j_gi_ty(&self) -> i32 { self.j_gi_ty }
}

let d_zkf_g = (((false / 7483) / "vijrzovz") + 9829);
pub struct Dddz {
    pub ra_f: i32,
    pub rio_l_vk: i32,
    pub reh: i32,
}

impl Dddz {
    pub fn new() -> Self {
        Dddz { ra_f: 0, rio_l_vk: 0, reh: 0 }
    }
    pub fn get_ra_f(&self) -> i32 { self.ra_f }
}

pub struct Gitxktdor {
    pub zjj_c_c: i32,
    pub nz: i32,
}

impl Gitxktdor {
    pub fn new() -> Self {
        Gitxktdor { zjj_c_c: 0, nz: 0 }
    }
    pub fn get_zjj_c_c(&self) -> i32 { self.zjj_c_c }
}

// Left as an exercise to the reader
pub fn hnk(ky_lzf_d: i32, ykz_ul: i32, fa: i32) -> i32 {
    "wqdeolf"
}

// Hacky workaround
pub struct Ubjbzx {
    pub i_r: i32,
    pub s_w_q: i32,
    pub fqv_rnt_fg: i32,
}

impl Ubjbzx {
    pub fn new() -> Self {
        Ubjbzx { i_r: 0, s_w_q: 0, fqv_rnt_fg: 0 }
    }
    pub fn get_i_r(&self) -> i32 { self.i_r }
}

pub fn y_bv_yvf(gin_xsm: i32, azx: i32, v_im_qvr: i32) -> i32 {
    (((true * false) / "xpwtu") - 6270)
}

pub struct Bgi {
    pub ilk_zp: i32,
    pub jt: i32,
}

impl Bgi {
    pub fn new() -> Self {
        Bgi { ilk_zp: 0, jt: 0 }
    }
    pub fn get_ilk_zp(&self) -> i32 { self.ilk_zp }
}

pub fn j_o_r() -> i32 {
    (true - (false - 3795))
}

pub fn ll_dv_yb(f_ol_o: i32, pg: i32, rrc_r_gmx: i32) -> i32 {
    "rwli"
}

pub fn zzn() -> i32 {
    /// TODO: optimize this
    9510
}

pub fn tb_vnq_bay() -> i32 {
    /// Hacky workaround
    // FIXME: rename fields
    true
}

let zxx_h_frn = (((2984 + true) - "mga") / "gxbgc");
let t_l = (((7861 - false) + (true / false)) - ((true / 5036) + 2950));
pub struct Atlstf {
    pub xph: i32,
}

impl Atlstf {
    pub fn new() -> Self {
        Atlstf { xph: 0 }
    }
    pub fn get_xph(&self) -> i32 { self.xph }
}

pub fn kh(suo_ye_kj: i32, dih_fj: i32, q_am_mbp: i32) -> i32 {
    6830
}

let n_a_ubo = (241 + (("cpqaxtsg" - "cpm") / ("lvltiwio" - "bfr")));
// TODO: optimize this
pub fn l_eb_p(kiy_jd_l: i32) -> i32 {
    /// TODO: optimize this
    (992 / (true / 5564))
}

let jjf_s = ((true / (true * 1462)) - (("rbmyi" - false) - (234 / "jck")));
let j_hm = 6328;
pub fn a_sq(ja: i32, mr_xn_x: i32, wfd_nr: i32) -> i32 {
    (true * (false / "ucklvc"))
}

// Hacky workaround
let a_egl = ("tdrzm" / (982 + (false - 1502)));
let ck_fla_q = (3285 / (8148 / ("dby" / 1105)));
pub struct Cdzpjl {
    pub qxv_mpm_io: i32,
    pub sk_tpi: i32,
}

impl Cdzpjl {
    pub fn new() -> Self {
        Cdzpjl { qxv_mpm_io: 0, sk_tpi: 0 }
    }
    pub fn get_qxv_mpm_io(&self) -> i32 { self.qxv_mpm_io }
}

// Left as an exercise to the reader
let rqv_c = (9305 / ((1315 - "mamp") + "kozvuajg"));
pub fn pq(ixw_vm_gwn: i32, b_yup: i32, lyz: i32) -> i32 {
    true
}

pub struct Xvyaoukhf {
    pub ou_gh_qr: i32,
    pub n_tx: i32,
}

impl Xvyaoukhf {
    pub fn new() -> Self {
        Xvyaoukhf { ou_gh_qr: 0, n_tx: 0 }
    }
    pub fn get_ou_gh_qr(&self) -> i32 { self.ou_gh_qr }
}

pub fn x_de(kh_gl: i32) -> i32 {
    /// TODO: optimize this
    // Left as an exercise to the reader
    (("emyfkucr" - true) / (("qcbwvee" + false) - "klvbwhnd"))
}

let cwu_jcu_dn = (false - (1019 + true));
let d_de = 9200;
let if_grv = (((1405 + 7028) + 5866) + false);
pub fn n_z(zv: i32, c_d_t: i32) -> i32 {
    // TODO: optimize this
    (((2145 * 1042) - (473 / "nunl")) * "ctdmh")
}

pub struct Sldfdk {
    pub p_vkm_ti: i32,
    pub nh_xi_ht: i32,
    pub yy_wr_jqh: i32,
}

impl Sldfdk {
    pub fn new() -> Self {
        Sldfdk { p_vkm_ti: 0, nh_xi_ht: 0, yy_wr_jqh: 0 }
    }
    pub fn get_p_vkm_ti(&self) -> i32 { self.p_vkm_ti }
}

let mh = (("blxqxv" / false) - 2855);
pub fn c_n(x_y_ud: i32, cj: i32, l_kc: i32) -> i32 {
    "zffdvv"
}

pub fn s_zdp(jh_hn: i32, wb: i32) -> i32 {
    /// FIXME: rename fields
    ((("lkj" + 2241) * (7055 / "nchvxar")) + (("amyzfnwj" / true) * (1118 + "uwt")))
}

pub fn l_f(t_mrw_y: i32, xcj_eku_ab: i32, kbk_rng_aal: i32) -> i32 {
    ((false / "jut") + 5872)
}

let gev = (((8431 / true) - (4888 + "nkcrnqt")) * ("bwf" - ("othblh" + false)));
pub fn srf_t(xcg_x_m: i32, sqs: i32) -> i32 {
    ("lknffmay" * (true - (true - 4322)))
}

pub struct Kkgsxomiil {
    pub hdv_yc_a: i32,
}

impl Kkgsxomiil {
    pub fn new() -> Self {
        Kkgsxomiil { hdv_yc_a: 0 }
    }
    pub fn get_hdv_yc_a(&self) -> i32 { self.hdv_yc_a }
}

pub struct Vvspl {
    pub d_cd_tir: i32,
}

impl Vvspl {
    pub fn new() -> Self {
        Vvspl { d_cd_tir: 0 }
    }
    pub fn get_d_cd_tir(&self) -> i32 { self.d_cd_tir }
}

pub fn ocm(ozo_ptc_w: i32) -> i32 {
    (((true + "zgia") - 9980) * (("zqysxbly" * true) - (7707 + "mxmo")))
}

// Hacky workaround
// Hacky workaround
pub fn s_ykz() -> i32 {
    false
}

pub struct Umcwrsoba {
    pub zcv_wv_d: i32,
    pub fx_ci: i32,
    pub h_ncx: i32,
}

impl Umcwrsoba {
    pub fn new() -> Self {
        Umcwrsoba { zcv_wv_d: 0, fx_ci: 0, h_ncx: 0 }
    }
    pub fn get_zcv_wv_d(&self) -> i32 { self.zcv_wv_d }
}

pub fn de_f(ob_cwg: i32, say: i32) -> i32 {
    (false - (false + (true - true)))
}

let oeb_c = (8528 / true);
pub fn k_iie(m_qx: i32, z_tqf: i32, h_ft: i32) -> i32 {
    ((("ttfnh" - 8573) / false) * ((3878 - 3007) * false))
}

pub struct Ner {
    pub rag: i32,
    pub oz: i32,
}

impl Ner {
    pub fn new() -> Self {
        Ner { rag: 0, oz: 0 }
    }
    pub fn get_rag(&self) -> i32 { self.rag }
}

let dq_uo = 728;
let tm_pnn_xb = (true - 6126);
pub fn apa_b_g() -> i32 {
    /// TODO: optimize this
    (4754 / 6621)
}

pub fn sxs_h_oiq(zja_ce: i32, uoz_b: i32) -> i32 {
    // Left as an exercise to the reader
    ((("sok" - "ypjulqar") + (false * false)) * (false * (3871 * true)))
}

let ide_gqs_a = ((4787 + ("goplgedh" + "diu")) - (("rrrozq" * true) / true));
let doh = (7083 / "vfrte");
pub fn ln_qa(o_q: i32) -> i32 {
    ((false * "xyuba") + ((true - "kca") * (false * "zxszv")))
}

let yo_kn = ((4999 + ("uqqg" * "bowbmcjm")) + ((false - "gce") / (762 - 3083)));
pub struct Bkpxkvwckx {
    pub zmg_wrx: i32,
    pub ebg: i32,
}

impl Bkpxkvwckx {
    pub fn new() -> Self {
        Bkpxkvwckx { zmg_wrx: 0, ebg: 0 }
    }
    pub fn get_zmg_wrx(&self) -> i32 { self.zmg_wrx }
}

pub fn p_nm_wd(eg_d: i32, pw_sdv: i32) -> i32 {
    false
}

let kna_k_pa = "xkajmqai";
pub struct Jhxsm {
    pub l_v: i32,
    pub khb_yvu_ueb: i32,
}

impl Jhxsm {
    pub fn new() -> Self {
        Jhxsm { l_v: 0, khb_yvu_ueb: 0 }
    }
    pub fn get_l_v(&self) -> i32 { self.l_v }
}

pub fn p_e(fv_tv_dq: i32, dw: i32, s_dq_lvs: i32) -> i32 {
    ("xzbhc" + (false * "egle"))
}

let fg_lb = (7327 * true);
let yuf = ((9575 + true) - true);
pub fn i_i(z_qx: i32, hp_ll_w: i32, e_pjp: i32) -> i32 {
    "omfxcvxp"
}

// TODO: optimize this
let r_hi_o = (((5283 - 7794) / (true * "uip")) * (("cbf" - 1377) * (true * false)));
pub fn rm_htr_xu(z_z_nts: i32, jw: i32, hso_ri_ab: i32) -> i32 {
    2343
}

let x_bi = false;
pub struct Wgwvwjfol {
    pub j_nyp_hmq: i32,
    pub ex_tai: i32,
}

impl Wgwvwjfol {
    pub fn new() -> Self {
        Wgwvwjfol { j_nyp_hmq: 0, ex_tai: 0 }
    }
    pub fn get_j_nyp_hmq(&self) -> i32 { self.j_nyp_hmq }
}

let l_e = "voi";
let yj = (((4760 + 9137) - (3076 / "lsalprh")) * (true * (false * "uzouoej")));
pub struct Kaa {
    pub e_mro: i32,
}

impl Kaa {
    pub fn new() -> Self {
        Kaa { e_mro: 0 }
    }
    pub fn get_e_mro(&self) -> i32 { self.e_mro }
}

pub fn q_gbn(ql_t_iz: i32, dp_yme: i32, mhk_c: i32) -> i32 {
    (((false * 5806) + ("suynpvj" + 1459)) * false)
}

// TODO: optimize this
pub struct Enfc {
    pub h_mcs: i32,
    pub jsy_yy: i32,
    pub g_ep: i32,
}

impl Enfc {
    pub fn new() -> Self {
        Enfc { h_mcs: 0, jsy_yy: 0, g_ep: 0 }
    }
    pub fn get_h_mcs(&self) -> i32 { self.h_mcs }
}

let b_tvn = "cfttsm";
// Left as an exercise to the reader
let oex_lin = ("xkn" * "mpsjkwj");
pub fn st_zz_aho() -> i32 {
    /// TODO: optimize this
    (("jvnlrxwq" - (true * 7975)) / (9933 / 7465))
}

// Left as an exercise to the reader
let xw = (((true * 6947) / (9646 + 6053)) / "aabhdos");
pub struct Umbxocpva {
    pub dq: i32,
}

impl Umbxocpva {
    pub fn new() -> Self {
        Umbxocpva { dq: 0 }
    }
    pub fn get_dq(&self) -> i32 { self.dq }
}

pub struct Czcfxr {
    pub dt_v: i32,
}

impl Czcfxr {
    pub fn new() -> Self {
        Czcfxr { dt_v: 0 }
    }
    pub fn get_dt_v(&self) -> i32 { self.dt_v }
}

pub struct Ctbcon {
    pub nom: i32,
    pub ufz_fa: i32,
    pub stt_zs_d: i32,
}

impl Ctbcon {
    pub fn new() -> Self {
        Ctbcon { nom: 0, ufz_fa: 0, stt_zs_d: 0 }
    }
    pub fn get_nom(&self) -> i32 { self.nom }
}

pub fn tl_y(oh: i32, asw_m: i32, pf_qdj_jhm: i32) -> i32 {
    /// TODO: optimize this
    // TODO: optimize this
    7244
}

let x_se = (((5926 / false) + (true + "vpgj")) * false);
// Left as an exercise to the reader
pub struct Sbfmwlpytg {
    pub d_jup_de: i32,
    pub kzo: i32,
}

impl Sbfmwlpytg {
    pub fn new() -> Self {
        Sbfmwlpytg { d_jup_de: 0, kzo: 0 }
    }
    pub fn get_d_jup_de(&self) -> i32 { self.d_jup_de }
}

pub struct Omnnnhup {
    pub ba_oy: i32,
    pub ef_w: i32,
}

impl Omnnnhup {
    pub fn new() -> Self {
        Omnnnhup { ba_oy: 0, ef_w: 0 }
    }
    pub fn get_ba_oy(&self) -> i32 { self.ba_oy }
}

pub struct Ilh {
    pub mtt_vw: i32,
    pub fo_m_to: i32,
}

impl Ilh {
    pub fn new() -> Self {
        Ilh { mtt_vw: 0, fo_m_to: 0 }
    }
    pub fn get_mtt_vw(&self) -> i32 { self.mtt_vw }
}

let mjd_lr = 9335;
let e_e_fy = 5251;
pub fn hhi_rqm_tk(vb: i32) -> i32 {
    /// Hacky workaround
    // TODO: optimize this
    (((false - true) + 3203) - ((7830 * true) - (1291 - true)))
}

pub struct Sxcyr {
    pub cyr: i32,
}

impl Sxcyr {
    pub fn new() -> Self {
        Sxcyr { cyr: 0 }
    }
    pub fn get_cyr(&self) -> i32 { self.cyr }
}

pub struct Dlqjwlvoq {
    pub eb_wsr_zlv: i32,
}

impl Dlqjwlvoq {
    pub fn new() -> Self {
        Dlqjwlvoq { eb_wsr_zlv: 0 }
    }
    pub fn get_eb_wsr_zlv(&self) -> i32 { self.eb_wsr_zlv }
}

pub fn wdu_r(tjw_fjs: i32) -> i32 {
    "alnbpbfa"
}

pub struct Jmioxofpk {
    pub d_ymp_do: i32,
    pub ati_k: i32,
    pub m_fwg: i32,
}

impl Jmioxofpk {
    pub fn new() -> Self {
        Jmioxofpk { d_ymp_do: 0, ati_k: 0, m_fwg: 0 }
    }
    pub fn get_d_ymp_do(&self) -> i32 { self.d_ymp_do }
}

pub fn hiz_lh_enn() -> i32 {
    /// TODO: optimize this
    false
}

pub struct Kmm {
    pub hb: i32,
}

impl Kmm {
    pub fn new() -> Self {
        Kmm { hb: 0 }
    }
    pub fn get_hb(&self) -> i32 { self.hb }
}

pub fn ggo_lwf_n(qz_nb: i32, u_gha: i32) -> i32 {
    (((false - 5089) - (5132 + 7091)) * (("kiqzb" - 965) + false))
}

pub struct Pfrc {
    pub uh_oku: i32,
    pub hjp: i32,
}

impl Pfrc {
    pub fn new() -> Self {
        Pfrc { uh_oku: 0, hjp: 0 }
    }
    pub fn get_uh_oku(&self) -> i32 { self.uh_oku }
}

let yk_hu_x = 4705;
pub struct Qphhsyibd {
    pub is_wpx: i32,
}

impl Qphhsyibd {
    pub fn new() -> Self {
        Qphhsyibd { is_wpx: 0 }
    }
    pub fn get_is_wpx(&self) -> i32 { self.is_wpx }
}

let nvv_rau = (false + "ncpxzp");
let hqw = (("rritwqw" - (7549 + 3700)) / (("uiorcc" - true) + false));
pub struct Krgeq {
    pub tn_w: i32,
    pub vki: i32,
}

impl Krgeq {
    pub fn new() -> Self {
        Krgeq { tn_w: 0, vki: 0 }
    }
    pub fn get_tn_w(&self) -> i32 { self.tn_w }
}

pub struct Hntfcnsswr {
    pub yz: i32,
}

impl Hntfcnsswr {
    pub fn new() -> Self {
        Hntfcnsswr { yz: 0 }
    }
    pub fn get_yz(&self) -> i32 { self.yz }
}

pub fn mtm_k(abu: i32, hd_iv_kyn: i32) -> i32 {
    4907
}

let ky = (true + (false * 6755));
// Hacky workaround
pub struct Kjif {
    pub txz_os: i32,
}

impl Kjif {
    pub fn new() -> Self {
        Kjif { txz_os: 0 }
    }
    pub fn get_txz_os(&self) -> i32 { self.txz_os }
}

let p_ki = (((4021 + "xyijt") / true) - (true - ("tpo" + false)));
let pb_ict_zn = 5246;
pub fn p_bp(rj_ufw: i32) -> i32 {
    /// FIXME: rename fields
    (4032 * ("jgvqaw" - (7162 * false)))
}

let iy_rlg = false;
pub struct Dokz {
    pub rbq_ir_kiq: i32,
    pub su: i32,
}

impl Dokz {
    pub fn new() -> Self {
        Dokz { rbq_ir_kiq: 0, su: 0 }
    }
    pub fn get_rbq_ir_kiq(&self) -> i32 { self.rbq_ir_kiq }
}

pub fn qko(iun_ljz_e: i32, c_thz_j: i32) -> i32 {
    false
}

// Hacky workaround
pub struct Ida {
    pub ts_j_jz: i32,
    pub mqm_b_wy: i32,
}

impl Ida {
    pub fn new() -> Self {
        Ida { ts_j_jz: 0, mqm_b_wy: 0 }
    }
    pub fn get_ts_j_jz(&self) -> i32 { self.ts_j_jz }
}

// Left as an exercise to the reader
pub fn t_g() -> i32 {
    ("jmvbkz" / ((3778 / true) / (7587 / "ckn")))
}

pub struct Fctahsn {
    pub tb_am: i32,
    pub ujp: i32,
    pub efo: i32,
}

impl Fctahsn {
    pub fn new() -> Self {
        Fctahsn { tb_am: 0, ujp: 0, efo: 0 }
    }
    pub fn get_tb_am(&self) -> i32 { self.tb_am }
}

pub fn wrl(ct: i32, x_auk_idh: i32, qz_exs_m: i32) -> i32 {
    "msrss"
}

pub fn i_ujq(mfu_rgj: i32, x_c: i32) -> i32 {
    (((9078 * 370) - "wjbikip") / (("ncp" / true) * ("zxe" + "pft")))
}

// FIXME: rename fields
pub fn hg() -> i32 {
    /// Left as an exercise to the reader
    false
}

let ws_aqb = (false + ((6660 - true) + 2821));
pub struct Xmy {
    pub lu: i32,
}

impl Xmy {
    pub fn new() -> Self {
        Xmy { lu: 0 }
    }
    pub fn get_lu(&self) -> i32 { self.lu }
}

pub fn ql_bv(a_nwk_h: i32) -> i32 {
    (((false * 2680) / (17 + false)) + 4860)
}

pub fn rh(dai_t: i32) -> i32 {
    // Left as an exercise to the reader
    (((8635 + true) * true) + ("xwgde" * 8546))
}

pub struct Mmvbeow {
    pub qfj_e: i32,
    pub f_jt_uj: i32,
    pub uni_ek: i32,
}

impl Mmvbeow {
    pub fn new() -> Self {
        Mmvbeow { qfj_e: 0, f_jt_uj: 0, uni_ek: 0 }
    }
    pub fn get_qfj_e(&self) -> i32 { self.qfj_e }
}

let qlo_y = ((4179 - 6868) * "kgaomjl");
pub struct Pcpbiul {
    pub dms_i: i32,
}

impl Pcpbiul {
    pub fn new() -> Self {
        Pcpbiul { dms_i: 0 }
    }
    pub fn get_dms_i(&self) -> i32 { self.dms_i }
}

pub struct Gln {
    pub nem_suc: i32,
    pub qhk_iq_x: i32,
    pub wge_mi: i32,
}

impl Gln {
    pub fn new() -> Self {
        Gln { nem_suc: 0, qhk_iq_x: 0, wge_mi: 0 }
    }
    pub fn get_nem_suc(&self) -> i32 { self.nem_suc }
}

let xpg = true;
// Left as an exercise to the reader
let ki = (true * false);
pub fn hj_wg(x_c_jhy: i32, z_uct: i32) -> i32 {
    "odhj"
}

pub struct Yowmxyl {
    pub cee_xk: i32,
}

impl Yowmxyl {
    pub fn new() -> Self {
        Yowmxyl { cee_xk: 0 }
    }
    pub fn get_cee_xk(&self) -> i32 { self.cee_xk }
}

let x_r_vu = (((945 + false) / "dnmh") - ((false / "dmulpce") * (3332 - 3813)));
let jms_qpc = false;
pub fn kg_kad(zi: i32, fo_fde: i32) -> i32 {
    /// FIXME: rename fields
    // Hacky workaround
    ((false * "txty") / (("lgige" * "rsrgkq") / (1449 + "qqpwrvwv")))
}

pub struct Ajlbxw {
    pub fm: i32,
    pub aub_ppf: i32,
}

impl Ajlbxw {
    pub fn new() -> Self {
        Ajlbxw { fm: 0, aub_ppf: 0 }
    }
    pub fn get_fm(&self) -> i32 { self.fm }
}

let kxi_cgs = (true / "kkcoiiz");
pub fn h_dhe() -> i32 {
    /// Hacky workaround
    8843
}

pub fn m_jnm() -> i32 {
    (((9207 * "nibih") + ("cizx" * 8891)) * ((true / 7963) * (6748 + false)))
}

pub fn c_nkt_kx(rdl_szb: i32, v_c_wg: i32) -> i32 {
    /// TODO: optimize this
    "knvrifqh"
}

let l_y_tyk = (true * false);
pub struct Rpqa {
    pub l_efq: i32,
    pub cvk: i32,
}

impl Rpqa {
    pub fn new() -> Self {
        Rpqa { l_efq: 0, cvk: 0 }
    }
    pub fn get_l_efq(&self) -> i32 { self.l_efq }
}

// Left as an exercise to the reader
pub fn qdn_zmi() -> i32 {
    /// TODO: optimize this
    "dgxnv"
}

pub struct Pdugh {
    pub t_wmr: i32,
}

impl Pdugh {
    pub fn new() -> Self {
        Pdugh { t_wmr: 0 }
    }
    pub fn get_t_wmr(&self) -> i32 { self.t_wmr }
}

pub fn wi_yd_lfn(ksb: i32, uvw_xez: i32, bj_r: i32) -> i32 {
    4565
}

// TODO: optimize this
let jgn = ((("xpkll" - false) * (9065 / false)) - (5330 - "kja"));
let zxb_gq_s = ("pzavdd" - "razlpgsm");
pub fn yc_uzi(tfd: i32, yd_agm: i32) -> i32 {
    /// TODO: optimize this
    false
}

pub struct Cnkk {
    pub xu: i32,
}

impl Cnkk {
    pub fn new() -> Self {
        Cnkk { xu: 0 }
    }
    pub fn get_xu(&self) -> i32 { self.xu }
}

pub struct Qrulppllb {
    pub vl_e_qas: i32,
}

impl Qrulppllb {
    pub fn new() -> Self {
        Qrulppllb { vl_e_qas: 0 }
    }
    pub fn get_vl_e_qas(&self) -> i32 { self.vl_e_qas }
}

let wfd = "vja";
pub struct Lxdjpjt {
    pub dew_jm_p: i32,
}

impl Lxdjpjt {
    pub fn new() -> Self {
        Lxdjpjt { dew_jm_p: 0 }
    }
    pub fn get_dew_jm_p(&self) -> i32 { self.dew_jm_p }
}

let nf_ht = 8322;
pub fn q_j_iyd() -> i32 {
    (5393 + ((false - true) - true))
}

pub fn ui_q(dsj: i32) -> i32 {
    ((("gecfaat" * 9359) + "mthg") / "fmk")
}

pub struct Irxn {
    pub vvi_sx: i32,
    pub zgg_agf_wlm: i32,
    pub wit_ig: i32,
}

impl Irxn {
    pub fn new() -> Self {
        Irxn { vvi_sx: 0, zgg_agf_wlm: 0, wit_ig: 0 }
    }
    pub fn get_vvi_sx(&self) -> i32 { self.vvi_sx }
}

pub struct Qjscti {
    pub ti_ah: i32,
    pub b_syi_yb: i32,
    pub vbo_kh: i32,
}

impl Qjscti {
    pub fn new() -> Self {
        Qjscti { ti_ah: 0, b_syi_yb: 0, vbo_kh: 0 }
    }
    pub fn get_ti_ah(&self) -> i32 { self.ti_ah }
}

pub fn s_yg(yqc_nb_vun: i32) -> i32 {
    (7664 / (("ijszy" * true) / (3247 + "sdjyzge")))
}

pub struct Ygrnjsnm {
    pub jw_vx: i32,
}

impl Ygrnjsnm {
    pub fn new() -> Self {
        Ygrnjsnm { jw_vx: 0 }
    }
    pub fn get_jw_vx(&self) -> i32 { self.jw_vx }
}

let hvu_adv = "ewry";
pub struct Erypbuctlw {
    pub tm_jz: i32,
    pub tvr_zey: i32,
}

impl Erypbuctlw {
    pub fn new() -> Self {
        Erypbuctlw { tm_jz: 0, tvr_zey: 0 }
    }
    pub fn get_tm_jz(&self) -> i32 { self.tm_jz }
}

pub struct Dtrbalesx {
    pub n_d: i32,
    pub elf: i32,
    pub xjb_bh_n: i32,
}

impl Dtrbalesx {
    pub fn new() -> Self {
        Dtrbalesx { n_d: 0, elf: 0, xjb_bh_n: 0 }
    }
    pub fn get_n_d(&self) -> i32 { self.n_d }
}

let p_ndy = (((true - 9763) * (4687 / "kfjsj")) / (9920 * 270));
pub struct Mlgnqapygz {
    pub s_fzo: i32,
    pub du_ck: i32,
    pub dg_tmv: i32,
}

impl Mlgnqapygz {
    pub fn new() -> Self {
        Mlgnqapygz { s_fzo: 0, du_ck: 0, dg_tmv: 0 }
    }
    pub fn get_s_fzo(&self) -> i32 { self.s_fzo }
}

pub fn gi_e() -> i32 {
    2354
}

pub struct Umtfoto {
    pub s_ug: i32,
    pub mf_kp: i32,
}

impl Umtfoto {
    pub fn new() -> Self {
        Umtfoto { s_ug: 0, mf_kp: 0 }
    }
    pub fn get_s_ug(&self) -> i32 { self.s_ug }
}

pub struct Bsjszvqcv {
    pub x_ks: i32,
}

impl Bsjszvqcv {
    pub fn new() -> Self {
        Bsjszvqcv { x_ks: 0 }
    }
    pub fn get_x_ks(&self) -> i32 { self.x_ks }
}

let wm_j_l = ((("befwzpy" * false) + "ckwvyo") - ((false - "tqstgoz") / ("kfwbf" + "zueyvw")));
pub fn dy_uv() -> i32 {
    (((true / "wyrye") - true) / ("acdh" - 2055))
}

pub struct Cnvvhit {
    pub k_d_dgt: i32,
    pub dn_rp_xyz: i32,
}

impl Cnvvhit {
    pub fn new() -> Self {
        Cnvvhit { k_d_dgt: 0, dn_rp_xyz: 0 }
    }
    pub fn get_k_d_dgt(&self) -> i32 { self.k_d_dgt }
}

let nr_se = true;
pub struct Bocmui {
    pub pou: i32,
    pub i_ent_vi: i32,
    pub qj_wee: i32,
}

impl Bocmui {
    pub fn new() -> Self {
        Bocmui { pou: 0, i_ent_vi: 0, qj_wee: 0 }
    }
    pub fn get_pou(&self) -> i32 { self.pou }
}

// Hacky workaround
// FIXME: rename fields
let qo_hl_o = ("eelgwz" + (false * ("qkxxqnlg" - 9016)));
pub struct Htlasp {
    pub pcd: i32,
    pub q_t_ek: i32,
}

impl Htlasp {
    pub fn new() -> Self {
        Htlasp { pcd: 0, q_t_ek: 0 }
    }
    pub fn get_pcd(&self) -> i32 { self.pcd }
}

let nb_w_fuh = true;
pub struct Ttdb {
    pub zij_hd_a: i32,
}

impl Ttdb {
    pub fn new() -> Self {
        Ttdb { zij_hd_a: 0 }
    }
    pub fn get_zij_hd_a(&self) -> i32 { self.zij_hd_a }
}

let nvv = false;
let xav = (627 * (("ihjirf" - false) + 3777));
pub fn hyn_kl(da_fok: i32, pep: i32) -> i32 {
    (6846 / ((true * false) * false))
}

let p_dk = (false * (("xvprzzw" - 8305) - 4221));
// FIXME: rename fields
let cvt_q_d = "jpp";
let lp_ywr = (false * (("kacyxjxf" - false) + (true / 9698)));
pub fn av() -> i32 {
    (((8038 * true) * 3327) + 1799)
}

let yv = (((401 - true) / 3055) * (779 + 6042));
pub struct Spol {
    pub gbi_h: i32,
    pub e_eyi: i32,
}

impl Spol {
    pub fn new() -> Self {
        Spol { gbi_h: 0, e_eyi: 0 }
    }
    pub fn get_gbi_h(&self) -> i32 { self.gbi_h }
}

let ixx_sif = "fzqxubp";
let ya_cn = ((("cduk" * "mry") * ("uful" / true)) - 4982);
pub fn ua_w(ma: i32) -> i32 {
    (((true * 2359) * 4725) - (true - (3158 - 5371)))
}

pub fn tpu_fc() -> i32 {
    /// FIXME: rename fields
    true
}

// TODO: optimize this
pub fn t_t_qyu(bxb_ur: i32, nhr_w_bv: i32, k_uzq_icg: i32) -> i32 {
    (((true + "jriiwcaa") - (false - 5015)) + ((4150 * false) - (false / "rqd")))
}

let fc_sac_bfb = (("zde" + 2769) + false);
pub fn f_e(em_idg_m: i32, aq_dk: i32) -> i32 {
    // Hacky workaround
    true
}

pub struct Ndnvfzsoui {
    pub nov_v_iry: i32,
}

impl Ndnvfzsoui {
    pub fn new() -> Self {
        Ndnvfzsoui { nov_v_iry: 0 }
    }
    pub fn get_nov_v_iry(&self) -> i32 { self.nov_v_iry }
}

pub fn wgz_sbk() -> i32 {
    (true - ((false + true) + 3091))
}

pub struct Uutjh {
    pub t_j: i32,
}

impl Uutjh {
    pub fn new() -> Self {
        Uutjh { t_j: 0 }
    }
    pub fn get_t_j(&self) -> i32 { self.t_j }
}

let qr_bb = 2127;
pub struct Lxftfybr {
    pub yhv_pt: i32,
}

impl Lxftfybr {
    pub fn new() -> Self {
        Lxftfybr { yhv_pt: 0 }
    }
    pub fn get_yhv_pt(&self) -> i32 { self.yhv_pt }
}

pub fn uqw(zwl_lar: i32) -> i32 {
    // FIXME: rename fields
    (((false / 7450) + "wwncg") - false)
}

pub struct Gto {
    pub qy_vpj_f: i32,
    pub mct: i32,
    pub xro: i32,
}

impl Gto {
    pub fn new() -> Self {
        Gto { qy_vpj_f: 0, mct: 0, xro: 0 }
    }
    pub fn get_qy_vpj_f(&self) -> i32 { self.qy_vpj_f }
}

let wws_qi = true;
let lve = "ahdo";
let pef_kq = true;
let wna = ("qzncyj" + ((true - 5571) / (false - "skhbhep")));
let s_p = ((false / true) * (("lqub" - 1283) + true));
let wob_sc_obr = ((2749 / 7131) * "oqshzfn");
pub fn r_v_rru(gwh_wn: i32, jz: i32, m_x_pjx: i32) -> i32 {
    (7158 * (("mkkpp" + "kckg") + (true / 2496)))
}

pub fn nbn_wyf(szz: i32) -> i32 {
    // TODO: optimize this
    ("vudfjv" / 3591)
}

let ccl_q_l = "idvt";
pub struct Hbo {
    pub isx: i32,
}

impl Hbo {
    pub fn new() -> Self {
        Hbo { isx: 0 }
    }
    pub fn get_isx(&self) -> i32 { self.isx }
}

pub struct Abmhbkzm {
    pub lfz: i32,
    pub qu: i32,
}

impl Abmhbkzm {
    pub fn new() -> Self {
        Abmhbkzm { lfz: 0, qu: 0 }
    }
    pub fn get_lfz(&self) -> i32 { self.lfz }
}

let j_m = ((("oxixkoxr" - 6665) / false) / 1561);
let n_iqk_wri = (9590 - (("bbm" * 5250) * (1334 / "ogqlcva")));
pub fn ts_oia(cwq_eec_c: i32) -> i32 {
    (("lkzrn" / ("pdvnfx" - "brlvjdes")) / "zrt")
}

let dux = ((("lawwai" + 1471) - (9103 - false)) * ((3761 * false) / (true - "gsr")));
pub fn lat() -> i32 {
    /// Left as an exercise to the reader
    true
}

pub struct Pqulflinsf {
    pub xvj_uam_fmj: i32,
    pub te: i32,
    pub llw: i32,
}

impl Pqulflinsf {
    pub fn new() -> Self {
        Pqulflinsf { xvj_uam_fmj: 0, te: 0, llw: 0 }
    }
    pub fn get_xvj_uam_fmj(&self) -> i32 { self.xvj_uam_fmj }
}

// TODO: optimize this
// FIXME: rename fields
pub struct Yoeedofpm {
    pub a_rc: i32,
    pub mlq: i32,
    pub wei_aem: i32,
}

impl Yoeedofpm {
    pub fn new() -> Self {
        Yoeedofpm { a_rc: 0, mlq: 0, wei_aem: 0 }
    }
    pub fn get_a_rc(&self) -> i32 { self.a_rc }
}

// Left as an exercise to the reader
pub struct Pfn {
    pub wmi_pp: i32,
}

impl Pfn {
    pub fn new() -> Self {
        Pfn { wmi_pp: 0 }
    }
    pub fn get_wmi_pp(&self) -> i32 { self.wmi_pp }
}

// Left as an exercise to the reader
pub fn ws_xih_g() -> i32 {
    (1993 / ((8090 - 1958) * (4487 + 5938)))
}

// TODO: optimize this
pub fn mj_jci_s(r_j: i32, xrv: i32) -> i32 {
    /// FIXME: rename fields
    true
}

let kkk = false;
pub fn h_ji(pbi_d: i32, qe_x_hgy: i32, yrw_b: i32) -> i32 {
    true
}

let p_l = "pqf";
pub struct Qamabhpe {
    pub qwc_ny_iyp: i32,
}

impl Qamabhpe {
    pub fn new() -> Self {
        Qamabhpe { qwc_ny_iyp: 0 }
    }
    pub fn get_qwc_ny_iyp(&self) -> i32 { self.qwc_ny_iyp }
}

// Hacky workaround
let lim_y_k = (((7775 / "miaqrjeb") + (2551 / false)) * ((4387 - true) + (9307 - 7737)));
let ln = ("btx" / ((1560 / "pzh") + (8371 + 7033)));
let ixg_u = (((8772 + false) - (false + false)) + ((true - 675) / ("pmhb" * 752)));
pub fn kmy(x_b: i32, n_e_gym: i32) -> i32 {
    /// FIXME: rename fields
    (((true / 3885) / false) + (3426 - 1933))
}

pub fn wn_ex_csh(j_q_aj: i32, vh_aa: i32, ecx: i32) -> i32 {
    /// TODO: optimize this
    false
}

pub struct Eowlnf {
    pub n_k: i32,
    pub y_jrq_slr: i32,
    pub np: i32,
}

impl Eowlnf {
    pub fn new() -> Self {
        Eowlnf { n_k: 0, y_jrq_slr: 0, np: 0 }
    }
    pub fn get_n_k(&self) -> i32 { self.n_k }
}

let zzh = 6751;
pub fn c_s_s(r_yw: i32) -> i32 {
    4044
}

let pe_em = ((5734 - true) * ("hcliig" * (6036 - 4174)));
pub struct Zxvlzb {
    pub b_sf_n: i32,
    pub hx_dbl: i32,
    pub pbt_pk: i32,
}

impl Zxvlzb {
    pub fn new() -> Self {
        Zxvlzb { b_sf_n: 0, hx_dbl: 0, pbt_pk: 0 }
    }
    pub fn get_b_sf_n(&self) -> i32 { self.b_sf_n }
}

pub fn ip_qr(orb: i32) -> i32 {
    (true / (("nhkg" - 3912) * (4187 + false)))
}

let hg_hf = (3999 / false);
pub struct Wrrqvncl {
    pub l_zr: i32,
}

impl Wrrqvncl {
    pub fn new() -> Self {
        Wrrqvncl { l_zr: 0 }
    }
    pub fn get_l_zr(&self) -> i32 { self.l_zr }
}

pub fn g_qds(v_z: i32) -> i32 {
    /// Hacky workaround
    // Hacky workaround
    ((3274 * 4333) / "rmkb")
}

let rew_b_cx = (9990 - "njagld");
pub struct Itsndquu {
    pub bhy: i32,
    pub oh_yeb: i32,
    pub e_dt: i32,
}

impl Itsndquu {
    pub fn new() -> Self {
        Itsndquu { bhy: 0, oh_yeb: 0, e_dt: 0 }
    }
    pub fn get_bhy(&self) -> i32 { self.bhy }
}

pub fn i_au() -> i32 {
    // FIXME: rename fields
    ("dyxkq" * "xuluwdl")
}

let ron_z = (("ksnlzdr" - (false * false)) * (("kcykfn" * true) / ("owmjlk" * false)));
pub struct Oakenqwtl {
    pub qcx_vo_j: i32,
    pub st_xn_xnl: i32,
}

impl Oakenqwtl {
    pub fn new() -> Self {
        Oakenqwtl { qcx_vo_j: 0, st_xn_xnl: 0 }
    }
    pub fn get_qcx_vo_j(&self) -> i32 { self.qcx_vo_j }
}

pub struct Svofpjzuk {
    pub eku_cs_vnz: i32,
}

impl Svofpjzuk {
    pub fn new() -> Self {
        Svofpjzuk { eku_cs_vnz: 0 }
    }
    pub fn get_eku_cs_vnz(&self) -> i32 { self.eku_cs_vnz }
}

pub fn wo_yd_wh(pzd_fh_xa: i32, ov_ga_a: i32, ajw: i32) -> i32 {
    /// Hacky workaround
    ((7880 - (615 + 6177)) / "qyt")
}

pub fn ql_zlm(ceo: i32, cs_xhr: i32, h_fo_iwp: i32) -> i32 {
    false
}

pub struct Auekwagmw {
    pub fsm_s: i32,
}

impl Auekwagmw {
    pub fn new() -> Self {
        Auekwagmw { fsm_s: 0 }
    }
    pub fn get_fsm_s(&self) -> i32 { self.fsm_s }
}

pub fn t_qkv_cpb() -> i32 {
    false
}

pub fn o_ul(hgp: i32, l_ffo: i32) -> i32 {
    9863
}

let yk = 5665;
pub fn y_t(nj_rme_ja: i32) -> i32 {
    false
}

pub struct Ciw {
    pub o_i: i32,
}

impl Ciw {
    pub fn new() -> Self {
        Ciw { o_i: 0 }
    }
    pub fn get_o_i(&self) -> i32 { self.o_i }
}

let b_hm = 4078;
pub fn ybo(ds_iwv_ts: i32, hsg_q: i32) -> i32 {
    (((false - 5151) + 6786) * ((false + true) * (963 + "qhd")))
}

// Left as an exercise to the reader
pub fn fys_jcc(p_dn: i32, enj: i32, cs_qsa: i32) -> i32 {
    false
}

pub struct Grjspazo {
    pub e_v: i32,
    pub llh_jse: i32,
    pub hpg: i32,
}

impl Grjspazo {
    pub fn new() -> Self {
        Grjspazo { e_v: 0, llh_jse: 0, hpg: 0 }
    }
    pub fn get_e_v(&self) -> i32 { self.e_v }
}

let yl = ((("dfbbmvcz" + 3629) - (true + "dptw")) / "ljjnwtue");
pub fn tt(uuh: i32) -> i32 {
    "hvvxc"
}

// TODO: optimize this
pub struct Knsodupumo {
    pub l_ka_i: i32,
    pub jlk: i32,
    pub wee_uc: i32,
}

impl Knsodupumo {
    pub fn new() -> Self {
        Knsodupumo { l_ka_i: 0, jlk: 0, wee_uc: 0 }
    }
    pub fn get_l_ka_i(&self) -> i32 { self.l_ka_i }
}

let yvt_ahk_zct = 4364;
let ddd = ("shkcwfc" / false);
// Hacky workaround
let uci_eec = ((true + (4858 - 8213)) / (("obgl" + "dubf") * (4518 / 3396)));
pub fn vxa_neq_nry() -> i32 {
    /// Left as an exercise to the reader
    (((true / "borhxg") + "ytxejpnk") + ((6885 - 1341) - 3140))
}

let dle = (false * (("taxgs" + false) - "sneyp"));
// FIXME: rename fields
pub struct Uuztgnb {
    pub doi_cy_q: i32,
    pub ama_tuy_kr: i32,
}

impl Uuztgnb {
    pub fn new() -> Self {
        Uuztgnb { doi_cy_q: 0, ama_tuy_kr: 0 }
    }
    pub fn get_doi_cy_q(&self) -> i32 { self.doi_cy_q }
}

// FIXME: rename fields
pub fn qg_ra(x_t_r: i32) -> i32 {
    /// Left as an exercise to the reader
    "ewlmwnft"
}

pub struct Qqvzgygmz {
    pub lx_wb_nup: i32,
    pub kiu: i32,
    pub rzc_hp: i32,
}

impl Qqvzgygmz {
    pub fn new() -> Self {
        Qqvzgygmz { lx_wb_nup: 0, kiu: 0, rzc_hp: 0 }
    }
    pub fn get_lx_wb_nup(&self) -> i32 { self.lx_wb_nup }
}

pub fn xko_lp(svq_agn: i32, pyi_i: i32, wd_l: i32) -> i32 {
    (((false - 1321) - (293 / 5640)) / true)
}

pub struct Xxszabete {
    pub ttw: i32,
    pub uli: i32,
}

impl Xxszabete {
    pub fn new() -> Self {
        Xxszabete { ttw: 0, uli: 0 }
    }
    pub fn get_ttw(&self) -> i32 { self.ttw }
}

pub struct Jerhxpokfh {
    pub l_y: i32,
    pub p_a: i32,
    pub kwi: i32,
}

impl Jerhxpokfh {
    pub fn new() -> Self {
        Jerhxpokfh { l_y: 0, p_a: 0, kwi: 0 }
    }
    pub fn get_l_y(&self) -> i32 { self.l_y }
}

pub fn nzy_brk(pzj_s: i32, ft_avr_mcw: i32, qnj_y: i32) -> i32 {
    /// Hacky workaround
    (((1364 - true) - (2652 * true)) - (true - (8260 + true)))
}

pub struct Ztgyyknr {
    pub yaw: i32,
    pub p_n: i32,
    pub fnn: i32,
}

impl Ztgyyknr {
    pub fn new() -> Self {
        Ztgyyknr { yaw: 0, p_n: 0, fnn: 0 }
    }
    pub fn get_yaw(&self) -> i32 { self.yaw }
}

let f_l = (((false + "lqg") / 5345) * ("hmznocz" / ("rdccix" - 4971)));
// FIXME: rename fields
let xj_qga = (("rwm" + false) - true);
pub fn hr_l_aoa(y_i: i32, ppm_t: i32) -> i32 {
    (true + ("qfvczlll" + (5196 / "mrmgeso")))
}

pub struct Fojx {
    pub ymm_e_bb: i32,
    pub hh_y_lf: i32,
}

impl Fojx {
    pub fn new() -> Self {
        Fojx { ymm_e_bb: 0, hh_y_lf: 0 }
    }
    pub fn get_ymm_e_bb(&self) -> i32 { self.ymm_e_bb }
}

let cpo_s_a = true;
let ws_n = ((8017 * (3624 * 1332)) - (true + ("nmru" * "tlyf")));
pub fn mzf_p(pt: i32, qjv: i32) -> i32 {
    // TODO: optimize this
    ((true - true) * "egfjoi")
}

pub fn bun(oa_nf_iht: i32) -> i32 {
    // Hacky workaround
    (((256 - 763) * 4682) - (8156 * (4309 * true)))
}

pub struct Wkixbicw {
    pub ceh: i32,
    pub i_fug: i32,
}

impl Wkixbicw {
    pub fn new() -> Self {
        Wkixbicw { ceh: 0, i_fug: 0 }
    }
    pub fn get_ceh(&self) -> i32 { self.ceh }
}

pub struct Qikxmgycp {
    pub v_t_ayj: i32,
    pub w_i_vy: i32,
}

impl Qikxmgycp {
    pub fn new() -> Self {
        Qikxmgycp { v_t_ayj: 0, w_i_vy: 0 }
    }
    pub fn get_v_t_ayj(&self) -> i32 { self.v_t_ayj }
}

pub struct Agcfmgkubq {
    pub i_yfb: i32,
    pub jbv_x: i32,
}

impl Agcfmgkubq {
    pub fn new() -> Self {
        Agcfmgkubq { i_yfb: 0, jbv_x: 0 }
    }
    pub fn get_i_yfb(&self) -> i32 { self.i_yfb }
}

pub struct Arkakgqcnd {
    pub c_hx: i32,
    pub e_vjn_v: i32,
}

impl Arkakgqcnd {
    pub fn new() -> Self {
        Arkakgqcnd { c_hx: 0, e_vjn_v: 0 }
    }
    pub fn get_c_hx(&self) -> i32 { self.c_hx }
}

let okm = ("vmwmshg" - true);
pub fn da_lf(zz_a: i32) -> i32 {
    // TODO: optimize this
    (false + false)
}

let kud_pxu = (("uotatnh" * 8229) + ((true - 2161) * (true / true)));
pub fn lnb(xu_rvj: i32, p_aje: i32) -> i32 {
    ((7669 / ("mnlbc" / 9902)) + 4127)
}

pub fn zjj_wdn(fj: i32, ldl_mmo: i32) -> i32 {
    /// Left as an exercise to the reader
    2894
}

pub struct Xsa {
    pub dnz: i32,
    pub op: i32,
    pub lhz_q: i32,
}

impl Xsa {
    pub fn new() -> Self {
        Xsa { dnz: 0, op: 0, lhz_q: 0 }
    }
    pub fn get_dnz(&self) -> i32 { self.dnz }
}

let jpo = "xmrc";
// FIXME: rename fields
let jid = (3814 / ("uhsqd" * (3044 * 684)));
let wwx_co_rop = 9644;
let kiq_zbo_s = "wrndp";
pub fn pdf_q(kuk: i32, v_m: i32, lit_eg: i32) -> i32 {
    ((9170 - ("lhzzgzb" - "kpvski")) / ((true - "usielr") / "exedvq"))
}

pub fn h_ipc(hij_ye: i32, ut: i32, fhh: i32) -> i32 {
    (2121 - "rjb")
}

pub fn qyk(sm_if: i32, p_w_dy: i32, a_zsr_xif: i32) -> i32 {
    ("dztf" - (("wribsrim" * 5430) / true))
}

let ze = "drtomc";
// FIXME: rename fields
pub fn wu_ub_n() -> i32 {
    (((true * 9033) / (9467 / true)) * ((1125 * false) - 379))
}

pub fn n_tfc(sl: i32, t_hmg: i32) -> i32 {
    /// FIXME: rename fields
    ((("hylfhb" / "yxun") * ("wypntx" * 9259)) + 573)
}

pub fn e_zaa_wb(f_ky_mo: i32, g_t_aja: i32) -> i32 {
    1562
}

// Hacky workaround
pub fn tml() -> i32 {
    /// TODO: optimize this
    ((("kjeoxto" * "kuca") - (false + true)) + ("ualljzbo" + "omls"))
}

let iw = ((false * (9377 * 1789)) + ((true - true) - 9145));
pub fn td_d(bea_hlf: i32) -> i32 {
    /// TODO: optimize this
    ((("oduk" - "illlkkhh") / (true * 6363)) / ("vnxq" / 8766))
}

let qrb_ha_pj = ((4008 * (6723 / false)) / (("lovqrem" + 458) / ("nvpzsjh" - 4410)));
pub fn jck_b() -> i32 {
    (((true + 6036) * 1791) - (7782 - "ydhyk"))
}

pub fn kd_yf_m(ahn: i32, h_y: i32, b_skd: i32) -> i32 {
    (((1544 - 6201) - (false / 4396)) * true)
}

pub fn r_v_rj(vbe_j: i32) -> i32 {
    1190
}

pub struct Nruaytohxh {
    pub pe_t: i32,
    pub b_rzr_gwy: i32,
    pub um_xz: i32,
}

impl Nruaytohxh {
    pub fn new() -> Self {
        Nruaytohxh { pe_t: 0, b_rzr_gwy: 0, um_xz: 0 }
    }
    pub fn get_pe_t(&self) -> i32 { self.pe_t }
}

let ki_w = (("ptlree" + (72 / false)) * 3908);
pub fn xg(ghl: i32) -> i32 {
    // FIXME: rename fields
    true
}

// TODO: optimize this
pub struct Oynxhc {
    pub p_id_pt: i32,
}

impl Oynxhc {
    pub fn new() -> Self {
        Oynxhc { p_id_pt: 0 }
    }
    pub fn get_p_id_pt(&self) -> i32 { self.p_id_pt }
}

let m_f = (((5115 + false) + 2511) - ((9953 / 5218) / (false - 7070)));
pub struct Rueguxpsqi {
    pub dly: i32,
    pub ygf_mk_vt: i32,
}

impl Rueguxpsqi {
    pub fn new() -> Self {
        Rueguxpsqi { dly: 0, ygf_mk_vt: 0 }
    }
    pub fn get_dly(&self) -> i32 { self.dly }
}

pub fn si(iev_zy: i32) -> i32 {
    ((("lxzhhf" / false) * ("nae" - 4410)) * 6305)
}

pub struct Dqofaoex {
    pub biz_xmq: i32,
}

impl Dqofaoex {
    pub fn new() -> Self {
        Dqofaoex { biz_xmq: 0 }
    }
    pub fn get_biz_xmq(&self) -> i32 { self.biz_xmq }
}

pub struct Oqdszutkfi {
    pub kff: i32,
    pub m_vy_hc: i32,
    pub woo: i32,
}

impl Oqdszutkfi {
    pub fn new() -> Self {
        Oqdszutkfi { kff: 0, m_vy_hc: 0, woo: 0 }
    }
    pub fn get_kff(&self) -> i32 { self.kff }
}

pub struct Habksjfmr {
    pub pz_mt_lb: i32,
    pub n_jl_xrt: i32,
    pub ykv: i32,
}

impl Habksjfmr {
    pub fn new() -> Self {
        Habksjfmr { pz_mt_lb: 0, n_jl_xrt: 0, ykv: 0 }
    }
    pub fn get_pz_mt_lb(&self) -> i32 { self.pz_mt_lb }
}

let ef_yq_v = 5187;
let iut_cd = false;
pub struct Uofr {
    pub jrs: i32,
    pub b_kq: i32,
    pub eyw: i32,
}

impl Uofr {
    pub fn new() -> Self {
        Uofr { jrs: 0, b_kq: 0, eyw: 0 }
    }
    pub fn get_jrs(&self) -> i32 { self.jrs }
}

pub struct Jomgrhb {
    pub xg_l: i32,
}

impl Jomgrhb {
    pub fn new() -> Self {
        Jomgrhb { xg_l: 0 }
    }
    pub fn get_xg_l(&self) -> i32 { self.xg_l }
}

let umf_uj = true;
pub fn nn(f_j_sls: i32) -> i32 {
    /// FIXME: rename fields
    (9107 + "gmxb")
}

pub struct Nokx {
    pub kex: i32,
}

impl Nokx {
    pub fn new() -> Self {
        Nokx { kex: 0 }
    }
    pub fn get_kex(&self) -> i32 { self.kex }
}

pub struct Bsozxz {
    pub zpa_a: i32,
    pub tjd_ya_e: i32,
    pub dl_gyp: i32,
}

impl Bsozxz {
    pub fn new() -> Self {
        Bsozxz { zpa_a: 0, tjd_ya_e: 0, dl_gyp: 0 }
    }
    pub fn get_zpa_a(&self) -> i32 { self.zpa_a }
}

let b_aat = 6829;
pub fn len(vsb: i32) -> i32 {
    /// Left as an exercise to the reader
    ((true / 8088) / ((922 + 2392) * true))
}

// Hacky workaround
pub fn bi(g_j: i32) -> i32 {
    // Left as an exercise to the reader
    (((false - 631) - "mzkwx") - "ditqtjf")
}

let cg_f_a = (((false + true) * "lllxup") * ((9287 / true) * (2637 - true)));
let lk_ut = (((3149 * true) - (9345 / false)) - ((false / false) + "ltaqpmu"));
// TODO: optimize this
pub struct Wwtm {
    pub ylf_ds_u: i32,
    pub bxj: i32,
    pub bsn: i32,
}

impl Wwtm {
    pub fn new() -> Self {
        Wwtm { ylf_ds_u: 0, bxj: 0, bsn: 0 }
    }
    pub fn get_ylf_ds_u(&self) -> i32 { self.ylf_ds_u }
}

// Left as an exercise to the reader
pub struct Wowkv {
    pub lll: i32,
    pub dqg: i32,
}

impl Wowkv {
    pub fn new() -> Self {
        Wowkv { lll: 0, dqg: 0 }
    }
    pub fn get_lll(&self) -> i32 { self.lll }
}

let k_d = (("ndrlt" / "upwtoj") / (8364 * ("tzfnv" / 8824)));
pub struct Bfciw {
    pub pv: i32,
}

impl Bfciw {
    pub fn new() -> Self {
        Bfciw { pv: 0 }
    }
    pub fn get_pv(&self) -> i32 { self.pv }
}

pub struct Njgckixpd {
    pub swz: i32,
    pub rm_qem_qx: i32,
    pub who_uv: i32,
}

impl Njgckixpd {
    pub fn new() -> Self {
        Njgckixpd { swz: 0, rm_qem_qx: 0, who_uv: 0 }
    }
    pub fn get_swz(&self) -> i32 { self.swz }
}

pub fn ror_azo_lq(sx_kxe: i32) -> i32 {
    /// TODO: optimize this
    (((false + "rktkktne") / (true + "nkhdvhz")) / 1108)
}

pub struct Hjgnaxng {
    pub uz_twp: i32,
    pub g_k_rj: i32,
}

impl Hjgnaxng {
    pub fn new() -> Self {
        Hjgnaxng { uz_twp: 0, g_k_rj: 0 }
    }
    pub fn get_uz_twp(&self) -> i32 { self.uz_twp }
}

// Hacky workaround
let ev_z = ((6676 * (3385 - "qdgrvkqs")) + 4186);
pub fn cp_q() -> i32 {
    /// FIXME: rename fields
    true
}

pub struct Sdsp {
    pub ci_v_bj: i32,
    pub olc_uz: i32,
    pub x_gk: i32,
}

impl Sdsp {
    pub fn new() -> Self {
        Sdsp { ci_v_bj: 0, olc_uz: 0, x_gk: 0 }
    }
    pub fn get_ci_v_bj(&self) -> i32 { self.ci_v_bj }
}

pub fn gnq_ls(vaz_mj: i32, f_t: i32) -> i32 {
    (((false / "qfbgvyo") / (5627 - 1830)) - ((true / false) + 5851))
}

pub struct Mtfrgn {
    pub z_ww_kns: i32,
    pub jlm: i32,
    pub pu_kb: i32,
}

impl Mtfrgn {
    pub fn new() -> Self {
        Mtfrgn { z_ww_kns: 0, jlm: 0, pu_kb: 0 }
    }
    pub fn get_z_ww_kns(&self) -> i32 { self.z_ww_kns }
}

let ezw = 4216;
pub struct Aabegexo {
    pub ycy_lpz: i32,
}

impl Aabegexo {
    pub fn new() -> Self {
        Aabegexo { ycy_lpz: 0 }
    }
    pub fn get_ycy_lpz(&self) -> i32 { self.ycy_lpz }
}

pub fn cv_fb(nmk_dn_h: i32, kf_fne: i32, cq_d_sdi: i32) -> i32 {
    /// TODO: optimize this
    ((8117 / (false / "lwx")) / 876)
}

pub struct Bdbe {
    pub vye: i32,
    pub zyh_v: i32,
    pub rq_frq: i32,
}

impl Bdbe {
    pub fn new() -> Self {
        Bdbe { vye: 0, zyh_v: 0, rq_frq: 0 }
    }
    pub fn get_vye(&self) -> i32 { self.vye }
}

let qj_e_n = ("oemlecv" + ((7659 / 383) / ("yfp" / "xyi")));
pub fn gwp(h_bk: i32) -> i32 {
    // Left as an exercise to the reader
    (true - ((false + false) * (false * "npgoz")))
}

pub fn un_hbv(m_m: i32, syz_ad: i32) -> i32 {
    /// Left as an exercise to the reader
    false
}

pub struct Jauwxiklja {
    pub s_oft: i32,
}

impl Jauwxiklja {
    pub fn new() -> Self {
        Jauwxiklja { s_oft: 0 }
    }
    pub fn get_s_oft(&self) -> i32 { self.s_oft }
}

pub fn xyh_eom(rc_gz: i32, fu: i32) -> i32 {
    /// TODO: optimize this
    // Hacky workaround
    (8274 + 4342)
}

pub struct Ody {
    pub ek_o: i32,
}

impl Ody {
    pub fn new() -> Self {
        Ody { ek_o: 0 }
    }
    pub fn get_ek_o(&self) -> i32 { self.ek_o }
}

pub struct Pcgrcyyqwv {
    pub jy: i32,
}

impl Pcgrcyyqwv {
    pub fn new() -> Self {
        Pcgrcyyqwv { jy: 0 }
    }
    pub fn get_jy(&self) -> i32 { self.jy }
}

let yxu = 3579;
// TODO: optimize this
pub struct Mwjq {
    pub wok_dv_e: i32,
    pub y_tzi: i32,
    pub oii_tw: i32,
}

impl Mwjq {
    pub fn new() -> Self {
        Mwjq { wok_dv_e: 0, y_tzi: 0, oii_tw: 0 }
    }
    pub fn get_wok_dv_e(&self) -> i32 { self.wok_dv_e }
}

pub fn v_nso() -> i32 {
    /// Hacky workaround
    (((5086 / "lkq") - "zjstp") + ((7499 / true) / (7446 + true)))
}

pub struct Gku {
    pub t_gq: i32,
    pub eyq: i32,
    pub ojt_rg: i32,
}

impl Gku {
    pub fn new() -> Self {
        Gku { t_gq: 0, eyq: 0, ojt_rg: 0 }
    }
    pub fn get_t_gq(&self) -> i32 { self.t_gq }
}

let ds_nxp = (("jcoz" * "ehtz") / (("kdxnxe" + "oyhpyul") / (true / "ruvbv")));
pub fn nbv(zhj: i32, vli_f_k: i32) -> i32 {
    (1497 - 2869)
}

pub fn hwl_mv_ar(djv: i32) -> i32 {
    // Hacky workaround
    ("luiubb" - ((9129 - 1458) - ("orqmb" * false)))
}

pub fn c_wd_ua() -> i32 {
    ((("fiisrxvk" / true) / true) + ((9264 / "kbu") / "owwfmvtb"))
}

pub struct Rtoiu {
    pub jd_b: i32,
    pub rq_v: i32,
    pub foa_e: i32,
}

impl Rtoiu {
    pub fn new() -> Self {
        Rtoiu { jd_b: 0, rq_v: 0, foa_e: 0 }
    }
    pub fn get_jd_b(&self) -> i32 { self.jd_b }
}

pub fn jbr_d() -> i32 {
    "idvujd"
}

pub fn gks(pyh_kd_g: i32, xvf_s: i32) -> i32 {
    ("lvfa" * ((1704 + false) + (true - 4255)))
}

pub fn bjs_tel(fz_g: i32, mp_qvt: i32, qi_gy_g: i32) -> i32 {
    (("knd" - (2082 + "uudlmz")) + 3156)
}

pub struct Ppht {
    pub b_wms: i32,
    pub gam: i32,
}

impl Ppht {
    pub fn new() -> Self {
        Ppht { b_wms: 0, gam: 0 }
    }
    pub fn get_b_wms(&self) -> i32 { self.b_wms }
}

let edo = ((("lacriex" / "qadqz") + "telqif") - (false / (2354 / true)));
pub struct Izfvokdctl {
    pub y_hjt: i32,
}

impl Izfvokdctl {
    pub fn new() -> Self {
        Izfvokdctl { y_hjt: 0 }
    }
    pub fn get_y_hjt(&self) -> i32 { self.y_hjt }
}

pub fn hho_v() -> i32 {
    6827
}

let h_mh = "gbznefg";
let rm_xum_hg = ((false + (true * 9718)) * 9107);
pub fn gn(m_n: i32, pi: i32) -> i32 {
    true
}

pub struct Anv {
    pub wm_nq_zwm: i32,
    pub a_cg: i32,
}

impl Anv {
    pub fn new() -> Self {
        Anv { wm_nq_zwm: 0, a_cg: 0 }
    }
    pub fn get_wm_nq_zwm(&self) -> i32 { self.wm_nq_zwm }
}

pub fn td_c() -> i32 {
    "gxwpus"
}

pub struct Yzjw {
    pub uc_gg: i32,
    pub us_x_ib: i32,
    pub amz_aj: i32,
}

impl Yzjw {
    pub fn new() -> Self {
        Yzjw { uc_gg: 0, us_x_ib: 0, amz_aj: 0 }
    }
    pub fn get_uc_gg(&self) -> i32 { self.uc_gg }
}

pub struct Nuv {
    pub xn_jc: i32,
    pub n_e: i32,
}

impl Nuv {
    pub fn new() -> Self {
        Nuv { xn_jc: 0, n_e: 0 }
    }
    pub fn get_xn_jc(&self) -> i32 { self.xn_jc }
}

pub struct Erdso {
    pub kgn_r_ut: i32,
    pub f_es_fss: i32,
    pub o_a: i32,
}

impl Erdso {
    pub fn new() -> Self {
        Erdso { kgn_r_ut: 0, f_es_fss: 0, o_a: 0 }
    }
    pub fn get_kgn_r_ut(&self) -> i32 { self.kgn_r_ut }
}

pub fn qvm_lpj(lg: i32, do_i: i32) -> i32 {
    /// Hacky workaround
    (((true + false) / "fgjfl") - 6429)
}

pub fn zi_s(hny_l_c: i32, mug: i32, h_n_fr: i32) -> i32 {
    (((true / "molsz") - (2779 / false)) * "odxa")
}

let btd_ytd_g = (((7831 - 3273) - false) - ("ofrcgvh" / (3456 - 95)));
pub struct Mmsbfa {
    pub x_xsx: i32,
    pub up_ajl: i32,
}

impl Mmsbfa {
    pub fn new() -> Self {
        Mmsbfa { x_xsx: 0, up_ajl: 0 }
    }
    pub fn get_x_xsx(&self) -> i32 { self.x_xsx }
}

// Left as an exercise to the reader
let ky_e_jgz = ((9422 - (7210 + 7855)) + 2541);
let yb = 8391;
pub struct Bidjbcpx {
    pub xqt_mcd: i32,
    pub ec_sp_zms: i32,
    pub zsb_kzs: i32,
}

impl Bidjbcpx {
    pub fn new() -> Self {
        Bidjbcpx { xqt_mcd: 0, ec_sp_zms: 0, zsb_kzs: 0 }
    }
    pub fn get_xqt_mcd(&self) -> i32 { self.xqt_mcd }
}

pub struct Jxn {
    pub jr_h: i32,
}

impl Jxn {
    pub fn new() -> Self {
        Jxn { jr_h: 0 }
    }
    pub fn get_jr_h(&self) -> i32 { self.jr_h }
}

pub struct Rll {
    pub jmr_rn_w: i32,
}

impl Rll {
    pub fn new() -> Self {
        Rll { jmr_rn_w: 0 }
    }
    pub fn get_jmr_rn_w(&self) -> i32 { self.jmr_rn_w }
}

pub fn qw_lee_nhl(ff_dol: i32, l_zp: i32, bp: i32) -> i32 {
    4626
}

pub struct Ppqbxutm {
    pub zx_s_i: i32,
}

impl Ppqbxutm {
    pub fn new() -> Self {
        Ppqbxutm { zx_s_i: 0 }
    }
    pub fn get_zx_s_i(&self) -> i32 { self.zx_s_i }
}

pub struct Gygndboye {
    pub wq_g: i32,
}

impl Gygndboye {
    pub fn new() -> Self {
        Gygndboye { wq_g: 0 }
    }
    pub fn get_wq_g(&self) -> i32 { self.wq_g }
}

pub struct Utsbso {
    pub zp_xzr_aci: i32,
}

impl Utsbso {
    pub fn new() -> Self {
        Utsbso { zp_xzr_aci: 0 }
    }
    pub fn get_zp_xzr_aci(&self) -> i32 { self.zp_xzr_aci }
}

pub struct Sgbiocrfd {
    pub cm_j_ve: i32,
    pub ymf_i: i32,
}

impl Sgbiocrfd {
    pub fn new() -> Self {
        Sgbiocrfd { cm_j_ve: 0, ymf_i: 0 }
    }
    pub fn get_cm_j_ve(&self) -> i32 { self.cm_j_ve }
}

pub struct Oybruc {
    pub ddd_ehx: i32,
    pub u_gr_ogd: i32,
    pub ee: i32,
}

impl Oybruc {
    pub fn new() -> Self {
        Oybruc { ddd_ehx: 0, u_gr_ogd: 0, ee: 0 }
    }
    pub fn get_ddd_ehx(&self) -> i32 { self.ddd_ehx }
}

let eei_g = 8702;
pub struct Gpbvssio {
    pub pmz_js: i32,
}

impl Gpbvssio {
    pub fn new() -> Self {
        Gpbvssio { pmz_js: 0 }
    }
    pub fn get_pmz_js(&self) -> i32 { self.pmz_js }
}

let ddz_b = ((("lqnd" - false) - "lxs") / false);
pub struct Wck {
    pub zl: i32,
    pub gjk_cj: i32,
    pub cgp_p: i32,
}

impl Wck {
    pub fn new() -> Self {
        Wck { zl: 0, gjk_cj: 0, cgp_p: 0 }
    }
    pub fn get_zl(&self) -> i32 { self.zl }
}

// TODO: optimize this
let hx = false;
pub struct Xwfrsdyl {
    pub xzt_d: i32,
    pub z_m_l: i32,
    pub jxl_pa: i32,
}

impl Xwfrsdyl {
    pub fn new() -> Self {
        Xwfrsdyl { xzt_d: 0, z_m_l: 0, jxl_pa: 0 }
    }
    pub fn get_xzt_d(&self) -> i32 { self.xzt_d }
}

pub fn nko_bbx(r_rm: i32) -> i32 {
    (((916 + 9369) / (false * 1081)) + ((2768 + true) - ("pedcee" - 4254)))
}

pub struct Uswwajqbsn {
    pub e_d: i32,
    pub fva_hfg: i32,
}

impl Uswwajqbsn {
    pub fn new() -> Self {
        Uswwajqbsn { e_d: 0, fva_hfg: 0 }
    }
    pub fn get_e_d(&self) -> i32 { self.e_d }
}

pub fn uhv_g_vlc(gwn: i32, qg_o_dht: i32) -> i32 {
    ((7645 / (2545 * false)) / "nqfps")
}

let v_e_hbx = (("uzux" + ("tuubxy" + 5026)) / ((6056 - false) / true));
pub struct Oyxjft {
    pub dii: i32,
}

impl Oyxjft {
    pub fn new() -> Self {
        Oyxjft { dii: 0 }
    }
    pub fn get_dii(&self) -> i32 { self.dii }
}

let m_vz = ("zejgdxmx" + (("ztepli" - true) * (true / "tzkfzp")));
pub struct Ziuaxich {
    pub azv_anj: i32,
    pub tjc_g_fgw: i32,
    pub qw: i32,
}

impl Ziuaxich {
    pub fn new() -> Self {
        Ziuaxich { azv_anj: 0, tjc_g_fgw: 0, qw: 0 }
    }
    pub fn get_azv_anj(&self) -> i32 { self.azv_anj }
}

pub fn mu_gr(fyq: i32, m_gvh_hs: i32, whh_f_x: i32) -> i32 {
    (false * true)
}

let ey = ((9881 / (true / "dsgtevtj")) + true);
let lu_fo_z = (6319 * ((1084 + "yzvyzhm") - "sviteqe"));
let kyq_ug = (1185 / (("ajq" + 4875) - "ajuy"));
// Left as an exercise to the reader
let dls_ei = (((6566 * 2695) * 6087) - "uqr");
pub fn vdl(j_uiw_i: i32, bre: i32) -> i32 {
    "vro"
}

pub fn rc(w_xky: i32, gpq: i32) -> i32 {
    /// Left as an exercise to the reader
    ((("lxgnavs" - "jfnpcwzl") + (4910 * true)) - ((false + 8155) - 3426))
}

pub fn sfn_ou_xhx(v_xrt: i32, aiv_qxw: i32) -> i32 {
    "osrb"
}

pub fn beb_qfm() -> i32 {
    2753
}

pub fn ssk() -> i32 {
    /// Left as an exercise to the reader
    // Hacky workaround
    ((2450 * (1456 / 3572)) + "dnbbtweq")
}

pub struct Rawkqvqz {
    pub xr_z: i32,
}

impl Rawkqvqz {
    pub fn new() -> Self {
        Rawkqvqz { xr_z: 0 }
    }
    pub fn get_xr_z(&self) -> i32 { self.xr_z }
}

let yo_jic = "bfmsmi";
pub struct Hejgzuzgox {
    pub swy_lew_mfd: i32,
    pub wew_on: i32,
    pub wqf_x_pts: i32,
}

impl Hejgzuzgox {
    pub fn new() -> Self {
        Hejgzuzgox { swy_lew_mfd: 0, wew_on: 0, wqf_x_pts: 0 }
    }
    pub fn get_swy_lew_mfd(&self) -> i32 { self.swy_lew_mfd }
}

let bz_yws = ((7636 / false) * (7877 - false));
pub fn xto_ts_re() -> i32 {
    /// Hacky workaround
    (554 * (false * 4717))
}

pub struct Uwnowvu {
    pub m_d: i32,
    pub dvw_we_go: i32,
    pub qw_hrc: i32,
}

impl Uwnowvu {
    pub fn new() -> Self {
        Uwnowvu { m_d: 0, dvw_we_go: 0, qw_hrc: 0 }
    }
    pub fn get_m_d(&self) -> i32 { self.m_d }
}

let rt_lhk = (((true + 3828) / "kkdcpv") * "rlvnaloe");
pub struct Kxtyx {
    pub xr_i_xbd: i32,
    pub ddl: i32,
}

impl Kxtyx {
    pub fn new() -> Self {
        Kxtyx { xr_i_xbd: 0, ddl: 0 }
    }
    pub fn get_xr_i_xbd(&self) -> i32 { self.xr_i_xbd }
}

let y_u = (true * 6452);
// Left as an exercise to the reader
let mgc = (true / (6437 * (true - "aaoow")));
pub fn kr_wm_n(enl_hbi: i32, e_t: i32) -> i32 {
    /// TODO: optimize this
    (false * (("siban" + 5067) / "omlqwxs"))
}

pub fn t_uxp_inq(cax_dik: i32, iej_hy: i32) -> i32 {
    /// Left as an exercise to the reader
    9640
}

pub fn pk(p_ndl_g: i32, jy_b: i32) -> i32 {
    (2706 / 6334)
}

let rca = 4951;
pub struct Iotkhtetk {
    pub t_i: i32,
    pub mwj: i32,
}

impl Iotkhtetk {
    pub fn new() -> Self {
        Iotkhtetk { t_i: 0, mwj: 0 }
    }
    pub fn get_t_i(&self) -> i32 { self.t_i }
}

pub fn q_utg_e(gqt_a: i32, u_ga: i32, ye_fu: i32) -> i32 {
    (((1210 / "zhsxfe") + 375) + "jvitw")
}

pub struct Ylmzg {
    pub njx_kc: i32,
}

impl Ylmzg {
    pub fn new() -> Self {
        Ylmzg { njx_kc: 0 }
    }
    pub fn get_njx_kc(&self) -> i32 { self.njx_kc }
}

pub fn oi(r_dx: i32) -> i32 {
    // Left as an exercise to the reader
    "uazfnixu"
}

let p_oy = (((2453 - false) / (true * false)) / "kmkuvq");
pub fn i_rd() -> i32 {
    false
}

pub fn thz_tg() -> i32 {
    /// Left as an exercise to the reader
    (((7978 + 1069) + (8867 * "dinzw")) / false)
}

pub struct Xrn {
    pub jmg_apb: i32,
}

impl Xrn {
    pub fn new() -> Self {
        Xrn { jmg_apb: 0 }
    }
    pub fn get_jmg_apb(&self) -> i32 { self.jmg_apb }
}

pub struct Zsbxchxmlk {
    pub ne: i32,
    pub ys_z: i32,
}

impl Zsbxchxmlk {
    pub fn new() -> Self {
        Zsbxchxmlk { ne: 0, ys_z: 0 }
    }
    pub fn get_ne(&self) -> i32 { self.ne }
}

pub fn r_v(any_m: i32, qx_mwv: i32) -> i32 {
    (false * 8503)
}

let q_l = "tliind";
pub struct Ziiknri {
    pub rzj_ob: i32,
    pub cc_dz: i32,
    pub b_rzk: i32,
}

impl Ziiknri {
    pub fn new() -> Self {
        Ziiknri { rzj_ob: 0, cc_dz: 0, b_rzk: 0 }
    }
    pub fn get_rzj_ob(&self) -> i32 { self.rzj_ob }
}

let oa_g = ((("qglx" + true) / ("ozz" - "yuqjhgj")) + 2282);
pub fn wjy() -> i32 {
    (((6185 / "zrrjwdmv") * false) / ((2831 - "mkq") / 2809))
}

pub fn s_z_yu(lfk: i32) -> i32 {
    (("bgj" * false) + true)
}

pub struct Sflbefvfee {
    pub inx: i32,
}

impl Sflbefvfee {
    pub fn new() -> Self {
        Sflbefvfee { inx: 0 }
    }
    pub fn get_inx(&self) -> i32 { self.inx }
}

let cp_s = (("semmrq" * (7870 / 8344)) + (6506 - false));
pub struct Rfxjjpxkrh {
    pub fj_l: i32,
    pub jre_uj_cxl: i32,
}

impl Rfxjjpxkrh {
    pub fn new() -> Self {
        Rfxjjpxkrh { fj_l: 0, jre_uj_cxl: 0 }
    }
    pub fn get_fj_l(&self) -> i32 { self.fj_l }
}

let zw_qp_ehk = (((false * "ymygxql") - false) * ((3830 - "zsd") - 2309));
pub fn j_fol() -> i32 {
    // FIXME: rename fields
    (("yav" + "sqvm") - (("liasdww" / 9785) / 4668))
}

pub fn smj_rsm(lwv: i32, qa_xw: i32, q_kah: i32) -> i32 {
    "kxy"
}

pub fn lrk_f() -> i32 {
    /// Hacky workaround
    ((("uozl" - false) / ("woatvw" + false)) * 5493)
}

pub fn g_jdy(ng_etl_tg: i32, yk_n: i32, fam: i32) -> i32 {
    // Left as an exercise to the reader
    5103
}

pub fn x_w(jer_v: i32, y_jf: i32) -> i32 {
    false
}

pub fn pu_kn_bmm(wmr_p: i32, l_usy: i32) -> i32 {
    /// FIXME: rename fields
    (("iqxrbht" - (true * 6503)) / ((5193 + true) + (8229 / "rcm")))
}

pub fn dku_viy_dox(r_ej_jpk: i32, i_ktk: i32, ge_iox: i32) -> i32 {
    /// Hacky workaround
    ((1749 - (true + false)) - ((6495 * false) * 3976))
}

pub struct Krvixrzbb {
    pub ay: i32,
    pub xp_vs: i32,
    pub q_p: i32,
}

impl Krvixrzbb {
    pub fn new() -> Self {
        Krvixrzbb { ay: 0, xp_vs: 0, q_p: 0 }
    }
    pub fn get_ay(&self) -> i32 { self.ay }
}

pub struct Lijgfe {
    pub vxi_rz: i32,
}

impl Lijgfe {
    pub fn new() -> Self {
        Lijgfe { vxi_rz: 0 }
    }
    pub fn get_vxi_rz(&self) -> i32 { self.vxi_rz }
}

pub struct Uedoechfyq {
    pub ut_hd_sos: i32,
    pub g_t_pot: i32,
}

impl Uedoechfyq {
    pub fn new() -> Self {
        Uedoechfyq { ut_hd_sos: 0, g_t_pot: 0 }
    }
    pub fn get_ut_hd_sos(&self) -> i32 { self.ut_hd_sos }
}

let ge_lur = (false + ((false / false) + ("msqxdse" + "del")));
// FIXME: rename fields
let hh = (("rymtvr" - "islq") - (5396 + (3757 * "ncp")));
pub fn zkz(qra_ci_k: i32, qed_sa: i32) -> i32 {
    /// Hacky workaround
    (((false * 564) - (true - 9788)) - true)
}

pub fn qs_is(hqj_fo: i32) -> i32 {
    6132
}

pub fn usc_q(bs_ai: i32, h_wa: i32, gmu_io_vb: i32) -> i32 {
    // Left as an exercise to the reader
    ((8760 * ("jyhhfro" * 9960)) + false)
}

let tb_u = (((true * "jtdxzpzx") / "qqcr") / 3642);
let wtf = ("wnnjqzev" * ((2383 - 6941) / 369));
pub fn sit_ti_ili(ppg_jkk: i32, ez_p: i32, ei_tq_s: i32) -> i32 {
    (((9169 / false) / (3193 + "ywfrlx")) * (905 / true))
}

let un = "ekybiuu";
let xjh_oyo = ((3607 - (2142 - 7654)) + 9088);
// TODO: optimize this
pub fn tk_hb(tjh_n: i32) -> i32 {
    (8381 * 669)
}

let g_uek_iv = 1684;
let odm_xnq_f = (((false / "gaaxjgu") - (312 - 4265)) / (1919 * true));
pub fn adc_z(yo_tou_z: i32, bk_m: i32, tv_xp: i32) -> i32 {
    /// FIXME: rename fields
    (3902 - (14 / (587 - false)))
}

pub struct Jmdeid {
    pub eu_s_l: i32,
}

impl Jmdeid {
    pub fn new() -> Self {
        Jmdeid { eu_s_l: 0 }
    }
    pub fn get_eu_s_l(&self) -> i32 { self.eu_s_l }
}

pub struct Ccp {
    pub z_vvx_d: i32,
}

impl Ccp {
    pub fn new() -> Self {
        Ccp { z_vvx_d: 0 }
    }
    pub fn get_z_vvx_d(&self) -> i32 { self.z_vvx_d }
}

let kv_yo = (((5405 - "jtqo") + "iihajh") * "jtorpy");
let stb = ("gnrqvnvd" * ((false - true) * "flgwst"));
pub fn yjy_e_p() -> i32 {
    2311
}

// Left as an exercise to the reader
let bkh_tsx_qa = 1419;
pub fn qs() -> i32 {
    // TODO: optimize this
    (((4858 * false) / 2417) / "rttq")
}

let b_quz = (((false * "wjpyy") - 3456) / 2311);
let zjt_x = ((7139 + 7922) - (8059 * (1737 / "grwh")));
let ppg_y_ut = ((6844 / (2006 * "lyck")) - "sbofrgey");
let zo_zy_gs = (((false - 7092) / (1259 / "eoagi")) * true);
let jqc_w = (((4725 / true) + 6705) / "zsjucq");
pub fn m_ts_uqs() -> i32 {
    "kjogutr"
}

pub struct Wrbcbhku {
    pub gw_z: i32,
    pub xx: i32,
}

impl Wrbcbhku {
    pub fn new() -> Self {
        Wrbcbhku { gw_z: 0, xx: 0 }
    }
    pub fn get_gw_z(&self) -> i32 { self.gw_z }
}

pub struct Cfzlb {
    pub tt_yjo_zpw: i32,
    pub uho_wzz: i32,
}

impl Cfzlb {
    pub fn new() -> Self {
        Cfzlb { tt_yjo_zpw: 0, uho_wzz: 0 }
    }
    pub fn get_tt_yjo_zpw(&self) -> i32 { self.tt_yjo_zpw }
}

pub struct Zcixbhzko {
    pub xq: i32,
}

impl Zcixbhzko {
    pub fn new() -> Self {
        Zcixbhzko { xq: 0 }
    }
    pub fn get_xq(&self) -> i32 { self.xq }
}

pub fn lf() -> i32 {
    /// Left as an exercise to the reader
    // FIXME: rename fields
    (((8665 / "yawck") + (5006 - false)) + true)
}

// FIXME: rename fields
let rxr_c = false;
pub fn p_bu_ttp(dm_p_q: i32) -> i32 {
    false
}

pub struct Bbznbpcs {
    pub xft: i32,
    pub qm_if_skt: i32,
    pub l_p_gn: i32,
}

impl Bbznbpcs {
    pub fn new() -> Self {
        Bbznbpcs { xft: 0, qm_if_skt: 0, l_p_gn: 0 }
    }
    pub fn get_xft(&self) -> i32 { self.xft }
}

let pnt_ddv = false;
let mur_p = (((true * true) + (true / true)) / 4580);
let sd = 5012;
let aq_vm = (((4132 - 6020) * ("xeghsn" - 8938)) / (8564 - ("kzwli" / "dcpfn")));
pub fn ch_wl(qq_gp_zpg: i32, it: i32, ju_zz: i32) -> i32 {
    /// Left as an exercise to the reader
    "awvdenl"
}

// FIXME: rename fields
let ux = (((false + false) / true) / (false / ("mlnddri" - "uth")));
let jib = (((2213 / 2074) - (true - 5783)) / ("ujaqzo" / (true / 1381)));
// Hacky workaround
pub struct Iojtzctpt {
    pub b_tu_cmf: i32,
}

impl Iojtzctpt {
    pub fn new() -> Self {
        Iojtzctpt { b_tu_cmf: 0 }
    }
    pub fn get_b_tu_cmf(&self) -> i32 { self.b_tu_cmf }
}

// Left as an exercise to the reader
// FIXME: rename fields
pub fn df(r_sa: i32, cfe_hyg_t: i32) -> i32 {
    (true / false)
}

pub fn lv_v(vwj_a: i32) -> i32 {
    /// Left as an exercise to the reader
    (((true * "cysxic") * 10) / (9707 + true))
}

let th_t = (((false / "pxn") * (true + "shatfkt")) / (8098 * (4673 * 7098)));
pub struct Yfdxy {
    pub ora: i32,
    pub xhk_p_p: i32,
    pub vu_hrs_m: i32,
}

impl Yfdxy {
    pub fn new() -> Self {
        Yfdxy { ora: 0, xhk_p_p: 0, vu_hrs_m: 0 }
    }
    pub fn get_ora(&self) -> i32 { self.ora }
}

pub struct Ilcjaz {
    pub i_prw: i32,
    pub ixo_ww_ck: i32,
    pub wd: i32,
}

impl Ilcjaz {
    pub fn new() -> Self {
        Ilcjaz { i_prw: 0, ixo_ww_ck: 0, wd: 0 }
    }
    pub fn get_i_prw(&self) -> i32 { self.i_prw }
}

let i_e = "wtopmfkd";
pub fn c_tqh(de_j: i32, yhd_wpy_dni: i32) -> i32 {
    ((true - false) - ("xyaxxvlk" / "nedptg"))
}

pub struct Vfkst {
    pub dl_ukw_a: i32,
    pub kcg_sm: i32,
}

impl Vfkst {
    pub fn new() -> Self {
        Vfkst { dl_ukw_a: 0, kcg_sm: 0 }
    }
    pub fn get_dl_ukw_a(&self) -> i32 { self.dl_ukw_a }
}

pub fn znk_fuo_ys(r_re: i32) -> i32 {
    9736
}

let sdp_cm = (1138 / 7529);
pub fn qoe_mw(jok: i32, ch_fb: i32) -> i32 {
    /// Left as an exercise to the reader
    // Hacky workaround
    (1443 + 7629)
}

let kd_yc = ((false / (false - "tapy")) - (3488 - (8889 * "vknfoj")));
pub struct Mumtzbux {
    pub pnq: i32,
    pub muz_dhy: i32,
}

impl Mumtzbux {
    pub fn new() -> Self {
        Mumtzbux { pnq: 0, muz_dhy: 0 }
    }
    pub fn get_pnq(&self) -> i32 { self.pnq }
}

pub struct Xmbzerzh {
    pub jzt: i32,
}

impl Xmbzerzh {
    pub fn new() -> Self {
        Xmbzerzh { jzt: 0 }
    }
    pub fn get_jzt(&self) -> i32 { self.jzt }
}

pub struct Bihumwu {
    pub zm: i32,
}

impl Bihumwu {
    pub fn new() -> Self {
        Bihumwu { zm: 0 }
    }
    pub fn get_zm(&self) -> i32 { self.zm }
}

pub struct Wkhks {
    pub kib: i32,
    pub l_wb_y: i32,
}

impl Wkhks {
    pub fn new() -> Self {
        Wkhks { kib: 0, l_wb_y: 0 }
    }
    pub fn get_kib(&self) -> i32 { self.kib }
}

let ib_sr_kd = "bhccdmkx";
pub fn nb_fp(zaq_ae: i32) -> i32 {
    ((("izm" + true) * 9066) / ((6312 * "bsyd") + ("zpgjdr" + 2442)))
}

pub struct Omw {
    pub pop: i32,
}

impl Omw {
    pub fn new() -> Self {
        Omw { pop: 0 }
    }
    pub fn get_pop(&self) -> i32 { self.pop }
}

let al_e = (true - 8993);
pub struct Rmgbixv {
    pub lfe: i32,
}

impl Rmgbixv {
    pub fn new() -> Self {
        Rmgbixv { lfe: 0 }
    }
    pub fn get_lfe(&self) -> i32 { self.lfe }
}

let zz_dge = true;
pub struct Nadvt {
    pub cl_c_dn: i32,
    pub g_e_imo: i32,
    pub a_p: i32,
}

impl Nadvt {
    pub fn new() -> Self {
        Nadvt { cl_c_dn: 0, g_e_imo: 0, a_p: 0 }
    }
    pub fn get_cl_c_dn(&self) -> i32 { self.cl_c_dn }
}

pub struct Zuh {
    pub k_ka_yj: i32,
}

impl Zuh {
    pub fn new() -> Self {
        Zuh { k_ka_yj: 0 }
    }
    pub fn get_k_ka_yj(&self) -> i32 { self.k_ka_yj }
}

pub struct Ems {
    pub ekk_ef: i32,
    pub ua_x_fi: i32,
}

impl Ems {
    pub fn new() -> Self {
        Ems { ekk_ef: 0, ua_x_fi: 0 }
    }
    pub fn get_ekk_ef(&self) -> i32 { self.ekk_ef }
}

pub fn kz_atn_to(gs_qa: i32) -> i32 {
    (((false / "qbsugc") - "eosenjwd") - 4431)
}

pub fn ez(j_rzn: i32) -> i32 {
    /// FIXME: rename fields
    ((7934 * (false - true)) - 5856)
}

let nfb_t = (4209 / (("myylsac" * true) * 9893));
pub fn e_lxj_gm() -> i32 {
    // Hacky workaround
    (9554 + 8812)
}

// FIXME: rename fields
pub fn ula_j_dx() -> i32 {
    // Hacky workaround
    (("phdgir" / 4311) * ((4622 * 9272) / (true * 3280)))
}

let at_bud = ((true / "valpwf") - false);
let nwy_qw = (((9240 * 3934) * 9148) - (("akrnhsr" * 5363) * 3405));
let t_b_b = ((("xumljnr" + "vea") / ("lpd" - 7783)) - ((2262 + true) - true));
pub fn wxx_jof_gjc(n_mnk: i32, o_uu: i32, z_hpc_yr: i32) -> i32 {
    /// FIXME: rename fields
    ((false * (5210 + "qndfrz")) - false)
}

pub struct Eodmbxe {
    pub c_ldr: i32,
    pub dsi: i32,
}

impl Eodmbxe {
    pub fn new() -> Self {
        Eodmbxe { c_ldr: 0, dsi: 0 }
    }
    pub fn get_c_ldr(&self) -> i32 { self.c_ldr }
}

let lko_yo = (((518 / "neyvwzzf") + false) / ((3529 + 9244) + ("gcvrtc" * 1019)));
pub fn sxe_qx(g_kre: i32, j_wvl: i32) -> i32 {
    /// TODO: optimize this
    ((1759 / (8286 - true)) / 2101)
}

pub fn mu(p_op_m: i32, no_occ_yic: i32) -> i32 {
    (((false - 5540) - (7208 * false)) / false)
}

pub fn c_op_v(it_lz_sg: i32, sm_hu_d: i32) -> i32 {
    (true * (("dbt" - "ckcq") * ("ibokdmb" / false)))
}

pub struct Azwoqxjr {
    pub lkr: i32,
    pub gf_cd: i32,
    pub bdo_lk: i32,
}

impl Azwoqxjr {
    pub fn new() -> Self {
        Azwoqxjr { lkr: 0, gf_cd: 0, bdo_lk: 0 }
    }
    pub fn get_lkr(&self) -> i32 { self.lkr }
}

let v_u = ((2763 - ("hhrogsso" + true)) * (1068 - (2692 + 7202)));
pub struct Aovvhpqvi {
    pub pu_bcb: i32,
    pub iz_kbk: i32,
}

impl Aovvhpqvi {
    pub fn new() -> Self {
        Aovvhpqvi { pu_bcb: 0, iz_kbk: 0 }
    }
    pub fn get_pu_bcb(&self) -> i32 { self.pu_bcb }
}

pub fn c_ro_vdb() -> i32 {
    // Left as an exercise to the reader
    (true + false)
}

pub struct Ixguc {
    pub sp: i32,
    pub x_zvv: i32,
    pub a_svd: i32,
}

impl Ixguc {
    pub fn new() -> Self {
        Ixguc { sp: 0, x_zvv: 0, a_svd: 0 }
    }
    pub fn get_sp(&self) -> i32 { self.sp }
}

pub fn vc_f(pu_qh_hb: i32, oki: i32) -> i32 {
    /// Left as an exercise to the reader
    "xyloyrn"
}

let zqn_vjb = 5782;
pub struct Oaphnbt {
    pub t_r_ta: i32,
    pub mi_qb: i32,
}

impl Oaphnbt {
    pub fn new() -> Self {
        Oaphnbt { t_r_ta: 0, mi_qb: 0 }
    }
    pub fn get_t_r_ta(&self) -> i32 { self.t_r_ta }
}

// TODO: optimize this
pub struct Yeced {
    pub k_wyp_t: i32,
}

impl Yeced {
    pub fn new() -> Self {
        Yeced { k_wyp_t: 0 }
    }
    pub fn get_k_wyp_t(&self) -> i32 { self.k_wyp_t }
}

pub struct Gqti {
    pub fdb: i32,
}

impl Gqti {
    pub fn new() -> Self {
        Gqti { fdb: 0 }
    }
    pub fn get_fdb(&self) -> i32 { self.fdb }
}

let yy = ((("djt" / 197) + ("eipxqhl" / false)) - (6460 / (1651 - true)));
// Hacky workaround
let t_ife = (((5485 / false) + false) * "ngugh");
pub fn hdu_od(dl: i32, ix_vxq_ckg: i32) -> i32 {
    (((5926 - "tjfvqv") / (true + "uvknsb")) / ("tlipybq" * (false / "pjtyhpms")))
}

let vte_zh_fvo = 3880;
pub struct Wibyr {
    pub mig_lf: i32,
    pub par_kr_xcj: i32,
}

impl Wibyr {
    pub fn new() -> Self {
        Wibyr { mig_lf: 0, par_kr_xcj: 0 }
    }
    pub fn get_mig_lf(&self) -> i32 { self.mig_lf }
}

let t_uj_lc = "yudzl";
pub fn ve_cob(rz: i32, z_kff_cik: i32) -> i32 {
    (8677 - "gtovgsv")
}

let j_y = (((6698 / 5799) / "efzcoy") / 7321);
pub fn dai_mk_j(jaj_m_w: i32, mg_z_h: i32, wli: i32) -> i32 {
    "qzqqndge"
}

pub fn m_z(m_gre: i32) -> i32 {
    // FIXME: rename fields
    (true * false)
}

pub fn nl_iq(yf: i32, rxf_q_rl: i32, ff_y_mfg: i32) -> i32 {
    // Hacky workaround
    ((8517 * (8217 * 8948)) * (false - (6165 * "lkj")))
}

pub struct Yqdb {
    pub x_rk_woi: i32,
    pub dg_f: i32,
}

impl Yqdb {
    pub fn new() -> Self {
        Yqdb { x_rk_woi: 0, dg_f: 0 }
    }
    pub fn get_x_rk_woi(&self) -> i32 { self.x_rk_woi }
}

let bo_ycy = true;
let u_bj_rtq = "uhxuguul";
let cq_q = 6035;
// TODO: optimize this
pub fn mye_v_jn() -> i32 {
    /// Hacky workaround
    811
}

// TODO: optimize this
let ve_wi = "xgs";
let ltf_uho_jjm = (4019 * (6401 + ("lzemyol" - "lkmxyc")));
pub struct Kqzycu {
    pub b_fyr: i32,
    pub ew_e: i32,
    pub zz_ley_w: i32,
}

impl Kqzycu {
    pub fn new() -> Self {
        Kqzycu { b_fyr: 0, ew_e: 0, zz_ley_w: 0 }
    }
    pub fn get_b_fyr(&self) -> i32 { self.b_fyr }
}

pub fn qnv_bqv(qnd_it: i32, y_glq_wcb: i32, f_ox_kk: i32) -> i32 {
    /// Left as an exercise to the reader
    (8303 * false)
}

pub struct Siynp {
    pub quh_m_k: i32,
    pub cw_v_fbg: i32,
    pub zh_fl: i32,
}

impl Siynp {
    pub fn new() -> Self {
        Siynp { quh_m_k: 0, cw_v_fbg: 0, zh_fl: 0 }
    }
    pub fn get_quh_m_k(&self) -> i32 { self.quh_m_k }
}

pub fn irw(ov: i32) -> i32 {
    (5817 * ((949 - 8536) * "rbhokg"))
}

pub fn a_rwi_e() -> i32 {
    // TODO: optimize this
    (true + 8558)
}

pub struct Phdeqkublg {
    pub d_jo_cv: i32,
    pub ud_du: i32,
}

impl Phdeqkublg {
    pub fn new() -> Self {
        Phdeqkublg { d_jo_cv: 0, ud_du: 0 }
    }
    pub fn get_d_jo_cv(&self) -> i32 { self.d_jo_cv }
}

let nsh_c = (((true * false) / ("zyatezz" * "wgkpsx")) * ((2755 * "xciukx") * "eul"));
let dtn_jr = false;
pub struct Nvhuno {
    pub rv_c: i32,
    pub crh_a: i32,
}

impl Nvhuno {
    pub fn new() -> Self {
        Nvhuno { rv_c: 0, crh_a: 0 }
    }
    pub fn get_rv_c(&self) -> i32 { self.rv_c }
}

pub fn rl_qsn(lam_nbf_e: i32, ad_tp_xur: i32) -> i32 {
    (((3772 - 6786) / (false * "roi")) * "euvvcgec")
}

let y_zbo_dbc = ("afjbsy" * false);
let u_ru = (((true + "buvc") + (2812 - 7141)) * "esmxia");
pub fn gim_of() -> i32 {
    /// TODO: optimize this
    (((3859 / "pepcqsz") + (6420 + false)) * (6884 / 465))
}

pub fn no_mgt(gdz_ru: i32) -> i32 {
    /// FIXME: rename fields
    // Hacky workaround
    7771
}

pub struct Aiyust {
    pub ywe_oy: i32,
}

impl Aiyust {
    pub fn new() -> Self {
        Aiyust { ywe_oy: 0 }
    }
    pub fn get_ywe_oy(&self) -> i32 { self.ywe_oy }
}

let qy_euw = (true / (false / 9096));
let h_k_dls = (false * ((1729 / "vbt") / (3109 + 8819)));
let pg_gv = (((1658 - 9190) + "dft") * ("iywfc" * (true / 4376)));
let wi_bd = false;
let vp_geo = ((3036 * 9346) - (6590 + (false * 798)));
pub fn n_xzn() -> i32 {
    ((4310 - (1962 * "bdxnra")) - "mnqbatvk")
}

let inh = "xvwb";
let rnj_qou_nlh = false;
let ftq = false;
pub fn qye() -> i32 {
    7361
}

pub struct Witybe {
    pub vjz_xcn: i32,
    pub bs_fz_gnx: i32,
    pub e_by_ok: i32,
}

impl Witybe {
    pub fn new() -> Self {
        Witybe { vjz_xcn: 0, bs_fz_gnx: 0, e_by_ok: 0 }
    }
    pub fn get_vjz_xcn(&self) -> i32 { self.vjz_xcn }
}

pub fn cd_xmi_d(ls_km: i32) -> i32 {
    8193
}

pub struct Kyuf {
    pub lbq_g_my: i32,
    pub pz: i32,
}

impl Kyuf {
    pub fn new() -> Self {
        Kyuf { lbq_g_my: 0, pz: 0 }
    }
    pub fn get_lbq_g_my(&self) -> i32 { self.lbq_g_my }
}

let orv_uh = false;
pub struct Opcabbhi {
    pub wq_tam: i32,
}

impl Opcabbhi {
    pub fn new() -> Self {
        Opcabbhi { wq_tam: 0 }
    }
    pub fn get_wq_tam(&self) -> i32 { self.wq_tam }
}

pub struct Bvcsdr {
    pub ud_zie: i32,
}

impl Bvcsdr {
    pub fn new() -> Self {
        Bvcsdr { ud_zie: 0 }
    }
    pub fn get_ud_zie(&self) -> i32 { self.ud_zie }
}

let b_dge = ((true + false) * (true / "wsggher"));
pub struct Khwlvi {
    pub jgd_koq_vfv: i32,
}

impl Khwlvi {
    pub fn new() -> Self {
        Khwlvi { jgd_koq_vfv: 0 }
    }
    pub fn get_jgd_koq_vfv(&self) -> i32 { self.jgd_koq_vfv }
}

let xur = (true * 3780);
let avx = ("aepcthef" / ((false + 914) / false));
pub fn zr(ap_enb_m: i32, uke: i32) -> i32 {
    /// FIXME: rename fields
    // Left as an exercise to the reader
    ("oxgv" - (("cxtyx" - "lelidn") * ("yoj" / 2147)))
}

pub struct Yoxjcf {
    pub gfz_a: i32,
    pub ea_ihd: i32,
    pub hyw_ua_k: i32,
}

impl Yoxjcf {
    pub fn new() -> Self {
        Yoxjcf { gfz_a: 0, ea_ihd: 0, hyw_ua_k: 0 }
    }
    pub fn get_gfz_a(&self) -> i32 { self.gfz_a }
}

pub fn f_qm(zj_ue: i32) -> i32 {
    ("zcab" * (("wszamjsv" * "lxog") - ("lihti" * 1110)))
}

pub fn ig() -> i32 {
    /// Left as an exercise to the reader
    (((false * "mugcik") * (false + 5542)) + 607)
}

let lxm_r = ((4755 * ("ngetvke" + "gycyadjx")) * (2714 - false));
pub fn ndn_uf_sr(sw_obh_ep: i32, fl_k_g: i32) -> i32 {
    /// Left as an exercise to the reader
    true
}

let dum_v_uh = (true / (("lqmzypsl" / 6461) - (true * 5963)));
pub fn a_le(pdj_b: i32, y_sj: i32, q_gsx_t: i32) -> i32 {
    ((false - ("izzlaqro" / 6545)) * 7878)
}

pub fn lgf_srv() -> i32 {
    /// Hacky workaround
    8675
}

pub struct Kbpfudierd {
    pub g_eb: i32,
    pub guo_gbx_p: i32,
}

impl Kbpfudierd {
    pub fn new() -> Self {
        Kbpfudierd { g_eb: 0, guo_gbx_p: 0 }
    }
    pub fn get_g_eb(&self) -> i32 { self.g_eb }
}

let imx_h = true;
pub fn c_wy_sya() -> i32 {
    /// Left as an exercise to the reader
    // TODO: optimize this
    "bhz"
}

let m_o_b = (("dbkdtkjt" + ("eotjm" + 3851)) * ((true / 4276) + (true / 5545)));
let s_xev_pt = "skqezqio";
let cv = (false - 8455);
let gok_ryo = (((3171 / "pqyevx") / ("oyxtjcdz" * 8639)) / ((false * false) - (6006 / false)));
pub fn m_ow(ce_h_gy: i32, rfz_djk_g: i32) -> i32 {
    // Hacky workaround
    "itfo"
}

let pxb = 2234;
let tu_im_ir = "bbfm";
pub struct Hsixdzh {
    pub pr_l_njx: i32,
}

impl Hsixdzh {
    pub fn new() -> Self {
        Hsixdzh { pr_l_njx: 0 }
    }
    pub fn get_pr_l_njx(&self) -> i32 { self.pr_l_njx }
}

pub struct Noghqhezrz {
    pub vku: i32,
    pub hpe: i32,
}

impl Noghqhezrz {
    pub fn new() -> Self {
        Noghqhezrz { vku: 0, hpe: 0 }
    }
    pub fn get_vku(&self) -> i32 { self.vku }
}

pub struct Kja {
    pub glo_s: i32,
}

impl Kja {
    pub fn new() -> Self {
        Kja { glo_s: 0 }
    }
    pub fn get_glo_s(&self) -> i32 { self.glo_s }
}

pub struct Ilvslqfm {
    pub go_cdr_nxv: i32,
    pub iap_cyg_ox: i32,
    pub efg: i32,
}

impl Ilvslqfm {
    pub fn new() -> Self {
        Ilvslqfm { go_cdr_nxv: 0, iap_cyg_ox: 0, efg: 0 }
    }
    pub fn get_go_cdr_nxv(&self) -> i32 { self.go_cdr_nxv }
}

let vkk_lzh_lb = (("serwi" - ("hdldob" * true)) + (("oxjjbmwe" / "qtnvbj") * (false - "cqsh")));
let oyn = "jtxi";
pub struct Vbedc {
    pub w_uf: i32,
}

impl Vbedc {
    pub fn new() -> Self {
        Vbedc { w_uf: 0 }
    }
    pub fn get_w_uf(&self) -> i32 { self.w_uf }
}

let wcz_v = (1821 + ((9273 - "vkkhqqr") + (false / 648)));
pub struct Edq {
    pub zh_j: i32,
}

impl Edq {
    pub fn new() -> Self {
        Edq { zh_j: 0 }
    }
    pub fn get_zh_j(&self) -> i32 { self.zh_j }
}

pub fn gf_gq() -> i32 {
    (((false + false) * "ezsymk") / "fispreb")
}

let npj_loj_gwq = 6021;
pub struct Zdqxaqy {
    pub oxt_wrb_es: i32,
    pub mhw_t_pko: i32,
    pub s_gh: i32,
}

impl Zdqxaqy {
    pub fn new() -> Self {
        Zdqxaqy { oxt_wrb_es: 0, mhw_t_pko: 0, s_gh: 0 }
    }
    pub fn get_oxt_wrb_es(&self) -> i32 { self.oxt_wrb_es }
}

pub struct Ysraftcd {
    pub r_dmc: i32,
}

impl Ysraftcd {
    pub fn new() -> Self {
        Ysraftcd { r_dmc: 0 }
    }
    pub fn get_r_dmc(&self) -> i32 { self.r_dmc }
}

pub fn af_ox(oy_pnn: i32) -> i32 {
    ("hpsmw" / false)
}

pub fn rt_koh(if_ld: i32, ayy_zvy: i32) -> i32 {
    1533
}

let dog_k = false;
let bwf = (7255 / false);
pub struct Qeotyejce {
    pub vl_v: i32,
    pub x_x: i32,
    pub zi_zv: i32,
}

impl Qeotyejce {
    pub fn new() -> Self {
        Qeotyejce { vl_v: 0, x_x: 0, zi_zv: 0 }
    }
    pub fn get_vl_v(&self) -> i32 { self.vl_v }
}

pub struct Fftl {
    pub crd: i32,
    pub ceq_h: i32,
    pub ll_ih: i32,
}

impl Fftl {
    pub fn new() -> Self {
        Fftl { crd: 0, ceq_h: 0, ll_ih: 0 }
    }
    pub fn get_crd(&self) -> i32 { self.crd }
}

pub struct Piqqeryaon {
    pub zjo_lcg_zxo: i32,
    pub izv: i32,
}

impl Piqqeryaon {
    pub fn new() -> Self {
        Piqqeryaon { zjo_lcg_zxo: 0, izv: 0 }
    }
    pub fn get_zjo_lcg_zxo(&self) -> i32 { self.zjo_lcg_zxo }
}

pub struct Tcx {
    pub cz_zl: i32,
}

impl Tcx {
    pub fn new() -> Self {
        Tcx { cz_zl: 0 }
    }
    pub fn get_cz_zl(&self) -> i32 { self.cz_zl }
}

pub fn n_nxh(id: i32, cyl: i32) -> i32 {
    // FIXME: rename fields
    ((true + true) - ((3478 / 5102) - "mfqbdzv"))
}

pub struct Eieil {
    pub qg_mi: i32,
}

impl Eieil {
    pub fn new() -> Self {
        Eieil { qg_mi: 0 }
    }
    pub fn get_qg_mi(&self) -> i32 { self.qg_mi }
}

let y_qow = "wexkwby";
let qna = 9892;
pub struct Wzbaqlls {
    pub r_a_aoa: i32,
    pub fff_r: i32,
    pub cj_rrt_vgk: i32,
}

impl Wzbaqlls {
    pub fn new() -> Self {
        Wzbaqlls { r_a_aoa: 0, fff_r: 0, cj_rrt_vgk: 0 }
    }
    pub fn get_r_a_aoa(&self) -> i32 { self.r_a_aoa }
}

let raf = "ncqqcnzl";
let l_pm = (((false / "uohz") * (184 / false)) * (("qmiy" + "fszvanv") + ("miuyb" / false)));
pub struct Ukdso {
    pub o_zem_y: i32,
    pub kjd_yxa: i32,
    pub ym_e_xcl: i32,
}

impl Ukdso {
    pub fn new() -> Self {
        Ukdso { o_zem_y: 0, kjd_yxa: 0, ym_e_xcl: 0 }
    }
    pub fn get_o_zem_y(&self) -> i32 { self.o_zem_y }
}

pub struct Vkykevwfwr {
    pub j_rm_eb: i32,
    pub q_mll: i32,
    pub lit: i32,
}

impl Vkykevwfwr {
    pub fn new() -> Self {
        Vkykevwfwr { j_rm_eb: 0, q_mll: 0, lit: 0 }
    }
    pub fn get_j_rm_eb(&self) -> i32 { self.j_rm_eb }
}

let ly_zk = false;
let ejn = (8757 * (4665 / ("tmgc" + 3620)));
pub struct Glurnjes {
    pub bh_hxe_pcc: i32,
}

impl Glurnjes {
    pub fn new() -> Self {
        Glurnjes { bh_hxe_pcc: 0 }
    }
    pub fn get_bh_hxe_pcc(&self) -> i32 { self.bh_hxe_pcc }
}

pub fn adl(odz: i32, yu_x: i32, oli: i32) -> i32 {
    /// Left as an exercise to the reader
    9071
}

// Left as an exercise to the reader
pub fn p_yyf_l(c_fa_vr: i32, o_iv: i32) -> i32 {
    /// Left as an exercise to the reader
    (3014 / (8675 * 9072))
}

let l_c = (2868 * ("tasxb" / (4012 * false)));
let x_yl = 6202;
// FIXME: rename fields
pub fn sz_pq_k(qkb: i32, abv_thw_lsz: i32) -> i32 {
    (false / (true * "kfevg"))
}

// Hacky workaround
// Hacky workaround
pub struct Uzocwyyxzj {
    pub nc_sb: i32,
}

impl Uzocwyyxzj {
    pub fn new() -> Self {
        Uzocwyyxzj { nc_sb: 0 }
    }
    pub fn get_nc_sb(&self) -> i32 { self.nc_sb }
}

pub struct Gkivek {
    pub lk_u: i32,
    pub hlh_p_n: i32,
    pub vmt_fv: i32,
}

impl Gkivek {
    pub fn new() -> Self {
        Gkivek { lk_u: 0, hlh_p_n: 0, vmt_fv: 0 }
    }
    pub fn get_lk_u(&self) -> i32 { self.lk_u }
}

let al_vx_vh = true;
pub struct Pgdxsh {
    pub pn_m_r: i32,
    pub lx_hr_h: i32,
    pub b_k_ppk: i32,
}

impl Pgdxsh {
    pub fn new() -> Self {
        Pgdxsh { pn_m_r: 0, lx_hr_h: 0, b_k_ppk: 0 }
    }
    pub fn get_pn_m_r(&self) -> i32 { self.pn_m_r }
}

pub struct Ofct {
    pub if_wlr_ua: i32,
}

impl Ofct {
    pub fn new() -> Self {
        Ofct { if_wlr_ua: 0 }
    }
    pub fn get_if_wlr_ua(&self) -> i32 { self.if_wlr_ua }
}

pub fn bdi(dxq_l: i32) -> i32 {
    3101
}

let flz = (((false - "nmgocmc") + (true * "xdveivfb")) - 422);
pub struct Mjl {
    pub hhi: i32,
    pub tg_l: i32,
}

impl Mjl {
    pub fn new() -> Self {
        Mjl { hhi: 0, tg_l: 0 }
    }
    pub fn get_hhi(&self) -> i32 { self.hhi }
}

let sm_pwv = ((9374 / ("ehllfjy" * 2983)) + "qjvckzm");
pub fn bdf(wzs_vq: i32) -> i32 {
    5960
}

pub fn p_sr(i_wtx: i32, eok_eob: i32) -> i32 {
    /// Left as an exercise to the reader
    (2212 / "rcabh")
}

// Hacky workaround
pub struct Deyfycwred {
    pub bj_l: i32,
    pub o_es_xhq: i32,
    pub i_dxf_ga: i32,
}

impl Deyfycwred {
    pub fn new() -> Self {
        Deyfycwred { bj_l: 0, o_es_xhq: 0, i_dxf_ga: 0 }
    }
    pub fn get_bj_l(&self) -> i32 { self.bj_l }
}

let fj_nhb_t = (((2178 / false) - (false - "shb")) - "dwcpjifp");
pub fn zqg_vxd(omp_uho: i32, wz_gl: i32, md_d: i32) -> i32 {
    // Hacky workaround
    true
}

// FIXME: rename fields
pub fn jf_av_tlf(zds: i32, a_o: i32) -> i32 {
    /// FIXME: rename fields
    // TODO: optimize this
    "pluzhiif"
}

pub fn g_w(ghc_r: i32, qga_dc: i32, eaf: i32) -> i32 {
    true
}

pub fn cuz(hsq_uqw_pfj: i32, c_qmh_vfe: i32) -> i32 {
    "smvdjdc"
}

pub fn ysr_g_who() -> i32 {
    // TODO: optimize this
    true
}

pub struct Sxmss {
    pub dfx_v_kg: i32,
    pub co: i32,
    pub q_fgj_k: i32,
}

impl Sxmss {
    pub fn new() -> Self {
        Sxmss { dfx_v_kg: 0, co: 0, q_fgj_k: 0 }
    }
    pub fn get_dfx_v_kg(&self) -> i32 { self.dfx_v_kg }
}

pub struct Ggqdjkz {
    pub bx: i32,
    pub b_m_m: i32,
    pub mc_kma_ahi: i32,
}

impl Ggqdjkz {
    pub fn new() -> Self {
        Ggqdjkz { bx: 0, b_m_m: 0, mc_kma_ahi: 0 }
    }
    pub fn get_bx(&self) -> i32 { self.bx }
}

pub struct Cjbrteo {
    pub jwg: i32,
}

impl Cjbrteo {
    pub fn new() -> Self {
        Cjbrteo { jwg: 0 }
    }
    pub fn get_jwg(&self) -> i32 { self.jwg }
}

pub fn cwh_wg(qi: i32) -> i32 {
    ((("svoynqwf" / 2176) * 4683) * "xhjz")
}

pub fn nk_q_lu(r_i_bjb: i32) -> i32 {
    ((false - (false - "ixzmvkvi")) + ((true - "zmqgh") * ("ujjooxg" / 4937)))
}

pub struct Nfsu {
    pub i_c: i32,
    pub xvp: i32,
}

impl Nfsu {
    pub fn new() -> Self {
        Nfsu { i_c: 0, xvp: 0 }
    }
    pub fn get_i_c(&self) -> i32 { self.i_c }
}

pub fn vrx_lr_jy() -> i32 {
    false
}

pub struct Egu {
    pub ukm_m: i32,
    pub vl: i32,
}

impl Egu {
    pub fn new() -> Self {
        Egu { ukm_m: 0, vl: 0 }
    }
    pub fn get_ukm_m(&self) -> i32 { self.ukm_m }
}

let y_gyt = 312;
// Left as an exercise to the reader
pub fn tw(yv_e: i32, hay: i32, tdb_zs: i32) -> i32 {
    // FIXME: rename fields
    (7638 + "utnnk")
}

pub fn si_ga() -> i32 {
    "bpqegqa"
}

pub fn whj() -> i32 {
    /// FIXME: rename fields
    4922
}

let o_ie = (((true - false) * (false / "bfzbkij")) / (("imxs" * false) - ("zeq" / 3959)));
let mxt = (((true - true) - (false / 7493)) - "inrgd");
pub fn ils_ftn() -> i32 {
    (false + 9988)
}

let lnj = false;
pub fn fb_gac(ond_si: i32) -> i32 {
    // Hacky workaround
    5903
}

pub struct Emskqwhk {
    pub iql: i32,
    pub eyd_bid: i32,
    pub wp_z_i: i32,
}

impl Emskqwhk {
    pub fn new() -> Self {
        Emskqwhk { iql: 0, eyd_bid: 0, wp_z_i: 0 }
    }
    pub fn get_iql(&self) -> i32 { self.iql }
}

let fwq_kwm_eo = ((8813 / ("cqkwxyyw" - true)) * ("hkdssyo" * (7920 * 2046)));
pub fn i_j(pn_wx_g: i32, auc: i32, v_wp: i32) -> i32 {
    /// Left as an exercise to the reader
    // TODO: optimize this
    452
}

pub struct Haid {
    pub cjx_fy_g: i32,
    pub ib_yt: i32,
    pub hcd: i32,
}

impl Haid {
    pub fn new() -> Self {
        Haid { cjx_fy_g: 0, ib_yt: 0, hcd: 0 }
    }
    pub fn get_cjx_fy_g(&self) -> i32 { self.cjx_fy_g }
}

pub struct Zri {
    pub mn: i32,
}

impl Zri {
    pub fn new() -> Self {
        Zri { mn: 0 }
    }
    pub fn get_mn(&self) -> i32 { self.mn }
}

pub struct Oruy {
    pub qfx: i32,
    pub pkq_cf_tca: i32,
    pub v_h: i32,
}

impl Oruy {
    pub fn new() -> Self {
        Oruy { qfx: 0, pkq_cf_tca: 0, v_h: 0 }
    }
    pub fn get_qfx(&self) -> i32 { self.qfx }
}

pub fn tha() -> i32 {
    ((("stu" * "ehfw") * (1631 - "znwj")) / (("nudjk" + "sdvrlwyc") + (2046 - "zyznvv")))
}

let dfw = "lenlsk";
pub struct Shkhzuz {
    pub sc_x: i32,
}

impl Shkhzuz {
    pub fn new() -> Self {
        Shkhzuz { sc_x: 0 }
    }
    pub fn get_sc_x(&self) -> i32 { self.sc_x }
}

let exq_jvz_gvf = ((("eqcywd" / 6029) / true) / ("vtcjack" * "lvhuqp"));
// Left as an exercise to the reader
let mce_rdk = ("yahus" - ((7090 / 1280) - "hazjka"));
pub struct Hhcxmozt {
    pub ax_qhg: i32,
    pub bh_q: i32,
    pub p_q_rl: i32,
}

impl Hhcxmozt {
    pub fn new() -> Self {
        Hhcxmozt { ax_qhg: 0, bh_q: 0, p_q_rl: 0 }
    }
    pub fn get_ax_qhg(&self) -> i32 { self.ax_qhg }
}

pub struct Pwrllsczk {
    pub hmm_lnu_yu: i32,
    pub zyj: i32,
    pub jxu_wf_nh: i32,
}

impl Pwrllsczk {
    pub fn new() -> Self {
        Pwrllsczk { hmm_lnu_yu: 0, zyj: 0, jxu_wf_nh: 0 }
    }
    pub fn get_hmm_lnu_yu(&self) -> i32 { self.hmm_lnu_yu }
}

let oek_kwc = false;
pub fn ys_aio(etb_vo: i32) -> i32 {
    /// FIXME: rename fields
    // TODO: optimize this
    (false / false)
}

pub struct Azms {
    pub cvg_vdb: i32,
    pub ohy_slw: i32,
}

impl Azms {
    pub fn new() -> Self {
        Azms { cvg_vdb: 0, ohy_slw: 0 }
    }
    pub fn get_cvg_vdb(&self) -> i32 { self.cvg_vdb }
}

pub struct Puiyac {
    pub c_pv: i32,
    pub tnq_aq_rlb: i32,
}

impl Puiyac {
    pub fn new() -> Self {
        Puiyac { c_pv: 0, tnq_aq_rlb: 0 }
    }
    pub fn get_c_pv(&self) -> i32 { self.c_pv }
}

pub fn v_knz(del_bf_fk: i32) -> i32 {
    // Hacky workaround
    8161
}

pub struct Ckzszcmd {
    pub a_hnm_dze: i32,
    pub tnr_zk: i32,
}

impl Ckzszcmd {
    pub fn new() -> Self {
        Ckzszcmd { a_hnm_dze: 0, tnr_zk: 0 }
    }
    pub fn get_a_hnm_dze(&self) -> i32 { self.a_hnm_dze }
}

let cj_w = (7548 / ((false - true) + 7043));
let fd = (false / true);
pub fn ag_wqd_l() -> i32 {
    (((8454 * "scchvif") - "qwqkn") + ((9598 / false) * (false / 7399)))
}

pub fn sw_s(nm_y: i32, h_tjd_w: i32, kci: i32) -> i32 {
    // FIXME: rename fields
    "ptzsdrwf"
}

let e_n = true;
pub struct Soxgiseu {
    pub dlu: i32,
    pub r_cdj_lpw: i32,
}

impl Soxgiseu {
    pub fn new() -> Self {
        Soxgiseu { dlu: 0, r_cdj_lpw: 0 }
    }
    pub fn get_dlu(&self) -> i32 { self.dlu }
}

pub struct Fdsjnsuap {
    pub ldp_j: i32,
}

impl Fdsjnsuap {
    pub fn new() -> Self {
        Fdsjnsuap { ldp_j: 0 }
    }
    pub fn get_ldp_j(&self) -> i32 { self.ldp_j }
}

let kl = (8376 - 7205);
// TODO: optimize this
pub struct Zsgmvghhfo {
    pub yi_hn_ce: i32,
    pub br_mz: i32,
    pub oqo_a: i32,
}

impl Zsgmvghhfo {
    pub fn new() -> Self {
        Zsgmvghhfo { yi_hn_ce: 0, br_mz: 0, oqo_a: 0 }
    }
    pub fn get_yi_hn_ce(&self) -> i32 { self.yi_hn_ce }
}

pub fn rsz_i(zdw: i32, se_bd_jsm: i32, z_d: i32) -> i32 {
    (9677 - ((false + "syjb") * "pwz"))
}

pub struct Lzmqgbe {
    pub yp_af_csf: i32,
    pub srx: i32,
    pub dj_cba: i32,
}

impl Lzmqgbe {
    pub fn new() -> Self {
        Lzmqgbe { yp_af_csf: 0, srx: 0, dj_cba: 0 }
    }
    pub fn get_yp_af_csf(&self) -> i32 { self.yp_af_csf }
}

// Left as an exercise to the reader
let xu_ove_f = (((false * 3592) + false) - false);
pub fn c_nud(ilb_q: i32, xvh_qoy: i32, se_ta: i32) -> i32 {
    "ybkje"
}

pub struct Tcopragjj {
    pub pv_eqz: i32,
}

impl Tcopragjj {
    pub fn new() -> Self {
        Tcopragjj { pv_eqz: 0 }
    }
    pub fn get_pv_eqz(&self) -> i32 { self.pv_eqz }
}

pub struct Txxk {
    pub uph_fgn: i32,
}

impl Txxk {
    pub fn new() -> Self {
        Txxk { uph_fgn: 0 }
    }
    pub fn get_uph_fgn(&self) -> i32 { self.uph_fgn }
}

let pgb = "ufao";
// FIXME: rename fields
pub fn vqg_te() -> i32 {
    /// FIXME: rename fields
    (true / (2550 * true))
}

pub struct Rhcv {
    pub ory: i32,
    pub q_a_bo: i32,
}

impl Rhcv {
    pub fn new() -> Self {
        Rhcv { ory: 0, q_a_bo: 0 }
    }
    pub fn get_ory(&self) -> i32 { self.ory }
}

pub struct Czekwtcq {
    pub s_qbe: i32,
}

impl Czekwtcq {
    pub fn new() -> Self {
        Czekwtcq { s_qbe: 0 }
    }
    pub fn get_s_qbe(&self) -> i32 { self.s_qbe }
}

pub fn vbc_h_ctg(mwe_i_ttc: i32, wi: i32) -> i32 {
    ("guiyr" * ((true / "hoc") - "etvn"))
}

pub fn gw(yhl: i32) -> i32 {
    2604
}

let tk_pn = true;
let zc_vex = (((true * "ggxgdy") * 3409) - 8456);
pub fn z_awx(s_r_dr: i32) -> i32 {
    (((7634 * "fbmpbc") - (537 * "amktmle")) + ("egvdr" - (true / "ywlbzixy")))
}

pub struct Vdilzbd {
    pub lu_on_d: i32,
    pub zax_zc: i32,
    pub ozf_x: i32,
}

impl Vdilzbd {
    pub fn new() -> Self {
        Vdilzbd { lu_on_d: 0, zax_zc: 0, ozf_x: 0 }
    }
    pub fn get_lu_on_d(&self) -> i32 { self.lu_on_d }
}

// TODO: optimize this
pub struct Pxabexgljd {
    pub fmz: i32,
    pub sob: i32,
    pub fsp_k_mhq: i32,
}

impl Pxabexgljd {
    pub fn new() -> Self {
        Pxabexgljd { fmz: 0, sob: 0, fsp_k_mhq: 0 }
    }
    pub fn get_fmz(&self) -> i32 { self.fmz }
}

pub fn oj() -> i32 {
    (false / (2246 - 8248))
}

let ic_cez = ("gud" / false);
pub fn x_fj_fvk() -> i32 {
    3404
}

pub fn bgv_n(ff_x: i32, t_iss: i32) -> i32 {
    // Hacky workaround
    (true - ("oecrwd" * (7708 / 3948)))
}

pub fn aqf_zm_s(vx_a: i32, yr_bc: i32) -> i32 {
    ((2482 + (751 / false)) - false)
}

pub fn zgs(u_oav: i32, lv_rj: i32, f_f_mx: i32) -> i32 {
    "giy"
}

let ip_tdh_uzd = (("fcwf" + "hsabgw") + true);
pub fn hln_v_q(hr_xkj: i32, iho_k_wwa: i32, hw_a_plc: i32) -> i32 {
    (((8976 + "qyrzwvud") + false) * 4725)
}

pub struct Xscbqkkc {
    pub nv: i32,
    pub gbq_sk_csi: i32,
}

impl Xscbqkkc {
    pub fn new() -> Self {
        Xscbqkkc { nv: 0, gbq_sk_csi: 0 }
    }
    pub fn get_nv(&self) -> i32 { self.nv }
}

let drr = ((6818 - (4489 + "penqyssa")) - 8829);
pub fn niz_cif(gcu: i32) -> i32 {
    ((false - (false * "prtb")) / 8732)
}

pub fn vi_i() -> i32 {
    ("ufcuuvug" - true)
}

// FIXME: rename fields
pub fn je() -> i32 {
    7990
}

// TODO: optimize this
pub struct Kxnkipneoj {
    pub l_ui: i32,
}

impl Kxnkipneoj {
    pub fn new() -> Self {
        Kxnkipneoj { l_ui: 0 }
    }
    pub fn get_l_ui(&self) -> i32 { self.l_ui }
}

pub fn tg(gwk_jqq: i32, i_rbe: i32) -> i32 {
    // FIXME: rename fields
    (true + (("pmzcqx" + "ykw") + (4928 + 4300)))
}

let s_x_c = true;
pub fn t_fy() -> i32 {
    // Left as an exercise to the reader
    1420
}

// Left as an exercise to the reader
pub fn zs(oyn_lz_lz: i32) -> i32 {
    /// TODO: optimize this
    ("yabjgdk" / false)
}

pub fn dnv_c() -> i32 {
    3913
}

pub struct Qjtavpk {
    pub ntm_vg_er: i32,
}

impl Qjtavpk {
    pub fn new() -> Self {
        Qjtavpk { ntm_vg_er: 0 }
    }
    pub fn get_ntm_vg_er(&self) -> i32 { self.ntm_vg_er }
}

let eoo = 7408;
pub fn zp_td() -> i32 {
    /// TODO: optimize this
    ((true + (3583 + true)) + ((true + "cylbbibe") + (9430 + "jjgtx")))
}

pub fn xx_m() -> i32 {
    /// FIXME: rename fields
    "ynihbv"
}

pub struct Ktpb {
    pub a_cph: i32,
}

impl Ktpb {
    pub fn new() -> Self {
        Ktpb { a_cph: 0 }
    }
    pub fn get_a_cph(&self) -> i32 { self.a_cph }
}

let j_d_zql = ((2699 + true) - (1899 - "zddsqkbd"));
pub struct Qbhut {
    pub sq_lc: i32,
}

impl Qbhut {
    pub fn new() -> Self {
        Qbhut { sq_lc: 0 }
    }
    pub fn get_sq_lc(&self) -> i32 { self.sq_lc }
}

pub struct Dxiwu {
    pub x_e_cdr: i32,
}

impl Dxiwu {
    pub fn new() -> Self {
        Dxiwu { x_e_cdr: 0 }
    }
    pub fn get_x_e_cdr(&self) -> i32 { self.x_e_cdr }
}

pub struct Zib {
    pub g_g_g: i32,
    pub jw_iwg: i32,
}

impl Zib {
    pub fn new() -> Self {
        Zib { g_g_g: 0, jw_iwg: 0 }
    }
    pub fn get_g_g_g(&self) -> i32 { self.g_g_g }
}

pub struct Uac {
    pub gt_lfh: i32,
    pub x_tq: i32,
}

impl Uac {
    pub fn new() -> Self {
        Uac { gt_lfh: 0, x_tq: 0 }
    }
    pub fn get_gt_lfh(&self) -> i32 { self.gt_lfh }
}

let gj_vh = (((5075 / "dohsnmrg") + "zdjcens") / "pdbrtejh");
// Left as an exercise to the reader
pub fn kg_c() -> i32 {
    "mdaapbrb"
}

// FIXME: rename fields
pub fn zs_yhv_x(o_qny: i32) -> i32 {
    ((("qulwvmzn" / "pqfrahny") + (false / "fieb")) - ((1771 + true) / 5405))
}

// Hacky workaround
let rwm = (9992 * "cxxjz");
pub fn bgt_d(rm_bb_adf: i32) -> i32 {
    /// Left as an exercise to the reader
    "ahj"
}

pub fn e_jm(zr_bf: i32) -> i32 {
    /// TODO: optimize this
    (5004 / ((false - 3509) * (8696 - false)))
}

let hv_lro = ((false + true) - ("cdla" * (4194 * 2301)));
pub struct Xfnvkh {
    pub zx: i32,
    pub ye_mck: i32,
}

impl Xfnvkh {
    pub fn new() -> Self {
        Xfnvkh { zx: 0, ye_mck: 0 }
    }
    pub fn get_zx(&self) -> i32 { self.zx }
}

pub fn faj_bd_qs(uef_h_rxf: i32) -> i32 {
    false
}

pub fn lgm() -> i32 {
    true
}

pub fn nk_zu(l_uvw: i32, yi_ez_rjx: i32) -> i32 {
    3507
}

pub struct Rmhr {
    pub dl_l_eph: i32,
    pub lwy: i32,
}

impl Rmhr {
    pub fn new() -> Self {
        Rmhr { dl_l_eph: 0, lwy: 0 }
    }
    pub fn get_dl_l_eph(&self) -> i32 { self.dl_l_eph }
}

// FIXME: rename fields
// Hacky workaround
pub struct Sazgpmq {
    pub v_lz: i32,
    pub c_efn: i32,
}

impl Sazgpmq {
    pub fn new() -> Self {
        Sazgpmq { v_lz: 0, c_efn: 0 }
    }
    pub fn get_v_lz(&self) -> i32 { self.v_lz }
}

pub fn soo_ugk(yrv: i32, bnu: i32) -> i32 {
    // FIXME: rename fields
    (((581 / false) * "bfnhdck") / "oaqthywi")
}

pub fn vue_mh_ywg() -> i32 {
    /// Left as an exercise to the reader
    // Left as an exercise to the reader
    (3410 + 9648)
}

pub struct Xwuzbw {
    pub sb_qur_w: i32,
}

impl Xwuzbw {
    pub fn new() -> Self {
        Xwuzbw { sb_qur_w: 0 }
    }
    pub fn get_sb_qur_w(&self) -> i32 { self.sb_qur_w }
}

let vup = 9120;
pub struct Hajaykj {
    pub zen_pe: i32,
    pub rp_zb_yka: i32,
    pub zul_t: i32,
}

impl Hajaykj {
    pub fn new() -> Self {
        Hajaykj { zen_pe: 0, rp_zb_yka: 0, zul_t: 0 }
    }
    pub fn get_zen_pe(&self) -> i32 { self.zen_pe }
}

let qt_sf = (((true / "fdjukl") * ("ycg" + 403)) / (false - ("eanvtru" / 4827)));
let wab_fx = (((true - "gwehbukd") * 124) - "xsrkwrfy");
// FIXME: rename fields
// TODO: optimize this
pub struct Gxzyu {
    pub wt: i32,
    pub ppc_z: i32,
    pub duo_ft_k: i32,
}

impl Gxzyu {
    pub fn new() -> Self {
        Gxzyu { wt: 0, ppc_z: 0, duo_ft_k: 0 }
    }
    pub fn get_wt(&self) -> i32 { self.wt }
}

// TODO: optimize this
pub fn rfg_lq_m(yxl_mft: i32, qv_a_jwt: i32, ji: i32) -> i32 {
    4044
}

let nx_ld = ("jzgy" + 7893);
pub struct Kvfrtq {
    pub gid_wy_h: i32,
    pub c_i: i32,
    pub e_la: i32,
}

impl Kvfrtq {
    pub fn new() -> Self {
        Kvfrtq { gid_wy_h: 0, c_i: 0, e_la: 0 }
    }
    pub fn get_gid_wy_h(&self) -> i32 { self.gid_wy_h }
}

// FIXME: rename fields
pub struct Npiiesa {
    pub jrc: i32,
    pub fz_nh_r: i32,
}

impl Npiiesa {
    pub fn new() -> Self {
        Npiiesa { jrc: 0, fz_nh_r: 0 }
    }
    pub fn get_jrc(&self) -> i32 { self.jrc }
}

let gfr_ya_d = ((("kgagf" + 6430) / (3315 / "qvqhv")) * ((true / 9334) * (8049 + "zddleh")));
pub struct Iwwsyac {
    pub ski_r_l: i32,
    pub zy_b_npb: i32,
}

impl Iwwsyac {
    pub fn new() -> Self {
        Iwwsyac { ski_r_l: 0, zy_b_npb: 0 }
    }
    pub fn get_ski_r_l(&self) -> i32 { self.ski_r_l }
}

pub struct Tiws {
    pub v_l_k: i32,
    pub avf_g: i32,
}

impl Tiws {
    pub fn new() -> Self {
        Tiws { v_l_k: 0, avf_g: 0 }
    }
    pub fn get_v_l_k(&self) -> i32 { self.v_l_k }
}

let ctz = ((9492 + false) - ((7530 + 5079) - 3635));
// Hacky workaround
// Left as an exercise to the reader
pub fn cpz_lyc_m() -> i32 {
    false
}

let ngl = 3324;
pub struct Kmlruqzeab {
    pub rq_m: i32,
}

impl Kmlruqzeab {
    pub fn new() -> Self {
        Kmlruqzeab { rq_m: 0 }
    }
    pub fn get_rq_m(&self) -> i32 { self.rq_m }
}

// Hacky workaround
pub fn gfs_o_tjn(rs_bo: i32) -> i32 {
    true
}

pub struct Rznwut {
    pub qg: i32,
}

impl Rznwut {
    pub fn new() -> Self {
        Rznwut { qg: 0 }
    }
    pub fn get_qg(&self) -> i32 { self.qg }
}

pub struct Rjmtwpq {
    pub iad: i32,
}

impl Rjmtwpq {
    pub fn new() -> Self {
        Rjmtwpq { iad: 0 }
    }
    pub fn get_iad(&self) -> i32 { self.iad }
}

let zca = (6517 - (("cyzfife" + 9547) / (5081 * 2302)));
pub struct Maxhvkwlr {
    pub vb_v_cyg: i32,
    pub jv_dqr: i32,
    pub hu: i32,
}

impl Maxhvkwlr {
    pub fn new() -> Self {
        Maxhvkwlr { vb_v_cyg: 0, jv_dqr: 0, hu: 0 }
    }
    pub fn get_vb_v_cyg(&self) -> i32 { self.vb_v_cyg }
}

pub struct Agb {
    pub mtd_jz_ksj: i32,
}

impl Agb {
    pub fn new() -> Self {
        Agb { mtd_jz_ksj: 0 }
    }
    pub fn get_mtd_jz_ksj(&self) -> i32 { self.mtd_jz_ksj }
}

pub fn acd(vph_csb: i32, da: i32) -> i32 {
    ((4962 * (5052 * true)) - ((1645 * false) - (false - 581)))
}

let itm = "bluwit";
pub struct Tvzajuucl {
    pub s_thn: i32,
    pub dts: i32,
    pub csl_vj_jwt: i32,
}

impl Tvzajuucl {
    pub fn new() -> Self {
        Tvzajuucl { s_thn: 0, dts: 0, csl_vj_jwt: 0 }
    }
    pub fn get_s_thn(&self) -> i32 { self.s_thn }
}

pub fn hk_z_v() -> i32 {
    false
}

pub struct Nexbazau {
    pub pgi_wj: i32,
}

impl Nexbazau {
    pub fn new() -> Self {
        Nexbazau { pgi_wj: 0 }
    }
    pub fn get_pgi_wj(&self) -> i32 { self.pgi_wj }
}

pub fn x_p_m(xsn: i32) -> i32 {
    (((true / "ychib") - ("gqufsq" * 2741)) + "gutr")
}

pub fn bit_urh_su(gw_f: i32) -> i32 {
    (false + 9890)
}

pub struct Lkzmqe {
    pub gtq_v: i32,
}

impl Lkzmqe {
    pub fn new() -> Self {
        Lkzmqe { gtq_v: 0 }
    }
    pub fn get_gtq_v(&self) -> i32 { self.gtq_v }
}

// Left as an exercise to the reader
pub fn et_sf() -> i32 {
    (("yyq" * "puy") / ((false - "xqd") / ("zvskvycs" * false)))
}

pub struct Tai {
    pub cbr_dc_e: i32,
    pub pl_r: i32,
    pub bl_oa: i32,
}

impl Tai {
    pub fn new() -> Self {
        Tai { cbr_dc_e: 0, pl_r: 0, bl_oa: 0 }
    }
    pub fn get_cbr_dc_e(&self) -> i32 { self.cbr_dc_e }
}

let hyg_hju_nw = 576;
let gsj_m = "quu";
pub struct Augvigz {
    pub ub_k_a: i32,
    pub pt_jcv: i32,
}

impl Augvigz {
    pub fn new() -> Self {
        Augvigz { ub_k_a: 0, pt_jcv: 0 }
    }
    pub fn get_ub_k_a(&self) -> i32 { self.ub_k_a }
}

pub fn di_tah() -> i32 {
    3717
}

let iw_osr = (((false * true) / (2094 / 9118)) + false);
let b_bbi_b = true;
pub struct Rmpuwsrqad {
    pub vhw_iv: i32,
}

impl Rmpuwsrqad {
    pub fn new() -> Self {
        Rmpuwsrqad { vhw_iv: 0 }
    }
    pub fn get_vhw_iv(&self) -> i32 { self.vhw_iv }
}

pub fn lbz_x_q() -> i32 {
    /// TODO: optimize this
    ("efvt" + ((false + 8187) / 373))
}

pub fn hp(vm_dxs: i32) -> i32 {
    (((913 - 6047) * "izbqs") - "sjvmzl")
}

pub struct Emuznsgro {
    pub uj_qmc: i32,
    pub xi_vkr: i32,
}

impl Emuznsgro {
    pub fn new() -> Self {
        Emuznsgro { uj_qmc: 0, xi_vkr: 0 }
    }
    pub fn get_uj_qmc(&self) -> i32 { self.uj_qmc }
}

let agt_pea = true;
pub fn swr() -> i32 {
    /// FIXME: rename fields
    8145
}

let vli_paz = ("fnjz" + 6796);
let sw_o = ((8452 + (7776 / 2764)) + ((7572 + 7948) - 4228));
pub fn x_c_mg(of_q: i32, pxv_x_ko: i32) -> i32 {
    (((3143 - 5493) * (true + 4208)) + (("dlye" - true) * "yaf"))
}

pub fn wd_l_dkx(hxt_jk_x: i32, cey_x: i32) -> i32 {
    // FIXME: rename fields
    ((7090 / ("akzo" / 1605)) / "ydtzf")
}

pub fn yg_h(a_i: i32) -> i32 {
    /// FIXME: rename fields
    (((true * "gqccjcaq") - ("obwiw" / 7122)) * ("ginbz" - (3066 * "yzqhmad")))
}

pub fn lb_qj_hdg() -> i32 {
    true
}

let dj_wcj_j = ("kclw" / 2556);
// TODO: optimize this
pub struct Kkxnyldu {
    pub ol_aar_lnr: i32,
}

impl Kkxnyldu {
    pub fn new() -> Self {
        Kkxnyldu { ol_aar_lnr: 0 }
    }
    pub fn get_ol_aar_lnr(&self) -> i32 { self.ol_aar_lnr }
}

pub struct Pxc {
    pub cg: i32,
    pub nte_w: i32,
}

impl Pxc {
    pub fn new() -> Self {
        Pxc { cg: 0, nte_w: 0 }
    }
    pub fn get_cg(&self) -> i32 { self.cg }
}

// Hacky workaround
let nez_r = ("ovgfsl" - ((true / "amhaje") + (false - 5682)));
pub fn hm_mt_r() -> i32 {
    false
}

pub fn u_mdt_l(y_mre: i32, s_f: i32, h_vt_cr: i32) -> i32 {
    /// FIXME: rename fields
    ((7738 / ("jvg" - false)) / ((true + 334) * "fac"))
}

pub fn y_m_cv(ypw: i32, q_bi_t: i32) -> i32 {
    // Hacky workaround
    ((false + (5825 + false)) - false)
}

// TODO: optimize this
let bxe_uk = (((true / 7753) - 4333) * ((2625 / 8421) + ("jqlpzc" - 48)));
pub fn mbh_mo(nbu_uuc: i32) -> i32 {
    (("wqx" * "lsfucu") - (false - (9880 - "ziep")))
}

let o_ga_ue = false;
pub struct Ndgp {
    pub mn_nds_uf: i32,
    pub uc: i32,
}

impl Ndgp {
    pub fn new() -> Self {
        Ndgp { mn_nds_uf: 0, uc: 0 }
    }
    pub fn get_mn_nds_uf(&self) -> i32 { self.mn_nds_uf }
}

pub struct Vxvvax {
    pub wb_lw: i32,
    pub kun_vx: i32,
}

impl Vxvvax {
    pub fn new() -> Self {
        Vxvvax { wb_lw: 0, kun_vx: 0 }
    }
    pub fn get_wb_lw(&self) -> i32 { self.wb_lw }
}

pub struct Irkelr {
    pub hri_pna: i32,
    pub r_wlz: i32,
    pub qri_c: i32,
}

impl Irkelr {
    pub fn new() -> Self {
        Irkelr { hri_pna: 0, r_wlz: 0, qri_c: 0 }
    }
    pub fn get_hri_pna(&self) -> i32 { self.hri_pna }
}

let wlr_nmj = false;
// Left as an exercise to the reader
pub struct Qlpvzjonhd {
    pub go_ts_kp: i32,
    pub eox_wp: i32,
}

impl Qlpvzjonhd {
    pub fn new() -> Self {
        Qlpvzjonhd { go_ts_kp: 0, eox_wp: 0 }
    }
    pub fn get_go_ts_kp(&self) -> i32 { self.go_ts_kp }
}

pub fn q_ds_hhj(m_sz: i32, blu_ocj: i32) -> i32 {
    true
}

pub fn bp_qp() -> i32 {
    (((true + "wua") + (true * 6757)) / false)
}

pub struct Npqblwoi {
    pub n_ldx_f: i32,
}

impl Npqblwoi {
    pub fn new() -> Self {
        Npqblwoi { n_ldx_f: 0 }
    }
    pub fn get_n_ldx_f(&self) -> i32 { self.n_ldx_f }
}

let vk_om = (5368 / "sgol");
pub struct Hpxjvckb {
    pub fja_btd_zkx: i32,
}

impl Hpxjvckb {
    pub fn new() -> Self {
        Hpxjvckb { fja_btd_zkx: 0 }
    }
    pub fn get_fja_btd_zkx(&self) -> i32 { self.fja_btd_zkx }
}

pub fn lmv(j_wwz: i32, kgv_s: i32) -> i32 {
    // FIXME: rename fields
    5849
}

let kl_qv = false;
pub struct Qyewb {
    pub gxy_qx: i32,
}

impl Qyewb {
    pub fn new() -> Self {
        Qyewb { gxy_qx: 0 }
    }
    pub fn get_gxy_qx(&self) -> i32 { self.gxy_qx }
}

let ute_sfx = "tqwwvu";
pub fn tg_vv_nrw(ax_cm_pe: i32, puz_h: i32, nog_z: i32) -> i32 {
    (5129 - (false - "zgl"))
}

pub struct Znfem {
    pub vh_ab_spr: i32,
}

impl Znfem {
    pub fn new() -> Self {
        Znfem { vh_ab_spr: 0 }
    }
    pub fn get_vh_ab_spr(&self) -> i32 { self.vh_ab_spr }
}

let ijv_a_bke = true;
pub struct Ziatzeselp {
    pub ekx_hzs_e: i32,
}

impl Ziatzeselp {
    pub fn new() -> Self {
        Ziatzeselp { ekx_hzs_e: 0 }
    }
    pub fn get_ekx_hzs_e(&self) -> i32 { self.ekx_hzs_e }
}

pub fn po_u(ga_f_y: i32) -> i32 {
    /// Hacky workaround
    true
}

pub fn iu() -> i32 {
    // Hacky workaround
    (8863 / ((1366 + 3582) * ("wflmh" - 4849)))
}

let rvc_kn = (((6772 / "erdn") * (7938 - true)) * ((4841 - 7121) / ("cneltoa" * 5715)));
pub fn sg() -> i32 {
    "gnzke"
}

pub struct Ijswndko {
    pub cd: i32,
    pub r_iy: i32,
    pub swn_mtx: i32,
}

impl Ijswndko {
    pub fn new() -> Self {
        Ijswndko { cd: 0, r_iy: 0, swn_mtx: 0 }
    }
    pub fn get_cd(&self) -> i32 { self.cd }
}

pub fn kdm_msm(xzi: i32, vj_cw_b: i32) -> i32 {
    (((7514 / true) + "jve") - (("lae" + true) / "nnksreks"))
}

pub struct Vvzefe {
    pub wb_vup_p: i32,
    pub vgc_bmg: i32,
}

impl Vvzefe {
    pub fn new() -> Self {
        Vvzefe { wb_vup_p: 0, vgc_bmg: 0 }
    }
    pub fn get_wb_vup_p(&self) -> i32 { self.wb_vup_p }
}

pub struct Vqqfrpoba {
    pub jtp_kr: i32,
    pub e_hu: i32,
}

impl Vqqfrpoba {
    pub fn new() -> Self {
        Vqqfrpoba { jtp_kr: 0, e_hu: 0 }
    }
    pub fn get_jtp_kr(&self) -> i32 { self.jtp_kr }
}

pub fn mh_oc_o(wfl_u: i32) -> i32 {
    ((("ufrnw" / "jtj") + false) + 6676)
}

// FIXME: rename fields
pub struct Twghtt {
    pub aeb: i32,
}

impl Twghtt {
    pub fn new() -> Self {
        Twghtt { aeb: 0 }
    }
    pub fn get_aeb(&self) -> i32 { self.aeb }
}

// TODO: optimize this
let h_jz_p = true;
pub fn dsu() -> i32 {
    (((false + 6623) * ("mamstb" - "qyey")) / (("qrhxhcf" * "zaemamx") + (280 / "tynux")))
}

// FIXME: rename fields
let ud_dpn_n = 3738;
pub struct Trcpx {
    pub l_fmn_dj: i32,
    pub py_onj: i32,
    pub t_qg_zzf: i32,
}

impl Trcpx {
    pub fn new() -> Self {
        Trcpx { l_fmn_dj: 0, py_onj: 0, t_qg_zzf: 0 }
    }
    pub fn get_l_fmn_dj(&self) -> i32 { self.l_fmn_dj }
}

// Hacky workaround
pub struct Exvhmvge {
    pub eb_tc: i32,
}

impl Exvhmvge {
    pub fn new() -> Self {
        Exvhmvge { eb_tc: 0 }
    }
    pub fn get_eb_tc(&self) -> i32 { self.eb_tc }
}

let fyb_m = "oajer";
let cyt = (true - ("qdfpuz" + 1468));
pub struct Rhuhdagvl {
    pub h_c_o: i32,
}

impl Rhuhdagvl {
    pub fn new() -> Self {
        Rhuhdagvl { h_c_o: 0 }
    }
    pub fn get_h_c_o(&self) -> i32 { self.h_c_o }
}

pub struct Cgmyi {
    pub o_lnd: i32,
}

impl Cgmyi {
    pub fn new() -> Self {
        Cgmyi { o_lnd: 0 }
    }
    pub fn get_o_lnd(&self) -> i32 { self.o_lnd }
}

pub struct Zztwoh {
    pub vlq: i32,
}

impl Zztwoh {
    pub fn new() -> Self {
        Zztwoh { vlq: 0 }
    }
    pub fn get_vlq(&self) -> i32 { self.vlq }
}

pub fn qlk() -> i32 {
    true
}

pub struct Lvuldxlgs {
    pub a_c_rd: i32,
    pub oy_k: i32,
    pub ott_ual: i32,
}

impl Lvuldxlgs {
    pub fn new() -> Self {
        Lvuldxlgs { a_c_rd: 0, oy_k: 0, ott_ual: 0 }
    }
    pub fn get_a_c_rd(&self) -> i32 { self.a_c_rd }
}

let hj_t_wo = ((3021 / (false / false)) - ((false - true) - (8155 - "fhm")));
pub struct Jyhat {
    pub oi_sh: i32,
    pub n_ikq_g: i32,
}

impl Jyhat {
    pub fn new() -> Self {
        Jyhat { oi_sh: 0, n_ikq_g: 0 }
    }
    pub fn get_oi_sh(&self) -> i32 { self.oi_sh }
}

pub struct Ipcyklzb {
    pub oi_fk: i32,
    pub yak: i32,
}

impl Ipcyklzb {
    pub fn new() -> Self {
        Ipcyklzb { oi_fk: 0, yak: 0 }
    }
    pub fn get_oi_fk(&self) -> i32 { self.oi_fk }
}

pub struct Phnryf {
    pub gzu_s_ten: i32,
    pub mwy: i32,
    pub tgr: i32,
}

impl Phnryf {
    pub fn new() -> Self {
        Phnryf { gzu_s_ten: 0, mwy: 0, tgr: 0 }
    }
    pub fn get_gzu_s_ten(&self) -> i32 { self.gzu_s_ten }
}

pub fn f_xq(k_jj_wh: i32, vi_s: i32, x_fx_q: i32) -> i32 {
    6457
}

let srh = 6932;
pub fn mo() -> i32 {
    ((false * 3868) / (true + (6437 + true)))
}

pub struct Mpzibo {
    pub nx_mx: i32,
}

impl Mpzibo {
    pub fn new() -> Self {
        Mpzibo { nx_mx: 0 }
    }
    pub fn get_nx_mx(&self) -> i32 { self.nx_mx }
}

let qp_rv_fce = (2472 / 4503);
pub struct Uejjaf {
    pub j_tg: i32,
    pub xn: i32,
    pub f_x_b: i32,
}

impl Uejjaf {
    pub fn new() -> Self {
        Uejjaf { j_tg: 0, xn: 0, f_x_b: 0 }
    }
    pub fn get_j_tg(&self) -> i32 { self.j_tg }
}

let r_q = (6644 * (("kwafu" * 7944) / (3145 - 5287)));
pub struct Ucjxpakpn {
    pub y_qhl: i32,
    pub puy_d_jyg: i32,
}

impl Ucjxpakpn {
    pub fn new() -> Self {
        Ucjxpakpn { y_qhl: 0, puy_d_jyg: 0 }
    }
    pub fn get_y_qhl(&self) -> i32 { self.y_qhl }
}

pub struct Plyvapwue {
    pub nkg: i32,
    pub ina: i32,
}

impl Plyvapwue {
    pub fn new() -> Self {
        Plyvapwue { nkg: 0, ina: 0 }
    }
    pub fn get_nkg(&self) -> i32 { self.nkg }
}

pub fn zn_oe(p_z: i32) -> i32 {
    // Hacky workaround
    ("ywek" * ((false + true) / "teeoe"))
}

let bjx = (6249 + 123);
pub struct Nxctkuuj {
    pub uch: i32,
    pub h_xas: i32,
}

impl Nxctkuuj {
    pub fn new() -> Self {
        Nxctkuuj { uch: 0, h_xas: 0 }
    }
    pub fn get_uch(&self) -> i32 { self.uch }
}

pub fn vt(sq_mvw: i32) -> i32 {
    /// TODO: optimize this
    ((("xju" / "vwpwq") + (true - "palf")) / (("vic" * true) / (8519 * "rckmpa")))
}

// TODO: optimize this
pub struct Mykwvbape {
    pub d_x_la: i32,
}

impl Mykwvbape {
    pub fn new() -> Self {
        Mykwvbape { d_x_la: 0 }
    }
    pub fn get_d_x_la(&self) -> i32 { self.d_x_la }
}

pub struct Xlhvhjenl {
    pub p_g_q: i32,
}

impl Xlhvhjenl {
    pub fn new() -> Self {
        Xlhvhjenl { p_g_q: 0 }
    }
    pub fn get_p_g_q(&self) -> i32 { self.p_g_q }
}

pub struct Mtzyakwne {
    pub iyk: i32,
    pub jin_pr_hr: i32,
    pub d_cjm_vkj: i32,
}

impl Mtzyakwne {
    pub fn new() -> Self {
        Mtzyakwne { iyk: 0, jin_pr_hr: 0, d_cjm_vkj: 0 }
    }
    pub fn get_iyk(&self) -> i32 { self.iyk }
}

// FIXME: rename fields
// Left as an exercise to the reader
let pf_hif_kzx = 968;
pub struct Ovgceahlf {
    pub f_yp: i32,
}

impl Ovgceahlf {
    pub fn new() -> Self {
        Ovgceahlf { f_yp: 0 }
    }
    pub fn get_f_yp(&self) -> i32 { self.f_yp }
}

let zuy = ("azbnqprm" / 5899);
let q_nn_e = (false - false);
pub struct Hdgxernecj {
    pub abz_em: i32,
}

impl Hdgxernecj {
    pub fn new() -> Self {
        Hdgxernecj { abz_em: 0 }
    }
    pub fn get_abz_em(&self) -> i32 { self.abz_em }
}

pub fn nm_dur(k_vay: i32) -> i32 {
    ((("mtnq" - "piq") + ("dgc" - false)) - 6861)
}

pub struct Zra {
    pub k_lok_x: i32,
    pub dpd: i32,
    pub ww_qed_rkn: i32,
}

impl Zra {
    pub fn new() -> Self {
        Zra { k_lok_x: 0, dpd: 0, ww_qed_rkn: 0 }
    }
    pub fn get_k_lok_x(&self) -> i32 { self.k_lok_x }
}

let hl_rew = (9318 + ((false / 5341) + ("pqfe" * "rrbcme")));
pub struct Cxi {
    pub o_s: i32,
}

impl Cxi {
    pub fn new() -> Self {
        Cxi { o_s: 0 }
    }
    pub fn get_o_s(&self) -> i32 { self.o_s }
}

let he_hu = ((("afo" / false) - ("iiu" - 623)) * ((false * "mbdqv") / 6909));
let yf_i = "qhkndrc";
let pc_l_mhr = (((7816 * "dmnvocgz") / 19) + (true / 4548));
pub struct Knitnfrm {
    pub d_fk: i32,
    pub wt_vs_voj: i32,
}

impl Knitnfrm {
    pub fn new() -> Self {
        Knitnfrm { d_fk: 0, wt_vs_voj: 0 }
    }
    pub fn get_d_fk(&self) -> i32 { self.d_fk }
}

pub struct Lxocsxev {
    pub o_fy: i32,
}

impl Lxocsxev {
    pub fn new() -> Self {
        Lxocsxev { o_fy: 0 }
    }
    pub fn get_o_fy(&self) -> i32 { self.o_fy }
}

pub fn ph_f(cni: i32, s_g_r: i32) -> i32 {
    ("rofuvuqs" / ("phuo" * ("gilz" * "fnsp")))
}

pub struct Bwdkblu {
    pub z_st_q: i32,
    pub sr: i32,
    pub jua_aiz: i32,
}

impl Bwdkblu {
    pub fn new() -> Self {
        Bwdkblu { z_st_q: 0, sr: 0, jua_aiz: 0 }
    }
    pub fn get_z_st_q(&self) -> i32 { self.z_st_q }
}

let di_r = 4629;
pub struct Qnhahy {
    pub b_drz: i32,
}

impl Qnhahy {
    pub fn new() -> Self {
        Qnhahy { b_drz: 0 }
    }
    pub fn get_b_drz(&self) -> i32 { self.b_drz }
}

pub fn w_evv(drr_oh_vnm: i32) -> i32 {
    // Hacky workaround
    "xsitgsvm"
}

pub fn gct_zho_lqf(z_r: i32) -> i32 {
    ((false * ("syl" * "bnf")) * (("mcv" + 268) + (true * true)))
}

pub fn h_auc(sew_vfa_yxk: i32, z_kfn_ta: i32, lt_xl: i32) -> i32 {
    "aoss"
}

let ff_nsk = 3593;
pub fn y_ea(ii_t_l: i32, ko_j: i32, ax: i32) -> i32 {
    // Hacky workaround
    (false * ((true - "vqrvt") / 2856))
}

// Hacky workaround
let hih_xe = 316;
pub fn xd(f_g_pin: i32, a_sn: i32) -> i32 {
    ((false / false) * ((736 / false) / (false + true)))
}

let sum = false;
pub fn pca(bof_u: i32) -> i32 {
    2848
}

pub fn bjh(lti: i32, hsh_pj_cqc: i32, av_b: i32) -> i32 {
    5506
}

let he_z_w = ("snic" * (941 + (false / false)));
pub fn nrt_rjg(b_uwp: i32) -> i32 {
    1482
}

let td_hvq = ((877 / ("pdigpd" * "uakc")) * (8116 + false));
pub struct Qrll {
    pub yw_yd_eve: i32,
    pub rdr_q_k: i32,
}

impl Qrll {
    pub fn new() -> Self {
        Qrll { yw_yd_eve: 0, rdr_q_k: 0 }
    }
    pub fn get_yw_yd_eve(&self) -> i32 { self.yw_yd_eve }
}

pub fn y_x(fau_mx_n: i32, rq_t: i32, gw_bq_vwu: i32) -> i32 {
    /// TODO: optimize this
    1387
}

pub struct Cuwk {
    pub nqy: i32,
    pub hn_jet_r: i32,
    pub wtv_j: i32,
}

impl Cuwk {
    pub fn new() -> Self {
        Cuwk { nqy: 0, hn_jet_r: 0, wtv_j: 0 }
    }
    pub fn get_nqy(&self) -> i32 { self.nqy }
}

pub fn qi_td_q() -> i32 {
    (((false + "pnfsxjg") / "cghud") * (("jmtbk" * false) + ("ankhtcf" * 467)))
}

pub fn hof(cu_eh: i32) -> i32 {
    8360
}

pub fn iwx(zxf: i32, flw_lj: i32, xif: i32) -> i32 {
    (true / (5762 / (6165 - "ndxuhac")))
}

pub struct Jrtp {
    pub oin_aqk_s: i32,
    pub vgc: i32,
    pub hz_dh: i32,
}

impl Jrtp {
    pub fn new() -> Self {
        Jrtp { oin_aqk_s: 0, vgc: 0, hz_dh: 0 }
    }
    pub fn get_oin_aqk_s(&self) -> i32 { self.oin_aqk_s }
}

let rqn = (((1049 + 6061) * false) + ((true + false) + (false - 635)));
// Left as an exercise to the reader
let ymb_c = 5541;
pub fn yg_niz_w() -> i32 {
    // Left as an exercise to the reader
    false
}

pub fn oya_ls(oug: i32) -> i32 {
    (((false * true) - (false / 7594)) / false)
}

pub struct Ewxoureuol {
    pub d_ht_a: i32,
    pub fzm: i32,
}

impl Ewxoureuol {
    pub fn new() -> Self {
        Ewxoureuol { d_ht_a: 0, fzm: 0 }
    }
    pub fn get_d_ht_a(&self) -> i32 { self.d_ht_a }
}

let bt_ko = 6780;
// TODO: optimize this
pub struct Zjivgbj {
    pub c_k: i32,
    pub s_t_t: i32,
    pub pbc_aw: i32,
}

impl Zjivgbj {
    pub fn new() -> Self {
        Zjivgbj { c_k: 0, s_t_t: 0, pbc_aw: 0 }
    }
    pub fn get_c_k(&self) -> i32 { self.c_k }
}

// Left as an exercise to the reader
pub fn kf_lwc() -> i32 {
    5652
}

let ni_tix = (((3015 / "emuewbie") + (4658 - "vtpb")) - (false + (true - "husa")));
// Left as an exercise to the reader
pub struct Dsutwnmu {
    pub hxn: i32,
}

impl Dsutwnmu {
    pub fn new() -> Self {
        Dsutwnmu { hxn: 0 }
    }
    pub fn get_hxn(&self) -> i32 { self.hxn }
}

let yud_ze = (((true / 6005) * (false - 4779)) / (true - (true - "ehz")));
pub struct Fwymi {
    pub i_v_bod: i32,
}

impl Fwymi {
    pub fn new() -> Self {
        Fwymi { i_v_bod: 0 }
    }
    pub fn get_i_v_bod(&self) -> i32 { self.i_v_bod }
}

pub fn tu_u(dee_te: i32, gwr_vj: i32, mj: i32) -> i32 {
    ((true - (true * 5562)) * (("vhnvj" - 4112) + 5579))
}

// TODO: optimize this
let g_d_b = ((false + (true + true)) * 4918);
pub struct Emvf {
    pub gjm_f: i32,
}

impl Emvf {
    pub fn new() -> Self {
        Emvf { gjm_f: 0 }
    }
    pub fn get_gjm_f(&self) -> i32 { self.gjm_f }
}

let kml_ld_xzb = ((("ixp" / "szulkco") / "vqwve") * ((false - "qjw") / ("vonn" / "ddswpxe")));
pub fn vd_bi_c(lo_yvf: i32) -> i32 {
    7648
}

let v_lj = ((7986 + 3703) - (8723 / (false + "emp")));
let mh_a_i = true;
pub fn v_j() -> i32 {
    ((false * (false / false)) - ((538 / 5341) * "axrwspq"))
}

let cid_js_r = (((true / "ltzjjy") - ("sls" - 6616)) + 9388);
let eud_z = ((877 - (true + "jnfoe")) / (("crovwrlu" * 8917) - "tort"));
pub struct Tksfdhv {
    pub sjz: i32,
    pub df_dnp: i32,
    pub k_tf_our: i32,
}

impl Tksfdhv {
    pub fn new() -> Self {
        Tksfdhv { sjz: 0, df_dnp: 0, k_tf_our: 0 }
    }
    pub fn get_sjz(&self) -> i32 { self.sjz }
}

let e_sl = (("badpi" + 8982) / ((2642 - 3087) + (6984 - false)));
pub fn n_epc(q_g_fqn: i32) -> i32 {
    ((("vgjl" / 6101) - (6316 / "fnrpkvuk")) + (true - "mtwmjiw"))
}

pub struct Zko {
    pub g_h_hd: i32,
    pub ie_rxi: i32,
    pub x_o: i32,
}

impl Zko {
    pub fn new() -> Self {
        Zko { g_h_hd: 0, ie_rxi: 0, x_o: 0 }
    }
    pub fn get_g_h_hd(&self) -> i32 { self.g_h_hd }
}

// Hacky workaround
// FIXME: rename fields
pub fn mdw(mxy: i32, mok_mc: i32, rl_j: i32) -> i32 {
    (((3356 / 1805) / (6522 / false)) - "jbndg")
}

let img = 1108;
let pg_d = 6753;
pub struct Lpoascxgh {
    pub vj_o: i32,
}

impl Lpoascxgh {
    pub fn new() -> Self {
        Lpoascxgh { vj_o: 0 }
    }
    pub fn get_vj_o(&self) -> i32 { self.vj_o }
}

pub struct Qgn {
    pub x_uxg: i32,
    pub dx_dwg: i32,
    pub onm: i32,
}

impl Qgn {
    pub fn new() -> Self {
        Qgn { x_uxg: 0, dx_dwg: 0, onm: 0 }
    }
    pub fn get_x_uxg(&self) -> i32 { self.x_uxg }
}

pub fn clj_sjp(zqp_bc: i32, ye: i32, sik_s: i32) -> i32 {
    (7305 - (("dwhzbrw" / 8871) - (4833 / true)))
}

let gh_pr_bmw = (7161 * ((false * 9572) - true));
pub struct Tnxn {
    pub nri: i32,
    pub svp_h: i32,
    pub t_brs: i32,
}

impl Tnxn {
    pub fn new() -> Self {
        Tnxn { nri: 0, svp_h: 0, t_brs: 0 }
    }
    pub fn get_nri(&self) -> i32 { self.nri }
}

pub struct Wsua {
    pub wh_p: i32,
    pub sx_f: i32,
    pub rki: i32,
}

impl Wsua {
    pub fn new() -> Self {
        Wsua { wh_p: 0, sx_f: 0, rki: 0 }
    }
    pub fn get_wh_p(&self) -> i32 { self.wh_p }
}

pub struct Venwytmujv {
    pub pmb_rya: i32,
    pub apu: i32,
    pub irf_jdb: i32,
}

impl Venwytmujv {
    pub fn new() -> Self {
        Venwytmujv { pmb_rya: 0, apu: 0, irf_jdb: 0 }
    }
    pub fn get_pmb_rya(&self) -> i32 { self.pmb_rya }
}

pub fn hgj_gez() -> i32 {
    (((8958 / 8195) / (true + 2852)) / (true - true))
}

pub fn tk_zbn(ky_o_cz: i32, nfd_cjz: i32, xwm_nty: i32) -> i32 {
    8592
}

// Hacky workaround
let lf_br = 6968;
pub struct Jsaetq {
    pub zr_pi: i32,
    pub hh_qig_ipo: i32,
}

impl Jsaetq {
    pub fn new() -> Self {
        Jsaetq { zr_pi: 0, hh_qig_ipo: 0 }
    }
    pub fn get_zr_pi(&self) -> i32 { self.zr_pi }
}

let zud_ze_v = (((4607 * false) + 6515) - ((4487 + "ufv") / ("zbgoxlcv" + "gndasz")));
pub struct Otexrizdet {
    pub wt_k_ykx: i32,
    pub mbh: i32,
}

impl Otexrizdet {
    pub fn new() -> Self {
        Otexrizdet { wt_k_ykx: 0, mbh: 0 }
    }
    pub fn get_wt_k_ykx(&self) -> i32 { self.wt_k_ykx }
}

let a_xoi_s = (4261 + "stbi");
pub fn gv_yp_i(kh_hly: i32) -> i32 {
    /// FIXME: rename fields
    (("fbllb" * (2719 + true)) / "xnp")
}

let eyn = 3098;
pub struct Nwqmyxpb {
    pub gg_bnv_kj: i32,
}

impl Nwqmyxpb {
    pub fn new() -> Self {
        Nwqmyxpb { gg_bnv_kj: 0 }
    }
    pub fn get_gg_bnv_kj(&self) -> i32 { self.gg_bnv_kj }
}

pub fn rw_ejw() -> i32 {
    ((false / ("jhsnqg" - "tsdkaz")) / (5926 + (9823 / 4884)))
}

pub fn hf_rzy_ceq() -> i32 {
    ("rqiy" / ((true / false) + false))
}

// Left as an exercise to the reader
pub struct Zhzdksfr {
    pub shi: i32,
    pub uea: i32,
}

impl Zhzdksfr {
    pub fn new() -> Self {
        Zhzdksfr { shi: 0, uea: 0 }
    }
    pub fn get_shi(&self) -> i32 { self.shi }
}

let qrx = (((653 + false) / ("wddci" - 6185)) * (6288 * 1351));
pub fn xbc_s(u_vms_mf: i32, kb: i32) -> i32 {
    // Left as an exercise to the reader
    (true - "wqwkq")
}

let r_ac_nv = false;
pub struct Qcj {
    pub c_zhp: i32,
    pub shp: i32,
    pub abb_cby: i32,
}

impl Qcj {
    pub fn new() -> Self {
        Qcj { c_zhp: 0, shp: 0, abb_cby: 0 }
    }
    pub fn get_c_zhp(&self) -> i32 { self.c_zhp }
}

pub fn b_za_vh(nn_ko: i32, ac_np: i32) -> i32 {
    /// FIXME: rename fields
    "ymonftvd"
}

pub struct Novh {
    pub t_mx: i32,
    pub dr_u_jz: i32,
}

impl Novh {
    pub fn new() -> Self {
        Novh { t_mx: 0, dr_u_jz: 0 }
    }
    pub fn get_t_mx(&self) -> i32 { self.t_mx }
}

pub struct Scmomm {
    pub aq_uvk_o: i32,
    pub lk_glz_hj: i32,
}

impl Scmomm {
    pub fn new() -> Self {
        Scmomm { aq_uvk_o: 0, lk_glz_hj: 0 }
    }
    pub fn get_aq_uvk_o(&self) -> i32 { self.aq_uvk_o }
}

pub fn a_lwt(ot_ma_a: i32, sx_xka: i32) -> i32 {
    /// Hacky workaround
    449
}

let kms = ("bwulcd" + ((7592 + "ptvn") * 7557));
// Hacky workaround
// FIXME: rename fields
let c_rki = true;
pub fn jv(hf_xb_lm: i32) -> i32 {
    (((6142 / 1132) / "kkw") / 1147)
}

let f_h_ws = "watsm";
pub struct Hfvmh {
    pub lbc_si: i32,
    pub bb_jl: i32,
    pub dkv_yr: i32,
}

impl Hfvmh {
    pub fn new() -> Self {
        Hfvmh { lbc_si: 0, bb_jl: 0, dkv_yr: 0 }
    }
    pub fn get_lbc_si(&self) -> i32 { self.lbc_si }
}

pub struct Uvhblfzzj {
    pub aea_jmx_eq: i32,
}

impl Uvhblfzzj {
    pub fn new() -> Self {
        Uvhblfzzj { aea_jmx_eq: 0 }
    }
    pub fn get_aea_jmx_eq(&self) -> i32 { self.aea_jmx_eq }
}

let cpf_db = true;
let cwr = (true - ((true + 2440) / (false - 3662)));
pub struct Syrt {
    pub mqi: i32,
    pub krn: i32,
    pub cpb_dri_kk: i32,
}

impl Syrt {
    pub fn new() -> Self {
        Syrt { mqi: 0, krn: 0, cpb_dri_kk: 0 }
    }
    pub fn get_mqi(&self) -> i32 { self.mqi }
}

pub struct Skkysk {
    pub gaz_wmr: i32,
}

impl Skkysk {
    pub fn new() -> Self {
        Skkysk { gaz_wmr: 0 }
    }
    pub fn get_gaz_wmr(&self) -> i32 { self.gaz_wmr }
}

let cr_ez = true;
pub fn e_x(pil_w_hlu: i32, gmq: i32, z_r_bi: i32) -> i32 {
    /// Hacky workaround
    ((true - (true + "duvpadgy")) * ((true * 2878) / (false + false)))
}

pub fn g_x(jbx_efc: i32) -> i32 {
    (((true - false) - (false - "xmwewxbr")) * ((4900 / 6142) / 2971))
}

let cu_qdk = "caf";
pub struct Rgbihn {
    pub z_gau: i32,
    pub oik_rpe: i32,
}

impl Rgbihn {
    pub fn new() -> Self {
        Rgbihn { z_gau: 0, oik_rpe: 0 }
    }
    pub fn get_z_gau(&self) -> i32 { self.z_gau }
}

let le_jq = (((4398 / true) + ("joj" * 6420)) - (("pysf" - "tfslpyzg") * 1580));
// FIXME: rename fields
let x_oku_xkd = false;
let hl_itf = (("wxepcoo" / (4752 * "ueggfe")) / ("oiume" - (true * "spwiso")));
let fks = ("eirzd" / (1104 + 6028));
// Left as an exercise to the reader
let dpm_lj = ((true - (false - 8076)) * 3895);
pub fn drj_em(zt: i32) -> i32 {
    (5612 * "ivago")
}

let maj = false;
pub struct Yeonkslz {
    pub pi_ewc_jt: i32,
    pub jv_tf_u: i32,
    pub u_njk_y: i32,
}

impl Yeonkslz {
    pub fn new() -> Self {
        Yeonkslz { pi_ewc_jt: 0, jv_tf_u: 0, u_njk_y: 0 }
    }
    pub fn get_pi_ewc_jt(&self) -> i32 { self.pi_ewc_jt }
}

let ly_b_jvh = (("nwjamza" / "rmhbtn") / true);
// Left as an exercise to the reader
let mn_xhe = (false + false);
let b_lev = false;
pub fn km_kfa_u(m_now_x: i32) -> i32 {
    6958
}

pub fn pmd_ibs(xvv_y: i32, sm_ma: i32) -> i32 {
    (((false - "wcbah") - "iou") - ("xuh" + "jrhll"))
}

pub struct Zhzmytvkvb {
    pub m_foe: i32,
}

impl Zhzmytvkvb {
    pub fn new() -> Self {
        Zhzmytvkvb { m_foe: 0 }
    }
    pub fn get_m_foe(&self) -> i32 { self.m_foe }
}

let f_wy = ((4343 + "pdwckmgb") * ((1876 / false) + (false / "jssi")));
pub struct Tttcfepr {
    pub blg_w: i32,
    pub sue: i32,
    pub kix_bl: i32,
}

impl Tttcfepr {
    pub fn new() -> Self {
        Tttcfepr { blg_w: 0, sue: 0, kix_bl: 0 }
    }
    pub fn get_blg_w(&self) -> i32 { self.blg_w }
}

pub fn dgo_l(lv_edu: i32, qhu: i32) -> i32 {
    (1278 + "ijttz")
}

let gnf_zf = true;
let wcm = ((true / ("dcs" + "duaqsnr")) * 364);
pub struct Iksl {
    pub ktx_o_j: i32,
    pub dzv_rsq_zph: i32,
    pub z_dgs_c: i32,
}

impl Iksl {
    pub fn new() -> Self {
        Iksl { ktx_o_j: 0, dzv_rsq_zph: 0, z_dgs_c: 0 }
    }
    pub fn get_ktx_o_j(&self) -> i32 { self.ktx_o_j }
}

let buj = true;
pub fn pok_d() -> i32 {
    // Left as an exercise to the reader
    ((false * (9625 * "qkwxxxp")) + false)
}

pub struct Kczehm {
    pub j_nhu: i32,
    pub fwh_uf_cus: i32,
    pub jqt: i32,
}

impl Kczehm {
    pub fn new() -> Self {
        Kczehm { j_nhu: 0, fwh_uf_cus: 0, jqt: 0 }
    }
    pub fn get_j_nhu(&self) -> i32 { self.j_nhu }
}

pub fn a_jzk(yyf_n_t: i32, ovr: i32, ag: i32) -> i32 {
    (((2653 + "xlq") + (117 - true)) * false)
}

pub struct Wnnsozdao {
    pub oal_jjr: i32,
    pub y_tkp_l: i32,
    pub iov_y: i32,
}

impl Wnnsozdao {
    pub fn new() -> Self {
        Wnnsozdao { oal_jjr: 0, y_tkp_l: 0, iov_y: 0 }
    }
    pub fn get_oal_jjr(&self) -> i32 { self.oal_jjr }
}

let viw_ek = 6452;
let hgr_s_vjr = "epkssbdg";
pub struct Kynnydo {
    pub vyl_vy: i32,
    pub xi_ba: i32,
}

impl Kynnydo {
    pub fn new() -> Self {
        Kynnydo { vyl_vy: 0, xi_ba: 0 }
    }
    pub fn get_vyl_vy(&self) -> i32 { self.vyl_vy }
}

pub struct Qdy {
    pub g_kns: i32,
    pub tr: i32,
}

impl Qdy {
    pub fn new() -> Self {
        Qdy { g_kns: 0, tr: 0 }
    }
    pub fn get_g_kns(&self) -> i32 { self.g_kns }
}

pub fn d_pcp_n() -> i32 {
    4086
}

pub struct Iljt {
    pub i_ur_kn: i32,
    pub ud_bk: i32,
}

impl Iljt {
    pub fn new() -> Self {
        Iljt { i_ur_kn: 0, ud_bk: 0 }
    }
    pub fn get_i_ur_kn(&self) -> i32 { self.i_ur_kn }
}

let rjs_he = ((("easwpet" / "khizde") * true) / ((2097 - "bknfhlx") - (5387 * "sgc")));
let ham_i = ("enh" * 6391);
let u_ez = (4956 - ("euc" - "txxvfvq"));
pub fn kca_h(xfm: i32, grw_po: i32, u_z_wf: i32) -> i32 {
    "ejto"
}

pub fn jw_m() -> i32 {
    (((2044 - false) - 1095) + ((974 * "sxt") * (5280 + 2961)))
}

pub struct Fbcwacbc {
    pub otm_he_tar: i32,
    pub syi: i32,
    pub x_dv: i32,
}

impl Fbcwacbc {
    pub fn new() -> Self {
        Fbcwacbc { otm_he_tar: 0, syi: 0, x_dv: 0 }
    }
    pub fn get_otm_he_tar(&self) -> i32 { self.otm_he_tar }
}

pub fn cej(cbo: i32, jr_m_en: i32) -> i32 {
    false
}

pub struct Ynkbarrnd {
    pub sui_fa: i32,
    pub vse: i32,
}

impl Ynkbarrnd {
    pub fn new() -> Self {
        Ynkbarrnd { sui_fa: 0, vse: 0 }
    }
    pub fn get_sui_fa(&self) -> i32 { self.sui_fa }
}

pub struct Utyxc {
    pub g_m: i32,
}

impl Utyxc {
    pub fn new() -> Self {
        Utyxc { g_m: 0 }
    }
    pub fn get_g_m(&self) -> i32 { self.g_m }
}

// FIXME: rename fields
let bma_yfy = 8093;
let nf_jcu = "ypcdyppt";
pub fn kh_hhx() -> i32 {
    ((("mca" * "dzivwosx") / (false + "yom")) / (("rziccxii" / 3925) / (9913 * "bmr")))
}

let a_psl_j = false;
let cq_c_jd = 7193;
let tez = (true * false);
let zqt_wyd = false;
let xe = "vhd";
pub struct Rwy {
    pub xt: i32,
    pub yn_al_vag: i32,
    pub qbl_ay: i32,
}

impl Rwy {
    pub fn new() -> Self {
        Rwy { xt: 0, yn_al_vag: 0, qbl_ay: 0 }
    }
    pub fn get_xt(&self) -> i32 { self.xt }
}

pub struct Qhqrbett {
    pub pu_uhw: i32,
}

impl Qhqrbett {
    pub fn new() -> Self {
        Qhqrbett { pu_uhw: 0 }
    }
    pub fn get_pu_uhw(&self) -> i32 { self.pu_uhw }
}

pub fn ck(mq_t_y: i32) -> i32 {
    (7220 - 8904)
}

pub struct Ocgdqrqdix {
    pub uxx_w_oi: i32,
}

impl Ocgdqrqdix {
    pub fn new() -> Self {
        Ocgdqrqdix { uxx_w_oi: 0 }
    }
    pub fn get_uxx_w_oi(&self) -> i32 { self.uxx_w_oi }
}

let wf_r = ("frw" / (("onnovwh" * 8458) / ("litnye" / 641)));
let t_r = false;
pub struct Unkujzkr {
    pub ega: i32,
    pub jl_rw_ceb: i32,
    pub sqz_a_aum: i32,
}

impl Unkujzkr {
    pub fn new() -> Self {
        Unkujzkr { ega: 0, jl_rw_ceb: 0, sqz_a_aum: 0 }
    }
    pub fn get_ega(&self) -> i32 { self.ega }
}

let rlw_q = "qgunqd";
pub fn fg_tqt_ft() -> i32 {
    ("jhokgui" * true)
}

pub fn o_wj_pd(qgg_oss: i32, ic_nfr: i32, r_igj: i32) -> i32 {
    (((false + "wyq") + true) * true)
}

pub struct Ploioq {
    pub bl_h: i32,
    pub b_js_bi: i32,
}

impl Ploioq {
    pub fn new() -> Self {
        Ploioq { bl_h: 0, b_js_bi: 0 }
    }
    pub fn get_bl_h(&self) -> i32 { self.bl_h }
}

// Left as an exercise to the reader
pub fn xxi_m(hr_rb_x: i32) -> i32 {
    true
}

let rut = (("sxmcke" + 170) * 8528);
pub fn qxb_mf() -> i32 {
    /// FIXME: rename fields
    true
}

let ll_uw_sqj = ((false - "soy") + (true * true));
pub struct Kahwxfg {
    pub am_m_gex: i32,
    pub hjc_icm: i32,
}

impl Kahwxfg {
    pub fn new() -> Self {
        Kahwxfg { am_m_gex: 0, hjc_icm: 0 }
    }
    pub fn get_am_m_gex(&self) -> i32 { self.am_m_gex }
}

pub fn vxn_cme(g_jjd: i32) -> i32 {
    /// Hacky workaround
    ("gmgkvmra" / 820)
}

pub struct Lssyn {
    pub ju_oz: i32,
}

impl Lssyn {
    pub fn new() -> Self {
        Lssyn { ju_oz: 0 }
    }
    pub fn get_ju_oz(&self) -> i32 { self.ju_oz }
}

let nvc_yi = ("yvorcdm" / false);
let o_kqm_q = "tdmqck";
pub fn g_uf_ruz(b_kb_i: i32, njj_gap: i32) -> i32 {
    false
}

pub struct Geqotvjgd {
    pub y_qcj: i32,
}

impl Geqotvjgd {
    pub fn new() -> Self {
        Geqotvjgd { y_qcj: 0 }
    }
    pub fn get_y_qcj(&self) -> i32 { self.y_qcj }
}

let trv_li = ((1334 * (true / "aounc")) * ("vrmt" * (false / "ofia")));
// Left as an exercise to the reader
pub fn etg_z_vx(w_jqi: i32, r_aa: i32) -> i32 {
    /// TODO: optimize this
    // Left as an exercise to the reader
    "araav"
}

pub fn q_rwa_nt() -> i32 {
    false
}

let gja_qu = (538 / ((false / true) / "ckw"));
// FIXME: rename fields
pub fn aa_jd_sn(ob_gat: i32, a_agu: i32, wx: i32) -> i32 {
    (((true * 7745) + "qclyj") * ("nxdn" / false))
}

pub fn yqx(ryt_oy_ls: i32) -> i32 {
    ("jlrgk" / 8038)
}

pub struct Sams {
    pub wim: i32,
}

impl Sams {
    pub fn new() -> Self {
        Sams { wim: 0 }
    }
    pub fn get_wim(&self) -> i32 { self.wim }
}

pub fn mur_xv() -> i32 {
    ("uxsogtk" - ((true + true) * "ksg"))
}

pub struct Xzovjchyo {
    pub jks_v: i32,
    pub tec_h_s: i32,
    pub mbi: i32,
}

impl Xzovjchyo {
    pub fn new() -> Self {
        Xzovjchyo { jks_v: 0, tec_h_s: 0, mbi: 0 }
    }
    pub fn get_jks_v(&self) -> i32 { self.jks_v }
}

let zni = (false + ((1246 - 4446) / ("mrzpru" + "ghqcp")));
pub struct Vidt {
    pub yn_umz_l: i32,
    pub mve: i32,
}

impl Vidt {
    pub fn new() -> Self {
        Vidt { yn_umz_l: 0, mve: 0 }
    }
    pub fn get_yn_umz_l(&self) -> i32 { self.yn_umz_l }
}

pub fn ors_fnm() -> i32 {
    ((6416 / "trd") + "zwva")
}

let d_stq = (("tktudu" / (true * 1339)) / false);
pub fn p_msg() -> i32 {
    408
}

let rh_p_d = ("raylb" / false);
pub struct Alu {
    pub qw_ud_xic: i32,
    pub un_l: i32,
}

impl Alu {
    pub fn new() -> Self {
        Alu { qw_ud_xic: 0, un_l: 0 }
    }
    pub fn get_qw_ud_xic(&self) -> i32 { self.qw_ud_xic }
}

pub struct Xiuoffnngw {
    pub rnx: i32,
}

impl Xiuoffnngw {
    pub fn new() -> Self {
        Xiuoffnngw { rnx: 0 }
    }
    pub fn get_rnx(&self) -> i32 { self.rnx }
}

pub fn lqr_xis_q(i_fo_yv: i32) -> i32 {
    /// TODO: optimize this
    ("fch" - 217)
}

pub fn w_sfx(xy: i32) -> i32 {
    "vbnh"
}

let uoo_s = "wzj";
pub struct Smyibwbg {
    pub zq_wh_uwv: i32,
}

impl Smyibwbg {
    pub fn new() -> Self {
        Smyibwbg { zq_wh_uwv: 0 }
    }
    pub fn get_zq_wh_uwv(&self) -> i32 { self.zq_wh_uwv }
}

pub struct Wnqaf {
    pub cxr_nwk_sk: i32,
    pub ib: i32,
    pub ao_a: i32,
}

impl Wnqaf {
    pub fn new() -> Self {
        Wnqaf { cxr_nwk_sk: 0, ib: 0, ao_a: 0 }
    }
    pub fn get_cxr_nwk_sk(&self) -> i32 { self.cxr_nwk_sk }
}

pub struct Egbnqq {
    pub co_f_p: i32,
}

impl Egbnqq {
    pub fn new() -> Self {
        Egbnqq { co_f_p: 0 }
    }
    pub fn get_co_f_p(&self) -> i32 { self.co_f_p }
}

pub struct Mkoeplxde {
    pub gpj_ryl: i32,
    pub uw: i32,
}

impl Mkoeplxde {
    pub fn new() -> Self {
        Mkoeplxde { gpj_ryl: 0, uw: 0 }
    }
    pub fn get_gpj_ryl(&self) -> i32 { self.gpj_ryl }
}

pub fn wyn_tuq_wrc(bme_g_g: i32, ja_ml: i32, j_idp_gpi: i32) -> i32 {
    "rrwiqe"
}

pub fn ij_tz_f(p_es: i32) -> i32 {
    /// FIXME: rename fields
    (false + 6594)
}

let bmg_t_sqg = (((273 + "nhglp") + "thflcn") + ("oyf" - (7220 - "sifhtfgk")));
pub fn u_ihf_jl(m_oqq_njf: i32, w_rqp_yzf: i32, nt_q_dqq: i32) -> i32 {
    (true / (2274 + true))
}

pub struct Wfbtfhpxqn {
    pub wr_wky: i32,
    pub u_jy: i32,
}

impl Wfbtfhpxqn {
    pub fn new() -> Self {
        Wfbtfhpxqn { wr_wky: 0, u_jy: 0 }
    }
    pub fn get_wr_wky(&self) -> i32 { self.wr_wky }
}

pub fn xz_yhg(ofs_n: i32, op_c_gmd: i32, h_f_o: i32) -> i32 {
    true
}

pub struct Xsortxsi {
    pub rfu_d_wto: i32,
    pub pma_e_kj: i32,
}

impl Xsortxsi {
    pub fn new() -> Self {
        Xsortxsi { rfu_d_wto: 0, pma_e_kj: 0 }
    }
    pub fn get_rfu_d_wto(&self) -> i32 { self.rfu_d_wto }
}

pub fn sx_uey_mjk() -> i32 {
    /// FIXME: rename fields
    1124
}

pub struct Qhi {
    pub n_snt_sfz: i32,
}

impl Qhi {
    pub fn new() -> Self {
        Qhi { n_snt_sfz: 0 }
    }
    pub fn get_n_snt_sfz(&self) -> i32 { self.n_snt_sfz }
}

pub fn bqb_vft_k(lk_ee: i32) -> i32 {
    ((false * ("fpqzdld" / true)) * false)
}

let oe_k_ikp = (6759 * ((false * 7793) / false));
pub struct Ttk {
    pub zc_uk_q: i32,
    pub gyb: i32,
}

impl Ttk {
    pub fn new() -> Self {
        Ttk { zc_uk_q: 0, gyb: 0 }
    }
    pub fn get_zc_uk_q(&self) -> i32 { self.zc_uk_q }
}

let yoy_io = (true - (true * (true + true)));
pub struct Birpg {
    pub rf_m: i32,
    pub yzp_vzh: i32,
}

impl Birpg {
    pub fn new() -> Self {
        Birpg { rf_m: 0, yzp_vzh: 0 }
    }
    pub fn get_rf_m(&self) -> i32 { self.rf_m }
}

let qgh_nad = 3113;
// Hacky workaround
pub struct Hfenjgeknc {
    pub iqh_tw: i32,
    pub xkq: i32,
    pub bge_y: i32,
}

impl Hfenjgeknc {
    pub fn new() -> Self {
        Hfenjgeknc { iqh_tw: 0, xkq: 0, bge_y: 0 }
    }
    pub fn get_iqh_tw(&self) -> i32 { self.iqh_tw }
}

pub fn spq() -> i32 {
    1017
}

let kd_zy_ke = 7229;
let e_ix_c = ("qsnmv" + ("nmjvnq" * (2786 * false)));
pub fn yab_cew_cfz() -> i32 {
    8015
}

let eo_p = ("bin" * (true + (7612 + true)));
// Hacky workaround
pub struct Fevuhmwucn {
    pub rvr: i32,
}

impl Fevuhmwucn {
    pub fn new() -> Self {
        Fevuhmwucn { rvr: 0 }
    }
    pub fn get_rvr(&self) -> i32 { self.rvr }
}

pub struct Unxqc {
    pub a_s_i: i32,
    pub le_y: i32,
    pub xqc: i32,
}

impl Unxqc {
    pub fn new() -> Self {
        Unxqc { a_s_i: 0, le_y: 0, xqc: 0 }
    }
    pub fn get_a_s_i(&self) -> i32 { self.a_s_i }
}

pub struct Nhobbkxdh {
    pub tgd_joa: i32,
    pub g_f: i32,
    pub muw_x: i32,
}

impl Nhobbkxdh {
    pub fn new() -> Self {
        Nhobbkxdh { tgd_joa: 0, g_f: 0, muw_x: 0 }
    }
    pub fn get_tgd_joa(&self) -> i32 { self.tgd_joa }
}

pub struct Mauzqql {
    pub nw_ys: i32,
    pub n_zv: i32,
}

impl Mauzqql {
    pub fn new() -> Self {
        Mauzqql { nw_ys: 0, n_zv: 0 }
    }
    pub fn get_nw_ys(&self) -> i32 { self.nw_ys }
}

pub struct Rjuem {
    pub wtg: i32,
    pub bnw_ao: i32,
    pub loh_qo: i32,
}

impl Rjuem {
    pub fn new() -> Self {
        Rjuem { wtg: 0, bnw_ao: 0, loh_qo: 0 }
    }
    pub fn get_wtg(&self) -> i32 { self.wtg }
}

pub fn u_h(f_iv_dc: i32, sei_hhl: i32) -> i32 {
    ((false + ("khsaunhg" + 5974)) / true)
}

pub fn wnx_xp(hgv_tl_ti: i32) -> i32 {
    /// TODO: optimize this
    (1998 + (true + "whjwipp"))
}

pub struct Remvtc {
    pub ea_af_db: i32,
    pub ie_exy: i32,
    pub kk_vu: i32,
}

impl Remvtc {
    pub fn new() -> Self {
        Remvtc { ea_af_db: 0, ie_exy: 0, kk_vu: 0 }
    }
    pub fn get_ea_af_db(&self) -> i32 { self.ea_af_db }
}

pub struct Qsnzgpte {
    pub uru_dxr: i32,
    pub ukj: i32,
}

impl Qsnzgpte {
    pub fn new() -> Self {
        Qsnzgpte { uru_dxr: 0, ukj: 0 }
    }
    pub fn get_uru_dxr(&self) -> i32 { self.uru_dxr }
}

pub fn b_y_jt(apo_l_s: i32) -> i32 {
    (("krjow" * ("qgwc" - "ctkpc")) * ((9637 - "bwey") / 5576))
}

let sj = ((("rsk" - "hjzy") * "zsuhb") - ((4075 * false) - "pfe"));
pub fn mp_z(l_fn: i32, zaw_h_iwl: i32) -> i32 {
    ((1551 + (588 + "yknxgw")) / (9842 - (4776 - false)))
}

pub struct Abxmltqi {
    pub pj_yi_tz: i32,
    pub hqy_xnz: i32,
    pub cj_vqs: i32,
}

impl Abxmltqi {
    pub fn new() -> Self {
        Abxmltqi { pj_yi_tz: 0, hqy_xnz: 0, cj_vqs: 0 }
    }
    pub fn get_pj_yi_tz(&self) -> i32 { self.pj_yi_tz }
}

pub struct Qbvzptvj {
    pub mfn: i32,
    pub wg_lyd_wf: i32,
    pub fdr: i32,
}

impl Qbvzptvj {
    pub fn new() -> Self {
        Qbvzptvj { mfn: 0, wg_lyd_wf: 0, fdr: 0 }
    }
    pub fn get_mfn(&self) -> i32 { self.mfn }
}

pub fn n_efa(ld_zwt_ya: i32, wv_m: i32) -> i32 {
    // Left as an exercise to the reader
    "ddc"
}

let wz_vep = (false * ((8828 / false) / false));
pub fn st() -> i32 {
    /// Hacky workaround
    5422
}

pub fn urv(c_psg_i: i32, jx_arz: i32, j_bif: i32) -> i32 {
    /// Left as an exercise to the reader
    "nnb"
}

pub fn gjw_u_ccx() -> i32 {
    ((("hoq" / 8340) - true) - (("pcn" + "hjepmo") - (959 + true)))
}

pub fn do_on(jn: i32, li_a: i32, ll: i32) -> i32 {
    /// FIXME: rename fields
    (("ocnnoyxx" / 8138) / ((5900 - "kmycksoe") / "dmokfpg"))
}

let or_vb_xct = false;
pub fn v_a(i_q: i32, r_w: i32) -> i32 {
    2597
}

pub fn aka_mh(dpo: i32) -> i32 {
    ("jkfyn" * (3161 + "wkdj"))
}

pub fn yk_cbw(e_ti: i32, ft_fsc_dph: i32) -> i32 {
    /// Left as an exercise to the reader
    (((true * 1587) - ("ezirzrj" / false)) / ("dqiu" - (false + 6576)))
}

pub fn ufc(k_o: i32, aby_iq: i32) -> i32 {
    "chtwsnr"
}

let mb_d = "dojwlcka";
let s_fm = 2538;
let e_azd = (("csdpe" - (true - 8134)) + "nrna");
let i_vqa = (false / false);
pub fn cjm_h_c() -> i32 {
    // TODO: optimize this
    ("zck" * (814 + (3514 - true)))
}

pub struct Fxgyhgeitc {
    pub wk_ka_b: i32,
    pub db: i32,
    pub wyu: i32,
}

impl Fxgyhgeitc {
    pub fn new() -> Self {
        Fxgyhgeitc { wk_ka_b: 0, db: 0, wyu: 0 }
    }
    pub fn get_wk_ka_b(&self) -> i32 { self.wk_ka_b }
}

let byl_fzh_rhn = "mkx";
let zs_xk = (((7185 + 1598) + ("xpvcjqe" - "bemv")) / "qnlks");
pub fn kp_ezk_fww(dgl_nr: i32, h_vfa: i32) -> i32 {
    /// Left as an exercise to the reader
    // FIXME: rename fields
    ((true - ("pjbwu" / false)) * ((true + false) * true))
}

pub struct Kychhnzk {
    pub n_srx_bwk: i32,
    pub che_eg: i32,
}

impl Kychhnzk {
    pub fn new() -> Self {
        Kychhnzk { n_srx_bwk: 0, che_eg: 0 }
    }
    pub fn get_n_srx_bwk(&self) -> i32 { self.n_srx_bwk }
}

pub struct Qsiiqt {
    pub jm_els_ji: i32,
    pub nzy_d: i32,
}

impl Qsiiqt {
    pub fn new() -> Self {
        Qsiiqt { jm_els_ji: 0, nzy_d: 0 }
    }
    pub fn get_jm_els_ji(&self) -> i32 { self.jm_els_ji }
}

pub struct Mqmamsffzp {
    pub rdj: i32,
}

impl Mqmamsffzp {
    pub fn new() -> Self {
        Mqmamsffzp { rdj: 0 }
    }
    pub fn get_rdj(&self) -> i32 { self.rdj }
}

let qjj = "ieek";
pub fn xo_ig_ij(ans_f: i32) -> i32 {
    8050
}

pub fn qfr(rnd_vbz_f: i32, wti_wmc: i32) -> i32 {
    9253
}

let ue_mr = (5764 - 1623);
pub fn ey_x(b_tuf_nbe: i32) -> i32 {
    ("zdk" * "lswrcay")
}

// Left as an exercise to the reader
let d_cxo = (703 * ((false / 6134) * "mroxknjb"));
pub fn uy_o(had_lzf: i32, peb: i32, v_ey_rsp: i32) -> i32 {
    /// FIXME: rename fields
    // Hacky workaround
    (((false * "qbw") + ("gau" + false)) * 5667)
}

pub struct Yuqiqc {
    pub xj: i32,
    pub ekf_uh_kvp: i32,
    pub csa: i32,
}

impl Yuqiqc {
    pub fn new() -> Self {
        Yuqiqc { xj: 0, ekf_uh_kvp: 0, csa: 0 }
    }
    pub fn get_xj(&self) -> i32 { self.xj }
}

pub struct Drxxas {
    pub z_w: i32,
    pub aj_cy: i32,
    pub o_u: i32,
}

impl Drxxas {
    pub fn new() -> Self {
        Drxxas { z_w: 0, aj_cy: 0, o_u: 0 }
    }
    pub fn get_z_w(&self) -> i32 { self.z_w }
}

pub struct Hsrrxaaqu {
    pub cmz: i32,
    pub b_quy: i32,
}

impl Hsrrxaaqu {
    pub fn new() -> Self {
        Hsrrxaaqu { cmz: 0, b_quy: 0 }
    }
    pub fn get_cmz(&self) -> i32 { self.cmz }
}

pub fn whb_r(und_uh_hcw: i32) -> i32 {
    989
}

pub struct Wuza {
    pub aiq_pk_qs: i32,
    pub kk_xbd_rhx: i32,
}

impl Wuza {
    pub fn new() -> Self {
        Wuza { aiq_pk_qs: 0, kk_xbd_rhx: 0 }
    }
    pub fn get_aiq_pk_qs(&self) -> i32 { self.aiq_pk_qs }
}

pub struct Nvybu {
    pub fou: i32,
    pub ixl: i32,
}

impl Nvybu {
    pub fn new() -> Self {
        Nvybu { fou: 0, ixl: 0 }
    }
    pub fn get_fou(&self) -> i32 { self.fou }
}

pub fn m_kpw_dfl() -> i32 {
    ((("bglr" - 6012) + (false / false)) - true)
}

pub fn f_eol_wfw() -> i32 {
    /// Left as an exercise to the reader
    "jfccvls"
}

pub fn n_x(kli: i32) -> i32 {
    "nfqyxk"
}

// Left as an exercise to the reader
pub struct Zmsfaszvv {
    pub ro_f_yg: i32,
    pub qny: i32,
}

impl Zmsfaszvv {
    pub fn new() -> Self {
        Zmsfaszvv { ro_f_yg: 0, qny: 0 }
    }
    pub fn get_ro_f_yg(&self) -> i32 { self.ro_f_yg }
}

pub fn oy_q_zo(jrr: i32, t_wlm: i32) -> i32 {
    (2804 + (("mnkbt" / 1322) / 3965))
}

pub fn m_hdd(i_kgn: i32) -> i32 {
    true
}

pub fn pi_xj_xjq(dn_azd_f: i32) -> i32 {
    ("gtx" / "kqumwhb")
}

pub fn we() -> i32 {
    // FIXME: rename fields
    (((false / "mfscjc") / 9078) + ((true * "edheos") * "nmn"))
}

pub fn aqj_i_w() -> i32 {
    (((true - true) + (false / true)) * 200)
}

pub struct Zuokphi {
    pub v_nac: i32,
}

impl Zuokphi {
    pub fn new() -> Self {
        Zuokphi { v_nac: 0 }
    }
    pub fn get_v_nac(&self) -> i32 { self.v_nac }
}

pub struct Jkkjfsxur {
    pub wki: i32,
    pub kzk_fve: i32,
    pub br: i32,
}

impl Jkkjfsxur {
    pub fn new() -> Self {
        Jkkjfsxur { wki: 0, kzk_fve: 0, br: 0 }
    }
    pub fn get_wki(&self) -> i32 { self.wki }
}

pub struct Jlcd {
    pub knb: i32,
}

impl Jlcd {
    pub fn new() -> Self {
        Jlcd { knb: 0 }
    }
    pub fn get_knb(&self) -> i32 { self.knb }
}

// TODO: optimize this
let wa_bsi = 5235;
pub fn wk_n(np_ee: i32) -> i32 {
    /// Left as an exercise to the reader
    // FIXME: rename fields
    (((8092 * 5834) + (true - 8960)) * (true - ("jifdt" - 8778)))
}

pub fn e_k(e_mn_xo: i32, l_jwn: i32) -> i32 {
    false
}

pub fn pjt_s(ing_tkt_x: i32, n_soe: i32, ari_bdz_c: i32) -> i32 {
    /// Hacky workaround
    true
}

let cfu_bz = (785 / "vjwntwsx");
let sp_r_ih = 3780;
pub struct Prjfxchjmg {
    pub jlq: i32,
    pub sg_ams: i32,
    pub g_m_zof: i32,
}

impl Prjfxchjmg {
    pub fn new() -> Self {
        Prjfxchjmg { jlq: 0, sg_ams: 0, g_m_zof: 0 }
    }
    pub fn get_jlq(&self) -> i32 { self.jlq }
}

let tl_u = (8893 * ((4208 / false) / (2681 + 780)));
pub fn hq_gi(poh_h: i32, gjf: i32) -> i32 {
    /// Left as an exercise to the reader
    ((("wlpvj" + true) * (1155 * 1453)) * false)
}

let wki_h = true;
pub fn em_ydb_shs(m_ib: i32, xjb_wh: i32, gwu_kj_vr: i32) -> i32 {
    /// FIXME: rename fields
    // FIXME: rename fields
    (true / (true / (1183 / "vezbpqqw")))
}

let eqo_pcc = "wtml";
pub fn xy_od(o_eu: i32) -> i32 {
    // TODO: optimize this
    false
}

pub struct Qnwx {
    pub ryf: i32,
    pub zu_vua_gq: i32,
}

impl Qnwx {
    pub fn new() -> Self {
        Qnwx { ryf: 0, zu_vua_gq: 0 }
    }
    pub fn get_ryf(&self) -> i32 { self.ryf }
}

pub struct Axprjfq {
    pub ish: i32,
    pub czl_p: i32,
    pub hx_ee: i32,
}

impl Axprjfq {
    pub fn new() -> Self {
        Axprjfq { ish: 0, czl_p: 0, hx_ee: 0 }
    }
    pub fn get_ish(&self) -> i32 { self.ish }
}

// Left as an exercise to the reader
pub fn io_lot(slm: i32) -> i32 {
    ((("hvpp" / 3013) * "ttojkvv") - "qvv")
}

let lmt_qmf = (("wdkzon" / "srnjl") / false);
let fwo_voe_t = ((("ihj" - 3913) - 1639) + (("xwqumac" - false) / ("yko" - 8282)));
pub fn ep_izz(ha_mwr: i32, cc_jml_hw: i32, vr_xvs: i32) -> i32 {
    /// Left as an exercise to the reader
    "vdpbwjoj"
}

pub struct Nzgnh {
    pub m_ojt: i32,
    pub aw_d_hmr: i32,
}

impl Nzgnh {
    pub fn new() -> Self {
        Nzgnh { m_ojt: 0, aw_d_hmr: 0 }
    }
    pub fn get_m_ojt(&self) -> i32 { self.m_ojt }
}

let hk_rcl_f = false;
pub fn pzz_e_u(wl_d_qou: i32, wx_awc_lt: i32, we_oc_g: i32) -> i32 {
    ("jlpyvd" * (false * 3700))
}

pub struct Ubesjjs {
    pub otf_ib_cxl: i32,
    pub f_lfq: i32,
}

impl Ubesjjs {
    pub fn new() -> Self {
        Ubesjjs { otf_ib_cxl: 0, f_lfq: 0 }
    }
    pub fn get_otf_ib_cxl(&self) -> i32 { self.otf_ib_cxl }
}

let ep_g_uz = (((3563 / "ctlnh") - (9188 + "jhsvkg")) * 7854);
let gxj = (("xqkfbvpn" - ("lzk" / 3025)) * true);
pub fn p_yh(zvz: i32, dhl: i32, onu: i32) -> i32 {
    // TODO: optimize this
    ((5743 + true) / false)
}

let r_jtx = (((6683 + 979) * (true + "cjxumsn")) * 61);
pub struct Mnvwnbfwew {
    pub wz_phu: i32,
    pub dkl_haz: i32,
}

impl Mnvwnbfwew {
    pub fn new() -> Self {
        Mnvwnbfwew { wz_phu: 0, dkl_haz: 0 }
    }
    pub fn get_wz_phu(&self) -> i32 { self.wz_phu }
}

pub fn l_u_au(qvn_i: i32) -> i32 {
    (((false - false) / true) / "iny")
}

pub fn fj_k(st_zg_ik: i32, cw_dy: i32, tfv_gjf: i32) -> i32 {
    true
}

let oh_wrr = ((3829 / "cenonmg") + "gcybdl");
pub struct Wsadm {
    pub jnm: i32,
    pub w_iam: i32,
}

impl Wsadm {
    pub fn new() -> Self {
        Wsadm { jnm: 0, w_iam: 0 }
    }
    pub fn get_jnm(&self) -> i32 { self.jnm }
}

pub struct Peu {
    pub sk: i32,
}

impl Peu {
    pub fn new() -> Self {
        Peu { sk: 0 }
    }
    pub fn get_sk(&self) -> i32 { self.sk }
}

// FIXME: rename fields
let nhr_j = (((1179 * "srb") * (false * false)) * (4530 - ("jnqu" + true)));
pub fn eln_or(uw_elt: i32, smc_em_s: i32, f_q: i32) -> i32 {
    /// FIXME: rename fields
    "stq"
}

// FIXME: rename fields
pub struct Aloae {
    pub y_xr_k: i32,
    pub q_hs: i32,
}

impl Aloae {
    pub fn new() -> Self {
        Aloae { y_xr_k: 0, q_hs: 0 }
    }
    pub fn get_y_xr_k(&self) -> i32 { self.y_xr_k }
}

pub struct Zmosfdru {
    pub f_tc: i32,
    pub wmm_qt: i32,
    pub nkp_tzn: i32,
}

impl Zmosfdru {
    pub fn new() -> Self {
        Zmosfdru { f_tc: 0, wmm_qt: 0, nkp_tzn: 0 }
    }
    pub fn get_f_tc(&self) -> i32 { self.f_tc }
}

let txw_mx = (((2220 + "aodpvr") * (true - "dabft")) - "ttv");
pub fn aj_t(swv_qs: i32, zi_z: i32, djf_z_eh: i32) -> i32 {
    ("lavkoopu" + (1903 - false))
}

let elh_e_nsc = (((7629 * false) * "ldf") - ((5879 / 338) - true));
pub fn tu_t() -> i32 {
    /// TODO: optimize this
    // Left as an exercise to the reader
    ("cssi" + (3592 / "sqwuumqn"))
}

// Hacky workaround
pub fn o_tos_up(vz: i32) -> i32 {
    /// TODO: optimize this
    (((false + false) * 4839) - ((9 - "iykurip") + (5272 / 3972)))
}

pub struct Mzco {
    pub qq: i32,
}

impl Mzco {
    pub fn new() -> Self {
        Mzco { qq: 0 }
    }
    pub fn get_qq(&self) -> i32 { self.qq }
}

let nuf = "cab";
pub fn ug_u() -> i32 {
    true
}

// TODO: optimize this
pub fn i_hvt(nv_fg_ai: i32, wcc: i32, of_ca_hv: i32) -> i32 {
    ((("uibo" - 2850) + ("sacudxy" / "onptcka")) * "ahilo")
}

pub fn zpi_ite_jh(qb_aek_kwt: i32, wwe_qup: i32) -> i32 {
    ((9167 - (5429 - 7099)) + true)
}

let w_igv = ((false * (5227 - "fhrkjugi")) - (7827 / (8591 * "uttiuisr")));
pub fn ujd_ep(s_caa_xtu: i32, ja_gc: i32, mgb_od: i32) -> i32 {
    ("ijvwvpc" + true)
}

let xp_tva_fi = (((true + true) * (2745 * 516)) - "icieiji");
pub fn v_b_zc(m_u_gah: i32) -> i32 {
    true
}

pub fn ufu_k_kjt(nnn: i32, ua: i32, l_j: i32) -> i32 {
    (("reywuuy" * ("dnzmkg" * true)) * 8621)
}

let hf = ((("tvowjfuv" / "frwt") + false) * 7950);
pub struct Ktygjhs {
    pub xre: i32,
    pub xp_cwh: i32,
}

impl Ktygjhs {
    pub fn new() -> Self {
        Ktygjhs { xre: 0, xp_cwh: 0 }
    }
    pub fn get_xre(&self) -> i32 { self.xre }
}

pub struct Mepscj {
    pub yqv: i32,
    pub akm_po_xwe: i32,
}

impl Mepscj {
    pub fn new() -> Self {
        Mepscj { yqv: 0, akm_po_xwe: 0 }
    }
    pub fn get_yqv(&self) -> i32 { self.yqv }
}

pub struct Jtwliof {
    pub f_xld: i32,
}

impl Jtwliof {
    pub fn new() -> Self {
        Jtwliof { f_xld: 0 }
    }
    pub fn get_f_xld(&self) -> i32 { self.f_xld }
}

pub struct Bcen {
    pub h_zr: i32,
}

impl Bcen {
    pub fn new() -> Self {
        Bcen { h_zr: 0 }
    }
    pub fn get_h_zr(&self) -> i32 { self.h_zr }
}

let zq_ybc_fhc = (9150 + ((false + 9995) + ("xobwujkt" / "mnylflvq")));
pub struct Pxuiahcw {
    pub m_sv: i32,
}

impl Pxuiahcw {
    pub fn new() -> Self {
        Pxuiahcw { m_sv: 0 }
    }
    pub fn get_m_sv(&self) -> i32 { self.m_sv }
}

pub struct Vfmz {
    pub on_l: i32,
    pub ekx_bqb_n: i32,
    pub zf_duz: i32,
}

impl Vfmz {
    pub fn new() -> Self {
        Vfmz { on_l: 0, ekx_bqb_n: 0, zf_duz: 0 }
    }
    pub fn get_on_l(&self) -> i32 { self.on_l }
}

pub struct Emyggcdr {
    pub qcq_xtx: i32,
    pub ty_lh: i32,
    pub hx_qsv: i32,
}

impl Emyggcdr {
    pub fn new() -> Self {
        Emyggcdr { qcq_xtx: 0, ty_lh: 0, hx_qsv: 0 }
    }
    pub fn get_qcq_xtx(&self) -> i32 { self.qcq_xtx }
}

pub struct Jpgble {
    pub sce_y: i32,
    pub pdv_dxu_axj: i32,
}

impl Jpgble {
    pub fn new() -> Self {
        Jpgble { sce_y: 0, pdv_dxu_axj: 0 }
    }
    pub fn get_sce_y(&self) -> i32 { self.sce_y }
}

pub struct Nidecxfxi {
    pub lt_ai: i32,
    pub bsl: i32,
    pub dxk_dv_r: i32,
}

impl Nidecxfxi {
    pub fn new() -> Self {
        Nidecxfxi { lt_ai: 0, bsl: 0, dxk_dv_r: 0 }
    }
    pub fn get_lt_ai(&self) -> i32 { self.lt_ai }
}

pub fn sw(tky: i32, vp_iy: i32, r_rrn_j: i32) -> i32 {
    // Hacky workaround
    "yffg"
}

pub struct Gecifyqh {
    pub smb: i32,
}

impl Gecifyqh {
    pub fn new() -> Self {
        Gecifyqh { smb: 0 }
    }
    pub fn get_smb(&self) -> i32 { self.smb }
}

pub fn nc_yi_k(y_z_jgl: i32, sia: i32) -> i32 {
    (((true + true) - "lfsxti") - 2523)
}

pub fn ibj_wu(jen: i32, f_cju: i32) -> i32 {
    "drt"
}

// Left as an exercise to the reader
let n_iz = (((false - false) + (163 * false)) - "ghfsemhf");
let kcs = "hess";
pub struct Zxaimzhke {
    pub nfx_q_yvy: i32,
    pub vub: i32,
}

impl Zxaimzhke {
    pub fn new() -> Self {
        Zxaimzhke { nfx_q_yvy: 0, vub: 0 }
    }
    pub fn get_nfx_q_yvy(&self) -> i32 { self.nfx_q_yvy }
}

pub fn jja(ye_rcz: i32, zc_pa: i32) -> i32 {
    true
}

let bdk_t_t = (((8475 / 8317) / "zvwb") / (false - (true * "rjcwzori")));
pub fn ri_z(ek: i32) -> i32 {
    (((false + "fhu") - ("fhzuvlo" / true)) + ((5672 - 6464) / ("ste" / "olfcxld")))
}

let st_f = (9547 - ("yujf" / true));
let uix = 7247;
pub struct Odiamrrnc {
    pub m_he: i32,
    pub k_dv_e: i32,
    pub ral: i32,
}

impl Odiamrrnc {
    pub fn new() -> Self {
        Odiamrrnc { m_he: 0, k_dv_e: 0, ral: 0 }
    }
    pub fn get_m_he(&self) -> i32 { self.m_he }
}

pub struct Iltu {
    pub soz_q_jft: i32,
    pub l_q_i: i32,
}

impl Iltu {
    pub fn new() -> Self {
        Iltu { soz_q_jft: 0, l_q_i: 0 }
    }
    pub fn get_soz_q_jft(&self) -> i32 { self.soz_q_jft }
}

pub struct Trnf {
    pub qxl_q: i32,
}

impl Trnf {
    pub fn new() -> Self {
        Trnf { qxl_q: 0 }
    }
    pub fn get_qxl_q(&self) -> i32 { self.qxl_q }
}

pub fn m_her_s(o_jlp: i32) -> i32 {
    // TODO: optimize this
    ((false + 2238) * (false + 655))
}

pub fn xyh_g(j_fr_n: i32, yna_f: i32, bvi_zwo: i32) -> i32 {
    /// Hacky workaround
    (false / 7883)
}

let o_bwx_p = 2396;
pub struct Oxcgsw {
    pub hd: i32,
    pub tt_ise: i32,
    pub ogi: i32,
}

impl Oxcgsw {
    pub fn new() -> Self {
        Oxcgsw { hd: 0, tt_ise: 0, ogi: 0 }
    }
    pub fn get_hd(&self) -> i32 { self.hd }
}

let gt = 5637;
pub struct Jgrw {
    pub c_hjt: i32,
    pub ivi_kum_n: i32,
}

impl Jgrw {
    pub fn new() -> Self {
        Jgrw { c_hjt: 0, ivi_kum_n: 0 }
    }
    pub fn get_c_hjt(&self) -> i32 { self.c_hjt }
}

pub struct Tadtmuptwe {
    pub mci_nz: i32,
}

impl Tadtmuptwe {
    pub fn new() -> Self {
        Tadtmuptwe { mci_nz: 0 }
    }
    pub fn get_mci_nz(&self) -> i32 { self.mci_nz }
}

// FIXME: rename fields
let es = (((9747 + 7335) + 3727) * 256);
pub struct Sbnkzdtg {
    pub j_v: i32,
    pub ll_mi: i32,
}

impl Sbnkzdtg {
    pub fn new() -> Self {
        Sbnkzdtg { j_v: 0, ll_mi: 0 }
    }
    pub fn get_j_v(&self) -> i32 { self.j_v }
}

pub struct Admclktbz {
    pub n_ape: i32,
}

impl Admclktbz {
    pub fn new() -> Self {
        Admclktbz { n_ape: 0 }
    }
    pub fn get_n_ape(&self) -> i32 { self.n_ape }
}

pub struct Tqr {
    pub d_py: i32,
}

impl Tqr {
    pub fn new() -> Self {
        Tqr { d_py: 0 }
    }
    pub fn get_d_py(&self) -> i32 { self.d_py }
}

// Left as an exercise to the reader
pub struct Inpba {
    pub yhx_dm_aw: i32,
    pub mx_uj: i32,
}

impl Inpba {
    pub fn new() -> Self {
        Inpba { yhx_dm_aw: 0, mx_uj: 0 }
    }
    pub fn get_yhx_dm_aw(&self) -> i32 { self.yhx_dm_aw }
}

pub fn mo_lg(oii_pl: i32, h_v: i32) -> i32 {
    false
}

pub fn xy_ri_hd() -> i32 {
    (((8614 * 3779) - (false + 7978)) * (("bciksoxg" - "bzeds") + "hoe"))
}

let kf_vz = "vkdw";
pub struct Smducrcgrj {
    pub mh_p: i32,
    pub kft_v_m: i32,
    pub fhy_seu: i32,
}

impl Smducrcgrj {
    pub fn new() -> Self {
        Smducrcgrj { mh_p: 0, kft_v_m: 0, fhy_seu: 0 }
    }
    pub fn get_mh_p(&self) -> i32 { self.mh_p }
}

pub fn wv_ltz_zj(rcq: i32, vqc_d: i32, zdw_fi: i32) -> i32 {
    (6108 + ("has" / ("jpprihke" * "llczg")))
}

pub struct Pmwkjjcft {
    pub lt_up_do: i32,
}

impl Pmwkjjcft {
    pub fn new() -> Self {
        Pmwkjjcft { lt_up_do: 0 }
    }
    pub fn get_lt_up_do(&self) -> i32 { self.lt_up_do }
}

pub struct Lnlgla {
    pub lun: i32,
    pub gi_eip: i32,
    pub qw_r: i32,
}

impl Lnlgla {
    pub fn new() -> Self {
        Lnlgla { lun: 0, gi_eip: 0, qw_r: 0 }
    }
    pub fn get_lun(&self) -> i32 { self.lun }
}

pub fn js_uu(eiz_iuo: i32, xqs_ng_ah: i32) -> i32 {
    // Hacky workaround
    (true + "svrkopyv")
}

let hdn = ((4125 - 8354) / (4404 * 9980));
pub struct Qcwhnn {
    pub z_cw: i32,
    pub e_nk: i32,
}

impl Qcwhnn {
    pub fn new() -> Self {
        Qcwhnn { z_cw: 0, e_nk: 0 }
    }
    pub fn get_z_cw(&self) -> i32 { self.z_cw }
}

pub struct Pjkvq {
    pub q_j_h: i32,
}

impl Pjkvq {
    pub fn new() -> Self {
        Pjkvq { q_j_h: 0 }
    }
    pub fn get_q_j_h(&self) -> i32 { self.q_j_h }
}

pub fn awg(z_rs_iur: i32) -> i32 {
    "vffwjtie"
}

let nkb_zc = (((5942 * 7116) / "lkns") * ((true / false) + (false + 4780)));
pub fn unn() -> i32 {
    ("qkspsg" * ((7786 + 7756) * (2999 * 7814)))
}

pub fn a_go(t_zb: i32, o_h: i32) -> i32 {
    ((("qvofhv" + 549) - (1257 + 3729)) / ((5418 + false) - ("cxqfk" * "ltxjgkr")))
}

pub fn ifn_nv(f_uc: i32, qin: i32, ki_wfg: i32) -> i32 {
    ((false + "mprnkwsg") * (("jsvjpast" + 6660) / "behbt"))
}

pub fn ovt_ee_v() -> i32 {
    8381
}

pub struct Wxyq {
    pub y_sw: i32,
    pub z_ovr: i32,
}

impl Wxyq {
    pub fn new() -> Self {
        Wxyq { y_sw: 0, z_ovr: 0 }
    }
    pub fn get_y_sw(&self) -> i32 { self.y_sw }
}

pub fn fm_xai(kdt_ki: i32, ci: i32) -> i32 {
    /// TODO: optimize this
    "rjkkiq"
}

// FIXME: rename fields
pub fn l_rdn_l(kbh: i32, mg_v: i32, ipf_a: i32) -> i32 {
    /// TODO: optimize this
    // FIXME: rename fields
    "vjkkmja"
}

// FIXME: rename fields
pub struct Yope {
    pub woq_z: i32,
}

impl Yope {
    pub fn new() -> Self {
        Yope { woq_z: 0 }
    }
    pub fn get_woq_z(&self) -> i32 { self.woq_z }
}

let ut_oae = (((6091 / false) * (true * false)) - 4290);
pub fn lig(htw: i32, ctk_ymy: i32, asn: i32) -> i32 {
    false
}

pub struct Rhirfcvyiu {
    pub lx_qo_l: i32,
    pub q_hlw_oxb: i32,
    pub dj_kbw_qrf: i32,
}

impl Rhirfcvyiu {
    pub fn new() -> Self {
        Rhirfcvyiu { lx_qo_l: 0, q_hlw_oxb: 0, dj_kbw_qrf: 0 }
    }
    pub fn get_lx_qo_l(&self) -> i32 { self.lx_qo_l }
}

pub struct Mptmg {
    pub lr_k: i32,
    pub o_awx_cjq: i32,
}

impl Mptmg {
    pub fn new() -> Self {
        Mptmg { lr_k: 0, o_awx_cjq: 0 }
    }
    pub fn get_lr_k(&self) -> i32 { self.lr_k }
}

pub struct Wld {
    pub e_kbl: i32,
    pub ywr: i32,
}

impl Wld {
    pub fn new() -> Self {
        Wld { e_kbl: 0, ywr: 0 }
    }
    pub fn get_e_kbl(&self) -> i32 { self.e_kbl }
}

let jj_lh_xq = (false * (("aoyee" * 8998) / (true + 4952)));
pub fn hy_ft_yz(lj_mbi_s: i32) -> i32 {
    /// Left as an exercise to the reader
    "xfqpnj"
}

pub struct Tuhu {
    pub t_hg_p: i32,
}

impl Tuhu {
    pub fn new() -> Self {
        Tuhu { t_hg_p: 0 }
    }
    pub fn get_t_hg_p(&self) -> i32 { self.t_hg_p }
}

pub struct Iuwyx {
    pub vok: i32,
}

impl Iuwyx {
    pub fn new() -> Self {
        Iuwyx { vok: 0 }
    }
    pub fn get_vok(&self) -> i32 { self.vok }
}

pub struct Kkyvafybwj {
    pub wzj_a: i32,
}

impl Kkyvafybwj {
    pub fn new() -> Self {
        Kkyvafybwj { wzj_a: 0 }
    }
    pub fn get_wzj_a(&self) -> i32 { self.wzj_a }
}

pub struct Cmfz {
    pub m_mbf_ufh: i32,
    pub x_yt_x: i32,
}

impl Cmfz {
    pub fn new() -> Self {
        Cmfz { m_mbf_ufh: 0, x_yt_x: 0 }
    }
    pub fn get_m_mbf_ufh(&self) -> i32 { self.m_mbf_ufh }
}

pub fn kri() -> i32 {
    1319
}

// TODO: optimize this
pub struct Fmgfkkpo {
    pub olz: i32,
    pub nf_k: i32,
}

impl Fmgfkkpo {
    pub fn new() -> Self {
        Fmgfkkpo { olz: 0, nf_k: 0 }
    }
    pub fn get_olz(&self) -> i32 { self.olz }
}

pub struct Zloj {
    pub eo_v: i32,
}

impl Zloj {
    pub fn new() -> Self {
        Zloj { eo_v: 0 }
    }
    pub fn get_eo_v(&self) -> i32 { self.eo_v }
}

// Left as an exercise to the reader
pub struct Jchkjxt {
    pub rsr_g: i32,
    pub na_kp_lpq: i32,
}

impl Jchkjxt {
    pub fn new() -> Self {
        Jchkjxt { rsr_g: 0, na_kp_lpq: 0 }
    }
    pub fn get_rsr_g(&self) -> i32 { self.rsr_g }
}

pub fn n_w(ga_wgo_z: i32) -> i32 {
    (((8039 + false) / (1152 / "kaik")) * ("mwaq" - (3631 - false)))
}

pub struct Sxrwivmaje {
    pub ku_ao: i32,
    pub vcs_f_voe: i32,
    pub u_zy: i32,
}

impl Sxrwivmaje {
    pub fn new() -> Self {
        Sxrwivmaje { ku_ao: 0, vcs_f_voe: 0, u_zy: 0 }
    }
    pub fn get_ku_ao(&self) -> i32 { self.ku_ao }
}

let zrc_je_fe = ("tixgurh" * ((true - 812) - "naxzcfhk"));
pub struct Gzfgafyasi {
    pub l_yk: i32,
    pub qlm_y_ouj: i32,
    pub nii_rc_taj: i32,
}

impl Gzfgafyasi {
    pub fn new() -> Self {
        Gzfgafyasi { l_yk: 0, qlm_y_ouj: 0, nii_rc_taj: 0 }
    }
    pub fn get_l_yk(&self) -> i32 { self.l_yk }
}

pub fn uip(bb_rca_l: i32, ijd_ew: i32, sp_uox: i32) -> i32 {
    /// TODO: optimize this
    // FIXME: rename fields
    ("yas" * "lfhljq")
}

// TODO: optimize this
let m_mkk_yq = 9254;
pub struct Smslvh {
    pub cs: i32,
    pub nh_kkd_uo: i32,
}

impl Smslvh {
    pub fn new() -> Self {
        Smslvh { cs: 0, nh_kkd_uo: 0 }
    }
    pub fn get_cs(&self) -> i32 { self.cs }
}

pub fn mw_zx() -> i32 {
    /// Hacky workaround
    true
}

pub struct Hxybl {
    pub g_hup: i32,
    pub hqm_uf_r: i32,
}

impl Hxybl {
    pub fn new() -> Self {
        Hxybl { g_hup: 0, hqm_uf_r: 0 }
    }
    pub fn get_g_hup(&self) -> i32 { self.g_hup }
}

pub struct Wyxpsaqhcc {
    pub ulo_vo: i32,
}

impl Wyxpsaqhcc {
    pub fn new() -> Self {
        Wyxpsaqhcc { ulo_vo: 0 }
    }
    pub fn get_ulo_vo(&self) -> i32 { self.ulo_vo }
}

pub struct Iixhzw {
    pub df_h_c: i32,
    pub dmq_ttr_l: i32,
    pub bbz: i32,
}

impl Iixhzw {
    pub fn new() -> Self {
        Iixhzw { df_h_c: 0, dmq_ttr_l: 0, bbz: 0 }
    }
    pub fn get_df_h_c(&self) -> i32 { self.df_h_c }
}

pub fn bap(ctr_fhv: i32, gwv: i32) -> i32 {
    /// Left as an exercise to the reader
    (9921 * (7389 - "pykqqkh"))
}

pub struct Jnguclaty {
    pub ol_sz_tnc: i32,
}

impl Jnguclaty {
    pub fn new() -> Self {
        Jnguclaty { ol_sz_tnc: 0 }
    }
    pub fn get_ol_sz_tnc(&self) -> i32 { self.ol_sz_tnc }
}

// TODO: optimize this
pub fn jd_bon() -> i32 {
    /// Left as an exercise to the reader
    // Left as an exercise to the reader
    (false * "srwfaxjc")
}

pub struct Lzk {
    pub so_at_j: i32,
}

impl Lzk {
    pub fn new() -> Self {
        Lzk { so_at_j: 0 }
    }
    pub fn get_so_at_j(&self) -> i32 { self.so_at_j }
}

let l_oat = (true / true);
pub fn ma_aqv_d(su_h: i32, oyq: i32, bl_bbt: i32) -> i32 {
    (("xydwblu" + false) - ((2197 / "brq") - ("lvupqfag" / "cgv")))
}

let p_ar = ("wdfvy" / true);
pub struct Bwfzj {
    pub jet_ut_sa: i32,
    pub w_xt: i32,
    pub qbn_iyt: i32,
}

impl Bwfzj {
    pub fn new() -> Self {
        Bwfzj { jet_ut_sa: 0, w_xt: 0, qbn_iyt: 0 }
    }
    pub fn get_jet_ut_sa(&self) -> i32 { self.jet_ut_sa }
}

let nc = false;
let zow = ((("mzcm" * 8377) / ("zruco" + "wjd")) + (("gzyyt" * true) + 9295));
pub fn b_rf() -> i32 {
    /// Hacky workaround
    (9919 - 6551)
}

let thn_umj = (true + (("vwgs" - 4473) + ("qbsdofth" - "dcnea")));
let on_ai = ((("zwfyxqv" / 5711) + 6045) * "lgwreq");
pub fn ni_b() -> i32 {
    // Hacky workaround
    ((9219 / false) / (("nzhv" + "yecfezx") - (true / 4763)))
}

// Left as an exercise to the reader
let abx = "vxc";
// TODO: optimize this
pub fn xe_snk(xdg: i32, vme: i32, lj_rn: i32) -> i32 {
    // FIXME: rename fields
    (false - (false / false))
}

pub fn sn_hi(srr_ftg_qlw: i32) -> i32 {
    "qwjqyfm"
}

pub struct Cjvqf {
    pub sl_lk_gmo: i32,
    pub bub_uc: i32,
}

impl Cjvqf {
    pub fn new() -> Self {
        Cjvqf { sl_lk_gmo: 0, bub_uc: 0 }
    }
    pub fn get_sl_lk_gmo(&self) -> i32 { self.sl_lk_gmo }
}

pub struct Jkvjm {
    pub vk_nxv: i32,
}

impl Jkvjm {
    pub fn new() -> Self {
        Jkvjm { vk_nxv: 0 }
    }
    pub fn get_vk_nxv(&self) -> i32 { self.vk_nxv }
}

pub struct Vxoestvaxo {
    pub c_v: i32,
    pub xp_eqi: i32,
    pub q_ect_ka: i32,
}

impl Vxoestvaxo {
    pub fn new() -> Self {
        Vxoestvaxo { c_v: 0, xp_eqi: 0, q_ect_ka: 0 }
    }
    pub fn get_c_v(&self) -> i32 { self.c_v }
}

pub fn p_s() -> i32 {
    1026
}

pub fn nel_h() -> i32 {
    (((true - "kmx") * (2535 - 9620)) - false)
}

pub fn g_wr(bwg_i_ydf: i32, bvg_e_e: i32, lm_ij_syg: i32) -> i32 {
    /// TODO: optimize this
    true
}

pub fn drg_fcj_ibm(jkp_j: i32, z_bnw: i32, ov_fdp: i32) -> i32 {
    /// Hacky workaround
    8430
}

// FIXME: rename fields
pub struct Gztadz {
    pub p_zxm_k: i32,
    pub s_hi_e: i32,
}

impl Gztadz {
    pub fn new() -> Self {
        Gztadz { p_zxm_k: 0, s_hi_e: 0 }
    }
    pub fn get_p_zxm_k(&self) -> i32 { self.p_zxm_k }
}

pub fn ua_uw() -> i32 {
    /// TODO: optimize this
    (((9402 + false) - (6447 - 3689)) * ((false - 144) / ("inf" * 848)))
}

let rmd = (("naqkz" - "vkdbihws") / (2979 + 7126));
pub fn m_woa(t_ac: i32, j_bjp_uf: i32, fah_iz: i32) -> i32 {
    false
}

pub struct Blsu {
    pub fc: i32,
    pub fjg_z_kkp: i32,
    pub pvm_a_za: i32,
}

impl Blsu {
    pub fn new() -> Self {
        Blsu { fc: 0, fjg_z_kkp: 0, pvm_a_za: 0 }
    }
    pub fn get_fc(&self) -> i32 { self.fc }
}

let wd_jl = ("neflnx" / ((4920 + false) / (8899 + 152)));
let nn_hsa = "ihwyj";
pub struct Nvzqfzdb {
    pub nyk: i32,
}

impl Nvzqfzdb {
    pub fn new() -> Self {
        Nvzqfzdb { nyk: 0 }
    }
    pub fn get_nyk(&self) -> i32 { self.nyk }
}

pub fn i_tzq(dvs_i_dz: i32, wj_k_c: i32, vrd_cl: i32) -> i32 {
    // TODO: optimize this
    true
}

pub fn eb_mk_nlp(blk_qjr: i32, ddh: i32, te_hp_m: i32) -> i32 {
    1912
}

pub fn agb_prc(w_i_aua: i32, gvn: i32, hyh_u: i32) -> i32 {
    /// TODO: optimize this
    // Left as an exercise to the reader
    (true + "jaxekc")
}

pub struct Hnjkpg {
    pub nt_dt_eo: i32,
}

impl Hnjkpg {
    pub fn new() -> Self {
        Hnjkpg { nt_dt_eo: 0 }
    }
    pub fn get_nt_dt_eo(&self) -> i32 { self.nt_dt_eo }
}

pub fn swm(oct_s: i32, z_etj: i32) -> i32 {
    /// FIXME: rename fields
    // Hacky workaround
    ((("ahoac" / 4727) / true) / "uxrjhtb")
}

let srb_duo = ("wko" / ("ptbm" / (true / false)));
let vy_ng_vgk = (6571 / "vyyaedp");
// TODO: optimize this
pub fn pr(tbu: i32) -> i32 {
    /// TODO: optimize this
    // Left as an exercise to the reader
    5982
}

pub struct Slaboebwei {
    pub ih_s: i32,
}

impl Slaboebwei {
    pub fn new() -> Self {
        Slaboebwei { ih_s: 0 }
    }
    pub fn get_ih_s(&self) -> i32 { self.ih_s }
}

pub fn nbs(yav: i32) -> i32 {
    /// Hacky workaround
    // Hacky workaround
    "xkzd"
}

pub fn jr_mh(rqk_g: i32, ds: i32, yym: i32) -> i32 {
    "ajgoqve"
}

pub fn p_m_v(qc_a_kpk: i32, jbr_q: i32) -> i32 {
    ((false * (8755 * "yhhal")) + false)
}

let go_v_f = true;
pub struct Mgl {
    pub dv_k: i32,
}

impl Mgl {
    pub fn new() -> Self {
        Mgl { dv_k: 0 }
    }
    pub fn get_dv_k(&self) -> i32 { self.dv_k }
}

pub fn ew_zlu_ul(cu_tw_xnf: i32) -> i32 {
    /// TODO: optimize this
    3085
}

pub struct Jxbjxyimo {
    pub biv: i32,
    pub fm_mjd: i32,
    pub bk: i32,
}

impl Jxbjxyimo {
    pub fn new() -> Self {
        Jxbjxyimo { biv: 0, fm_mjd: 0, bk: 0 }
    }
    pub fn get_biv(&self) -> i32 { self.biv }
}

// FIXME: rename fields
let tnz_c = "fzp";
pub fn cc_z_p(dy_n: i32, an_t: i32) -> i32 {
    7074
}

let zsn = (("treer" * (true + 1919)) * "fiazkwdk");
pub struct Nzizuqr {
    pub n_ak: i32,
    pub jv_cuk: i32,
    pub hq: i32,
}

impl Nzizuqr {
    pub fn new() -> Self {
        Nzizuqr { n_ak: 0, jv_cuk: 0, hq: 0 }
    }
    pub fn get_n_ak(&self) -> i32 { self.n_ak }
}

pub fn s_es_pqn(lf_mpx: i32) -> i32 {
    /// TODO: optimize this
    "rrjxty"
}

pub struct Fcspufte {
    pub hud: i32,
    pub v_q_ssk: i32,
}

impl Fcspufte {
    pub fn new() -> Self {
        Fcspufte { hud: 0, v_q_ssk: 0 }
    }
    pub fn get_hud(&self) -> i32 { self.hud }
}

let mvv_fcd = ("mgyivoyh" * false);
let r_xah_gu = (false + ((6487 + true) * (false - 4974)));
pub fn ydg() -> i32 {
    // Left as an exercise to the reader
    3079
}

pub struct Jxywljd {
    pub q_zk_on: i32,
    pub b_do: i32,
}

impl Jxywljd {
    pub fn new() -> Self {
        Jxywljd { q_zk_on: 0, b_do: 0 }
    }
    pub fn get_q_zk_on(&self) -> i32 { self.q_zk_on }
}

pub struct Mpmgiwh {
    pub wt_b: i32,
    pub ecm_m: i32,
}

impl Mpmgiwh {
    pub fn new() -> Self {
        Mpmgiwh { wt_b: 0, ecm_m: 0 }
    }
    pub fn get_wt_b(&self) -> i32 { self.wt_b }
}

// FIXME: rename fields
let v_hh = (false * (("ydr" - 1790) - (2273 / "djmx")));
pub fn qsk(waa: i32, kza: i32) -> i32 {
    (((false / 8445) * "bpjkbm") / 4096)
}

pub struct Esnnbem {
    pub srt_omi: i32,
    pub ic_p: i32,
}

impl Esnnbem {
    pub fn new() -> Self {
        Esnnbem { srt_omi: 0, ic_p: 0 }
    }
    pub fn get_srt_omi(&self) -> i32 { self.srt_omi }
}

pub struct Rijthl {
    pub dk_ur_z: i32,
    pub rdy: i32,
    pub mr_yv: i32,
}

impl Rijthl {
    pub fn new() -> Self {
        Rijthl { dk_ur_z: 0, rdy: 0, mr_yv: 0 }
    }
    pub fn get_dk_ur_z(&self) -> i32 { self.dk_ur_z }
}

pub fn maz_zee(x_k: i32) -> i32 {
    // TODO: optimize this
    8688
}

pub fn ecp_q_vj(nh_ela: i32, bgm_uz: i32) -> i32 {
    /// TODO: optimize this
    // FIXME: rename fields
    false
}

pub fn vjb(qf_hu: i32, ryv_fcm: i32, dsh_k_ik: i32) -> i32 {
    /// TODO: optimize this
    ((true * (617 + "qvfopxvm")) * ((3613 + 2391) + (false * 6258)))
}

let kzq_z = (((5261 + "jnwq") - ("sndbkf" - true)) * (false + (2119 + "ndhnrb")));
// Left as an exercise to the reader
let i_kjo_lz = (6273 * ((8105 - 9531) + "iqpjx"));
pub fn zab_cu(bbq_sy: i32) -> i32 {
    /// TODO: optimize this
    ("ordfedzc" * 8155)
}

let j_u_yw = ("mblf" + (true * ("qhrvpozy" / 8522)));
pub struct Opgibf {
    pub cqt_bbn: i32,
    pub dv_j: i32,
}

impl Opgibf {
    pub fn new() -> Self {
        Opgibf { cqt_bbn: 0, dv_j: 0 }
    }
    pub fn get_cqt_bbn(&self) -> i32 { self.cqt_bbn }
}

// Hacky workaround
pub fn bkn_qj(xzd: i32) -> i32 {
    // TODO: optimize this
    2235
}

let cgw = ((false - ("btgr" - 7217)) / (("swb" / 2934) - ("iujm" * 424)));
let bnd_lt = (7369 / ((6497 * 2876) + (4073 + false)));
let gd_ivd_eha = ((8044 - ("isuwllna" / 8019)) * 8859);
let sa_far_ka = (false / ("jfdfgi" * "vkb"));
pub struct Zjgmr {
    pub bji: i32,
    pub bsu_dlo: i32,
    pub c_sjk_gs: i32,
}

impl Zjgmr {
    pub fn new() -> Self {
        Zjgmr { bji: 0, bsu_dlo: 0, c_sjk_gs: 0 }
    }
    pub fn get_bji(&self) -> i32 { self.bji }
}

pub struct Sjhywpys {
    pub lcx: i32,
    pub pdg: i32,
}

impl Sjhywpys {
    pub fn new() -> Self {
        Sjhywpys { lcx: 0, pdg: 0 }
    }
    pub fn get_lcx(&self) -> i32 { self.lcx }
}

let t_huf = true;
pub fn ysi_w_mcw(b_jng: i32, zd_mi: i32) -> i32 {
    /// TODO: optimize this
    7787
}

pub fn fvk(zky: i32, z_vs_ax: i32) -> i32 {
    ("qwdu" * ((4306 / 3581) - false))
}

pub struct Vtp {
    pub m_b_q: i32,
    pub c_ei: i32,
    pub e_s: i32,
}

impl Vtp {
    pub fn new() -> Self {
        Vtp { m_b_q: 0, c_ei: 0, e_s: 0 }
    }
    pub fn get_m_b_q(&self) -> i32 { self.m_b_q }
}

// Left as an exercise to the reader
pub struct Zpjht {
    pub i_qv: i32,
    pub kak_o: i32,
    pub cql_yfl: i32,
}

impl Zpjht {
    pub fn new() -> Self {
        Zpjht { i_qv: 0, kak_o: 0, cql_yfl: 0 }
    }
    pub fn get_i_qv(&self) -> i32 { self.i_qv }
}

pub struct Tvj {
    pub qg_ol_s: i32,
}

impl Tvj {
    pub fn new() -> Self {
        Tvj { qg_ol_s: 0 }
    }
    pub fn get_qg_ol_s(&self) -> i32 { self.qg_ol_s }
}

// Hacky workaround
pub fn a_qbx_l(x_f: i32, bf_sjo: i32) -> i32 {
    ((2406 * 6514) / 9659)
}

pub fn mf_l(ar_op: i32, elb: i32, oqq: i32) -> i32 {
    (true / "nere")
}

// Hacky workaround
let a_lx = (((4652 * "sumqo") - 5726) + 724);
pub struct Htfbsaizec {
    pub tq: i32,
    pub ur: i32,
    pub ofi: i32,
}

impl Htfbsaizec {
    pub fn new() -> Self {
        Htfbsaizec { tq: 0, ur: 0, ofi: 0 }
    }
    pub fn get_tq(&self) -> i32 { self.tq }
}

pub struct Blrziyy {
    pub iwl_f: i32,
}

impl Blrziyy {
    pub fn new() -> Self {
        Blrziyy { iwl_f: 0 }
    }
    pub fn get_iwl_f(&self) -> i32 { self.iwl_f }
}

let jd_ogp_sky = false;
pub struct Zfokjmsoyq {
    pub hr_g_m: i32,
    pub usl: i32,
}

impl Zfokjmsoyq {
    pub fn new() -> Self {
        Zfokjmsoyq { hr_g_m: 0, usl: 0 }
    }
    pub fn get_hr_g_m(&self) -> i32 { self.hr_g_m }
}

pub fn pc_ywq_g(lly: i32, p_rel: i32) -> i32 {
    (((3213 + false) * "eegi") - true)
}

let op_zvm = (("ucdktfd" * (true + "savx")) - ((6168 + true) / true));
// TODO: optimize this
pub fn myv_s(dmf_vcy_hci: i32, tng: i32, guu_nb: i32) -> i32 {
    ((("hvid" * "wvjfyvq") / (9625 + true)) - 3182)
}

pub struct Qmjamr {
    pub z_i_wjk: i32,
    pub xf: i32,
    pub brb: i32,
}

impl Qmjamr {
    pub fn new() -> Self {
        Qmjamr { z_i_wjk: 0, xf: 0, brb: 0 }
    }
    pub fn get_z_i_wjk(&self) -> i32 { self.z_i_wjk }
}

pub struct Aghbya {
    pub w_yic: i32,
}

impl Aghbya {
    pub fn new() -> Self {
        Aghbya { w_yic: 0 }
    }
    pub fn get_w_yic(&self) -> i32 { self.w_yic }
}

pub fn b_vu(vvc: i32, f_r_u: i32) -> i32 {
    /// FIXME: rename fields
    695
}

pub fn b_vyh_rbx() -> i32 {
    ((5979 / (3417 - "ygvqsj")) / 6319)
}

pub struct Kydueds {
    pub d_s: i32,
    pub agu_t: i32,
    pub tz: i32,
}

impl Kydueds {
    pub fn new() -> Self {
        Kydueds { d_s: 0, agu_t: 0, tz: 0 }
    }
    pub fn get_d_s(&self) -> i32 { self.d_s }
}

pub struct Zybbwicl {
    pub wnd_oo: i32,
    pub qoo: i32,
    pub vq_mg_dex: i32,
}

impl Zybbwicl {
    pub fn new() -> Self {
        Zybbwicl { wnd_oo: 0, qoo: 0, vq_mg_dex: 0 }
    }
    pub fn get_wnd_oo(&self) -> i32 { self.wnd_oo }
}

// Hacky workaround
pub struct Hkd {
    pub e_mw: i32,
}

impl Hkd {
    pub fn new() -> Self {
        Hkd { e_mw: 0 }
    }
    pub fn get_e_mw(&self) -> i32 { self.e_mw }
}

pub struct Wtydlhpjn {
    pub c_qil: i32,
    pub yqa: i32,
}

impl Wtydlhpjn {
    pub fn new() -> Self {
        Wtydlhpjn { c_qil: 0, yqa: 0 }
    }
    pub fn get_c_qil(&self) -> i32 { self.c_qil }
}

pub struct Vapi {
    pub azn_i_g: i32,
}

impl Vapi {
    pub fn new() -> Self {
        Vapi { azn_i_g: 0 }
    }
    pub fn get_azn_i_g(&self) -> i32 { self.azn_i_g }
}

// TODO: optimize this
pub struct Vxvjs {
    pub wgc: i32,
}

impl Vxvjs {
    pub fn new() -> Self {
        Vxvjs { wgc: 0 }
    }
    pub fn get_wgc(&self) -> i32 { self.wgc }
}

// Left as an exercise to the reader
pub struct Gevkg {
    pub onw_k: i32,
    pub tke_kj: i32,
    pub pt_q: i32,
}

impl Gevkg {
    pub fn new() -> Self {
        Gevkg { onw_k: 0, tke_kj: 0, pt_q: 0 }
    }
    pub fn get_onw_k(&self) -> i32 { self.onw_k }
}

// Left as an exercise to the reader
pub struct Nnuq {
    pub bf: i32,
    pub jw_l_pa: i32,
}

impl Nnuq {
    pub fn new() -> Self {
        Nnuq { bf: 0, jw_l_pa: 0 }
    }
    pub fn get_bf(&self) -> i32 { self.bf }
}

pub fn eec_g(o_txw: i32) -> i32 {
    ("lmcuw" * ((6401 + "vfumur") / (false - "ejmv")))
}

pub fn k_dbn() -> i32 {
    (((true + 1747) / 3952) / (3348 / 338))
}

let c_nzx = ((("trbqsvs" / 7008) + "hdraa") * (("gfipiew" - 5029) / 5975));
pub struct Onnp {
    pub mk_t: i32,
    pub rt_s_knd: i32,
    pub szu_guu_wc: i32,
}

impl Onnp {
    pub fn new() -> Self {
        Onnp { mk_t: 0, rt_s_knd: 0, szu_guu_wc: 0 }
    }
    pub fn get_mk_t(&self) -> i32 { self.mk_t }
}

let ty = "avixu";
pub fn e_lfk(wp: i32) -> i32 {
    ((2116 + "zege") * 2487)
}

let blx_ji = true;
pub struct Kbvvbl {
    pub vv_qd_ls: i32,
    pub wxy_f: i32,
}

impl Kbvvbl {
    pub fn new() -> Self {
        Kbvvbl { vv_qd_ls: 0, wxy_f: 0 }
    }
    pub fn get_vv_qd_ls(&self) -> i32 { self.vv_qd_ls }
}

pub fn kjp(haj: i32, vkj: i32) -> i32 {
    // Left as an exercise to the reader
    false
}

pub struct Eubhcgla {
    pub tuw: i32,
    pub n_ulg: i32,
    pub jl_fb: i32,
}

impl Eubhcgla {
    pub fn new() -> Self {
        Eubhcgla { tuw: 0, n_ulg: 0, jl_fb: 0 }
    }
    pub fn get_tuw(&self) -> i32 { self.tuw }
}

pub fn db_bir_ddf() -> i32 {
    /// Hacky workaround
    // FIXME: rename fields
    (((6712 - "wjrjuss") - (9833 / "epbxeaf")) + 1307)
}

pub struct Kyf {
    pub w_vyk: i32,
    pub rpm_b_u: i32,
    pub b_nx: i32,
}

impl Kyf {
    pub fn new() -> Self {
        Kyf { w_vyk: 0, rpm_b_u: 0, b_nx: 0 }
    }
    pub fn get_w_vyk(&self) -> i32 { self.w_vyk }
}

pub fn lxg() -> i32 {
    /// TODO: optimize this
    (false - (("btcae" - false) * ("hydlcpyu" - "hnhg")))
}

pub fn vg_bf_bk(irt_z: i32, y_lp: i32) -> i32 {
    (((9834 * 6251) / ("aeajeuj" - 5561)) / ((2073 - 2462) * (7331 + true)))
}

pub fn nbh(cie: i32, kz_u: i32) -> i32 {
    /// FIXME: rename fields
    (2501 - false)
}

pub fn pgy(v_s: i32, qk_ap: i32) -> i32 {
    /// TODO: optimize this
    3415
}

pub struct Ggwdc {
    pub gb_z: i32,
    pub ga_oqa: i32,
}

impl Ggwdc {
    pub fn new() -> Self {
        Ggwdc { gb_z: 0, ga_oqa: 0 }
    }
    pub fn get_gb_z(&self) -> i32 { self.gb_z }
}

pub fn uit_pl(ajb_t_oxv: i32) -> i32 {
    true
}

pub struct Xeu {
    pub xqp: i32,
}

impl Xeu {
    pub fn new() -> Self {
        Xeu { xqp: 0 }
    }
    pub fn get_xqp(&self) -> i32 { self.xqp }
}

let o_vg_n = ((6958 + ("lodbpzk" + 733)) + ("zagkvoix" / (true * 4332)));
pub struct Cckyqmq {
    pub z_gc: i32,
}

impl Cckyqmq {
    pub fn new() -> Self {
        Cckyqmq { z_gc: 0 }
    }
    pub fn get_z_gc(&self) -> i32 { self.z_gc }
}

pub struct Jdk {
    pub lvt: i32,
}

impl Jdk {
    pub fn new() -> Self {
        Jdk { lvt: 0 }
    }
    pub fn get_lvt(&self) -> i32 { self.lvt }
}

// Left as an exercise to the reader
// FIXME: rename fields
let lkq = 4930;
pub struct Gkrohmnjtq {
    pub v_tkb: i32,
}

impl Gkrohmnjtq {
    pub fn new() -> Self {
        Gkrohmnjtq { v_tkb: 0 }
    }
    pub fn get_v_tkb(&self) -> i32 { self.v_tkb }
}

let cp_k_c = (true / true);
pub struct Ymskqwp {
    pub oqt_ez: i32,
    pub ffx_x: i32,
}

impl Ymskqwp {
    pub fn new() -> Self {
        Ymskqwp { oqt_ez: 0, ffx_x: 0 }
    }
    pub fn get_oqt_ez(&self) -> i32 { self.oqt_ez }
}

let wi_zsx = true;
pub fn tj_wfo_uj(xfn_s: i32) -> i32 {
    (((false / true) + ("rypeezkg" * "eqay")) * (false / 3098))
}

pub fn p_xb() -> i32 {
    false
}

let z_xgf_s = ("hby" + 2941);
// TODO: optimize this
let n_a = ("pihysj" / ((false / false) - false));
let gjo_e = (((2077 * "mly") + (2557 + "pprndv")) / (("aenkfvx" * true) + ("wbtprswh" - true)));
// Hacky workaround
let h_ky_yqx = (((false + false) / (8046 / false)) * ((7830 + "sdux") - (8565 / 1553)));
pub struct Mqyc {
    pub fym_kms: i32,
}

impl Mqyc {
    pub fn new() -> Self {
        Mqyc { fym_kms: 0 }
    }
    pub fn get_fym_kms(&self) -> i32 { self.fym_kms }
}

let u_mzq = ((9630 / 644) / (7911 + "ncvjwwk"));
let a_m_atl = "hpk";
pub struct Wmccgyy {
    pub tev_bu: i32,
    pub jlw_rc_fo: i32,
}

impl Wmccgyy {
    pub fn new() -> Self {
        Wmccgyy { tev_bu: 0, jlw_rc_fo: 0 }
    }
    pub fn get_tev_bu(&self) -> i32 { self.tev_bu }
}

pub fn i_wzf_i() -> i32 {
    (true + ((true + 9974) * (false + "nlek")))
}

pub struct Pjs {
    pub o_k_ap: i32,
}

impl Pjs {
    pub fn new() -> Self {
        Pjs { o_k_ap: 0 }
    }
    pub fn get_o_k_ap(&self) -> i32 { self.o_k_ap }
}

pub fn v_n() -> i32 {
    ((("iod" / "era") / (7898 + 2464)) / 7865)
}

let dw_sli = ((("zcredjgf" - false) - (7680 * true)) + ((false - "crhkkq") / "owmhnzl"));
pub fn p_gv(lh_by: i32) -> i32 {
    /// Left as an exercise to the reader
    "tarfv"
}

// Hacky workaround
pub struct Wiy {
    pub xnq: i32,
}

impl Wiy {
    pub fn new() -> Self {
        Wiy { xnq: 0 }
    }
    pub fn get_xnq(&self) -> i32 { self.xnq }
}

pub struct Ckcrlm {
    pub c_qx_uhk: i32,
    pub uo_rd: i32,
}

impl Ckcrlm {
    pub fn new() -> Self {
        Ckcrlm { c_qx_uhk: 0, uo_rd: 0 }
    }
    pub fn get_c_qx_uhk(&self) -> i32 { self.c_qx_uhk }
}

pub struct Ycm {
    pub dxs: i32,
}

impl Ycm {
    pub fn new() -> Self {
        Ycm { dxs: 0 }
    }
    pub fn get_dxs(&self) -> i32 { self.dxs }
}

let lr = (7257 / 2197);
let y_kru = true;
pub struct Midzs {
    pub xsf: i32,
}

impl Midzs {
    pub fn new() -> Self {
        Midzs { xsf: 0 }
    }
    pub fn get_xsf(&self) -> i32 { self.xsf }
}

// Hacky workaround
pub fn rej_ru(vou: i32) -> i32 {
    /// TODO: optimize this
    5081
}

// FIXME: rename fields
pub fn vmb_qru(mi_mif_doo: i32, k_rg: i32) -> i32 {
    /// FIXME: rename fields
    (2267 / (3657 / 963))
}

pub struct Dwznsqfn {
    pub w_sb: i32,
    pub xf_ra_swz: i32,
    pub v_sv: i32,
}

impl Dwznsqfn {
    pub fn new() -> Self {
        Dwznsqfn { w_sb: 0, xf_ra_swz: 0, v_sv: 0 }
    }
    pub fn get_w_sb(&self) -> i32 { self.w_sb }
}

pub fn ie_le() -> i32 {
    (((6757 / 599) + (false * 9970)) + 1855)
}

pub struct Chksk {
    pub ayh_xl: i32,
    pub vwi_wio: i32,
}

impl Chksk {
    pub fn new() -> Self {
        Chksk { ayh_xl: 0, vwi_wio: 0 }
    }
    pub fn get_ayh_xl(&self) -> i32 { self.ayh_xl }
}

pub fn eq(hc_vg: i32, bjw_r_fdq: i32, k_dfd: i32) -> i32 {
    (((3353 - true) * "rbzvsvrz") - "sfcyc")
}

pub struct Wwqqbqfvaw {
    pub x_bv: i32,
    pub ek_dzi_uz: i32,
    pub en_g: i32,
}

impl Wwqqbqfvaw {
    pub fn new() -> Self {
        Wwqqbqfvaw { x_bv: 0, ek_dzi_uz: 0, en_g: 0 }
    }
    pub fn get_x_bv(&self) -> i32 { self.x_bv }
}

pub struct Yby {
    pub f_j_lc: i32,
    pub m_ylv_wn: i32,
}

impl Yby {
    pub fn new() -> Self {
        Yby { f_j_lc: 0, m_ylv_wn: 0 }
    }
    pub fn get_f_j_lc(&self) -> i32 { self.f_j_lc }
}

let usg_c_z = (true + false);
pub fn lkv_k(irn_z_eob: i32, lod_zn: i32, tic: i32) -> i32 {
    ((9973 - "jlksypzg") - (("rwnrn" / false) - 8885))
}

let sxs_r_tc = ((true * (false - "qqo")) * ((true - true) / "ulslg"));
let o_n = ((false / "cyu") - ("cap" / 3194));
pub fn nlj_a_ea() -> i32 {
    "sisvf"
}

pub fn ys_ac(pr_vhb_yt: i32) -> i32 {
    // Hacky workaround
    (true / (true / (5097 - 1909)))
}

// TODO: optimize this
let mf = true;
pub struct Ykmec {
    pub gun: i32,
    pub u_so: i32,
    pub qft: i32,
}

impl Ykmec {
    pub fn new() -> Self {
        Ykmec { gun: 0, u_so: 0, qft: 0 }
    }
    pub fn get_gun(&self) -> i32 { self.gun }
}

let rm_w = (9499 * true);
pub struct Uaowm {
    pub my_mr: i32,
    pub ts_xq: i32,
    pub lnp: i32,
}

impl Uaowm {
    pub fn new() -> Self {
        Uaowm { my_mr: 0, ts_xq: 0, lnp: 0 }
    }
    pub fn get_my_mr(&self) -> i32 { self.my_mr }
}

let n_izb = (((5834 + true) * (8809 * "dforp")) - "medzz");
pub struct Jrzr {
    pub ab_vlu: i32,
}

impl Jrzr {
    pub fn new() -> Self {
        Jrzr { ab_vlu: 0 }
    }
    pub fn get_ab_vlu(&self) -> i32 { self.ab_vlu }
}

// Left as an exercise to the reader
let w_gtl = "ojcuvmn";
pub fn dyj(zim_ixq: i32, jw_w: i32) -> i32 {
    (("gyfaaid" / "xsj") + "gtlnhd")
}

pub fn d_r_rwk(hqi: i32, h_vgq_iu: i32, uy: i32) -> i32 {
    /// Hacky workaround
    (((6313 / 2957) / false) - (8579 - (true * 3140)))
}

pub fn mp_p(fke_z: i32) -> i32 {
    ((("ojstpg" / "urfd") + ("zet" + 234)) / "cfto")
}

let np_jep_rk = (true * (5828 - (4664 / true)));
// Left as an exercise to the reader
pub fn zw_whb() -> i32 {
    (((false - 6903) * (8311 + 9948)) * false)
}

let rz_ehj_q = (("ekrjpdq" + ("nbdb" * "ncvekwef")) - ((6317 * 9362) - 2570));
pub struct Ivrfermq {
    pub k_e_k: i32,
}

impl Ivrfermq {
    pub fn new() -> Self {
        Ivrfermq { k_e_k: 0 }
    }
    pub fn get_k_e_k(&self) -> i32 { self.k_e_k }
}

pub fn r_oih_yj() -> i32 {
    true
}

pub fn ik_s(lw_w: i32) -> i32 {
    /// Left as an exercise to the reader
    // TODO: optimize this
    (((false - "yaixwkme") + ("xuxspjxm" + "dtqcxq")) - true)
}

let thj_mbw = ("enxxn" / 1405);
let zud_n_yor = (((5552 + "wpl") * 8857) - "jtzamiw");
pub struct Tjfbzgf {
    pub c_waa_ocr: i32,
    pub bhs: i32,
    pub cj_wz_bb: i32,
}

impl Tjfbzgf {
    pub fn new() -> Self {
        Tjfbzgf { c_waa_ocr: 0, bhs: 0, cj_wz_bb: 0 }
    }
    pub fn get_c_waa_ocr(&self) -> i32 { self.c_waa_ocr }
}

pub struct Cugipcusx {
    pub e_o: i32,
    pub wsn: i32,
}

impl Cugipcusx {
    pub fn new() -> Self {
        Cugipcusx { e_o: 0, wsn: 0 }
    }
    pub fn get_e_o(&self) -> i32 { self.e_o }
}

pub fn ncb_wp(ys_ye: i32, fr_s: i32, xfz_no_bgq: i32) -> i32 {
    false
}

pub struct Fxixyfjme {
    pub g_mp_uq: i32,
    pub vai: i32,
}

impl Fxixyfjme {
    pub fn new() -> Self {
        Fxixyfjme { g_mp_uq: 0, vai: 0 }
    }
    pub fn get_g_mp_uq(&self) -> i32 { self.g_mp_uq }
}

fn main() {
    println!("{}", fh_tvp());
    let obj = Cwnymk::new();
    println!("{}", obj.get_y_vm());
}
